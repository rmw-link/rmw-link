import{_ as i,o as t,c as d,a as e,b as r,F as s,e as o,d as a,r as c}from"./app.278ef889.js";const l={},m=o('<h1 id="mdi-incrustacion-de-codigo-en-markdown-numero-de-version-markdown" tabindex="-1"><a class="header-anchor" href="#mdi-incrustacion-de-codigo-en-markdown-numero-de-version-markdown" aria-hidden="true">#</a> mdi : incrustaci\xF3n de c\xF3digo en markdown / n\xFAmero de versi\xF3n / markdown ...</h1><h2 id="prefacio" tabindex="-1"><a class="header-anchor" href="#prefacio" aria-hidden="true">#</a> Prefacio</h2><p>Es un requisito com\xFAn incrustar los n\xFAmeros de versi\xF3n y el c\xF3digo de demostraci\xF3n en <code>readme.md</code>.</p><p>Hay algunas herramientas similares en el mercado, pero no funcionan bien. As\xED que escrib\xED uno yo mismo (archivo ejecutable de 256 KB).</p><p>La funcionalidad es tal que escribir una declaraci\xF3n como <code>&gt; ./demo.js</code> en markdown incrustar\xE1 el c\xF3digo, y el contenido resultante se muestra en la captura de pantalla de abajo :</p><p><img src="//irmw.gumlet.io/i9g9We.png" alt=""></p>',6),h=a("Alternativamente, con la "),_={href:"https://rmw.link/log/2021-12-09-markdown-translate",target:"_blank",rel:"noopener noreferrer"},u=a("herramienta de traducci\xF3n markdown"),p=a(" que escrib\xED "),g={href:"https://rmw.link/log/2021-12-09-markdown-translate",target:"_blank",rel:"noopener noreferrer"},b=a("basada en deepl"),f=a(", el chino y el ingl\xE9s pueden ser traducidos y renderizados autom\xE1ticamente en el mismo archivo "),k=e("code",null,"readme.md",-1),x=a("."),w=e("p",null,"La experiencia del usuario ser\xE1 muy buena con un punto de anclaje en el texto en la parte superior del readme de github (abajo), en el que se puede hacer clic para saltar a las distintas versiones ling\xFC\xEDsticas de las instrucciones.",-1),v=e("p",null,[e("img",{src:"//irmw.gumlet.io/YQfKiS.png",alt:""})],-1),y=e("h2",{id:"instalacion",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instalacion","aria-hidden":"true"},"#"),a(" Instalaci\xF3n")],-1),j={href:"https://github.com/rmw-lib/mdi/releases",target:"_blank",rel:"noopener noreferrer"},q=a("Descargar desde github"),B=a(" o "),V=e("code",null,"cargo install mdi",-1),E={href:"https://github.com/rmw-lib/mdi",target:"_blank",rel:"noopener noreferrer"},L=a("Direcci\xF3n del c\xF3digo base"),N=o('<h2 id="utilice" tabindex="-1"><a class="header-anchor" href="#utilice" aria-hidden="true">#</a> Utilice</h2><p><code>mdi [dir]</code></p><p>Buscar\xE1 en el directorio <code>xxx.mdi.md</code> y reemplazar\xE1 <code>&gt; ./xxx.rs</code> con el contenido del c\xF3digo incrustado y lo enviar\xE1 a <code>xxx.md</code>.</p><p>Si el archivo incrustado es un archivo markdown, se renderizar\xE1n recursivamente las referencias al mismo.</p>',4),z=a("Ver el archivo de demostraci\xF3n "),I={href:"https://raw.githubusercontent.com/rmw-lib/mdi/master/readme.mdi.md",target:"_blank",rel:"noopener noreferrer"},S=a("readme.mdi.md");function A(D,F){const n=c("ExternalLinkIcon");return t(),d(s,null,[m,e("p",null,[h,e("a",_,[u,r(n)]),p,e("a",g,[b,r(n)]),f,k,x]),w,v,y,e("p",null,[e("a",j,[q,r(n)]),B,V]),e("p",null,[e("a",E,[L,r(n)])]),N,e("p",null,[z,e("a",I,[S,r(n)])])],64)}var C=i(l,[["render",A],["__file","2022-07-20_mdi.html.vue"]]);export{C as default};
