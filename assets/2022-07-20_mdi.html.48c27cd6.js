import{_ as n,o,c as d,a as e,b as i,F as c,e as t,d as a,r as s}from"./app.278ef889.js";const l={},u=t('<h1 id="mdi-incorporarea-codului-in-markdown-numar-de-versiune-markdown" tabindex="-1"><a class="header-anchor" href="#mdi-incorporarea-codului-in-markdown-numar-de-versiune-markdown" aria-hidden="true">#</a> mdi : \xEEncorporarea codului \xEEn markdown / num\u0103r de versiune / markdown ...</h1><h2 id="prefata" tabindex="-1"><a class="header-anchor" href="#prefata" aria-hidden="true">#</a> Prefa\u021B\u0103</h2><p>Includerea numerelor de versiune \u0219i a codului demo \xEEn <code>readme.md</code> este o cerin\u021B\u0103 foarte frecvent\u0103.</p><p>Exist\u0103 unele instrumente similare pe pia\u021B\u0103, dar acestea nu func\u021Bioneaz\u0103 bine. A\u0219a c\u0103 am scris unul eu \xEEnsumi (dimensiunea fi\u0219ierului executabil 256 KB).</p><p>Func\u021Bionalitatea este de a\u0219a natur\u0103 \xEEnc\xE2t scrierea unei declara\u021Bii precum <code>&gt; ./demo.js</code> \xEEn markdown va \xEEncorpora codul, iar con\u021Binutul rezultat este prezentat \xEEn captura de ecran de mai jos :</p><p><img src="//irmw.gumlet.io/i9g9We.png" alt=""></p>',6),m=a("\xCEn plus, cu ajutorul "),p={href:"https://rmw.link/log/2021-12-09-markdown-translate",target:"_blank",rel:"noopener noreferrer"},_=a("instrumentului de traducere markdown bazat pe deepl"),h=a(" pe care l-am scris, este posibil\u0103 traducerea \u0219i redarea automat\u0103 a limbilor chinez\u0103 \u0219i englez\u0103 \xEEn acela\u0219i fi\u0219ier "),f=e("code",null,"readme.md",-1),b=a("."),x=e("p",null,"Experien\u021Ba utilizatorului va fi foarte bun\u0103, cu un punct de ancorare \xEEn text \xEEn partea de sus a textului din github readme (mai jos), pe care se poate face clic pentru a trece la diferitele versiuni lingvistice ale instruc\u021Biunilor.",-1),g=e("p",null,[e("img",{src:"//irmw.gumlet.io/YQfKiS.png",alt:""})],-1),k=e("h2",{id:"instalare",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instalare","aria-hidden":"true"},"#"),a(" Instalare")],-1),v={href:"https://github.com/rmw-lib/mdi/releases",target:"_blank",rel:"noopener noreferrer"},w=a("Desc\u0103rca\u021Bi de pe github"),z=a(" sau "),E=e("code",null,"cargo install mdi",-1),V={href:"https://github.com/rmw-lib/mdi",target:"_blank",rel:"noopener noreferrer"},j=a("Adresa Codebase"),B=t('<h2 id="utilizati" tabindex="-1"><a class="header-anchor" href="#utilizati" aria-hidden="true">#</a> Utiliza\u021Bi</h2><p><code>mdi [dir]</code></p><p>Acesta va c\u0103uta \xEEn directorul <code>xxx.mdi.md</code> \u0219i va \xEEnlocui <code>&gt; ./xxx.rs</code> cu con\u021Binutul codului \xEEncorporat \u0219i \xEEl va trimite la <code>xxx.md</code>.</p><p>\xCEn cazul \xEEn care fi\u0219ierul \xEEncorporat este un fi\u0219ier markdown, se vor face referin\u021Be la acesta \xEEn mod recursiv.</p>',4),I=a("Vizualiza\u021Bi fi\u0219ierul demo "),N={href:"https://raw.githubusercontent.com/rmw-lib/mdi/master/readme.mdi.md",target:"_blank",rel:"noopener noreferrer"},A=a("readme.mdi.md");function F(C,K){const r=s("ExternalLinkIcon");return o(),d(c,null,[u,e("p",null,[m,e("a",p,[_,i(r)]),h,f,b]),x,g,k,e("p",null,[e("a",v,[w,i(r)]),z,E]),e("p",null,[e("a",V,[j,i(r)])]),B,e("p",null,[I,e("a",N,[A,i(r)])])],64)}var S=n(l,[["render",F],["__file","2022-07-20_mdi.html.vue"]]);export{S as default};
