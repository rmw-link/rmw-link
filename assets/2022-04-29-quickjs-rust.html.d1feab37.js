import{_ as o,r as c,o as e,c as u,a as n,b as t,F as l,d as s,e as p}from"./app.4a0564e2.js";const k={},i=n("h1",{id:"\u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044F-quickjs-\u0434\u043B\u044F-\u0438\u043C\u043F\u043E\u0440\u0442\u0430-rust-\u0444\u0443\u043D\u043A\u0446\u0438\u0438-\u043D\u043E\u0432\u044B\u0438-\u0432\u0437\u0433\u043B\u044F\u0434-\u043D\u0430-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435-kraken",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044F-quickjs-\u0434\u043B\u044F-\u0438\u043C\u043F\u043E\u0440\u0442\u0430-rust-\u0444\u0443\u043D\u043A\u0446\u0438\u0438-\u043D\u043E\u0432\u044B\u0438-\u0432\u0437\u0433\u043B\u044F\u0434-\u043D\u0430-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435-kraken","aria-hidden":"true"},"#"),s(" \u041C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044F quickjs \u0434\u043B\u044F \u0438\u043C\u043F\u043E\u0440\u0442\u0430 rust-\u0444\u0443\u043D\u043A\u0446\u0438\u0439 - \u043D\u043E\u0432\u044B\u0439 \u0432\u0437\u0433\u043B\u044F\u0434 \u043D\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435 Kraken")],-1),r=n("h2",{id:"\u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435-\u043A\u043E\u0434\u043E\u0432",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435-\u043A\u043E\u0434\u043E\u0432","aria-hidden":"true"},"#"),s(" \u0425\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 \u043A\u043E\u0434\u043E\u0432")],-1),d={href:"https://github.com/rmw-lib/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},m=s("github"),f={href:"https://gitee.com/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},_=s("gitee"),y={href:"https://gitflic.ru/project/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},w=s("gitflic"),g=n("h2",{id:"\u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u0435",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u0435","aria-hidden":"true"},"#"),s(" \u041F\u0440\u043E\u0438\u0441\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u0435")],-1),h={href:"https://openkraken.com",target:"_blank",rel:"noopener noreferrer"},b=s("Kraken"),x=s(" - \u044D\u0442\u043E \u0432\u044B\u0441\u043E\u043A\u043E\u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0434\u0432\u0438\u0436\u043E\u043A \u0432\u0435\u0431-\u0440\u0435\u043D\u0434\u0435\u0440\u0438\u043D\u0433\u0430 \u043D\u0430 \u0431\u0430\u0437\u0435 "),j=n("code",null,"Flutter",-1),S=s(", \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442 "),q={href:"https://github.com/openkraken/kraken/tree/main/bridge/third_party/quickjs",target:"_blank",rel:"noopener noreferrer"},J=s("quickjs"),v=s(" \u0432 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432\u043E\u0433\u043E \u0434\u0432\u0438\u0436\u043A\u0430."),V=n("p",null,[s("\u042F \u0445\u043E\u0442\u0435\u043B \u043D\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0439 \u0434\u043B\u044F Kraken, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044F "),n("code",null,"rust"),s(".")],-1),C=s("Kraken "),E={href:"https://openkraken.com/guide/advanced/custom-js-api",target:"_blank",rel:"noopener noreferrer"},N=s("\u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u043F\u0438\u0441\u044C \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0439 \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E "),I=n("code",null,"dart",-1),D=s(" ."),U=s("\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 "),T={href:"https://github.com/fzyzcjy/flutter_rust_bridge",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"flutter_rust_bridge",-1),O=s(),L=n("code",null,"rust",-1),R=s(" \u0438 "),M=n("code",null,"dart",-1),A=s("."),B=n("p",null,[s("\u041E\u0431\u044A\u0435\u0434\u0438\u043D\u0438\u0432 \u044D\u0442\u0438 \u0434\u0432\u0430 \u043F\u0443\u043D\u043A\u0442\u0430, \u043C\u043E\u0436\u043D\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0432\u044B\u0432\u043E\u0434, \u0447\u0442\u043E \u043F\u0438\u0441\u0430\u0442\u044C \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u044F Kraken \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E "),n("code",null,"rust"),s(" \u043D\u0435\u0441\u043B\u043E\u0436\u043D\u043E."),n("br"),s(" \u041E\u0434\u043D\u0430\u043A\u043E \u044D\u0442\u043E \u0440\u0435\u0448\u0435\u043D\u0438\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043E\u043B\u044C\u0448\u0438\u0445 \u0437\u0430\u0442\u0440\u0430\u0442 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u0438, \u043F\u043E\u0441\u043A\u043E\u043B\u044C\u043A\u0443 "),n("code",null,"dart"),s(" \u0432\u044B\u0437\u044B\u0432\u0430\u0435\u0442 "),n("code",null,"rust"),s(", \u0430 "),n("code",null,"quickjs"),s(" \u0432\u044B\u0437\u044B\u0432\u0430\u0435\u0442 "),n("code",null,"dart"),s(".")],-1),K=s("\u0421 \u0434\u0440\u0443\u0433\u043E\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u044B, \u0432 \u0442\u043E \u0432\u0440\u0435\u043C\u044F \u043A\u0430\u043A \u0441\u043E\u043E\u0431\u0449\u0435\u0441\u0442\u0432\u043E "),z=n("code",null,"rust",-1),P=s(" \u0438\u043C\u0435\u0435\u0442 "),Q={href:"https://github.com/DelSkayn/rquickjs",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"rquickjs",-1),G=s(" \u0442\u0430\u043A\u0438\u0435 \u043E\u0431\u0440\u0430\u0449\u0435\u043D\u0438\u044F \u043A \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0435 "),H=n("code",null,"quickjs",-1),X=s(" \u0432 "),Z=n("code",null,"rust",-1),Y=s("."),$=n("br",null,null,-1),nn=s(" \u041E\u0434\u043D\u0430\u043A\u043E \u043E\u043D\u0438 \u0432\u044B\u0437\u044B\u0432\u0430\u044E\u0442 "),sn=n("code",null,"quickjs",-1),an=s(" \u0432\u043C\u0435\u0441\u0442\u043E \u0432\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u043D\u0438\u044F "),tn=n("code",null,"quickjs",-1),pn=s("\u0438 \u043D\u0435 \u043C\u043E\u0433\u0443\u0442 \u0431\u044B\u0442\u044C \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u044B \u0434\u043B\u044F \u043C\u0430\u0433\u0438\u0438 "),on=n("code",null,"quickjs",-1),cn=s("."),en=p(`<p>\u0412 \u044D\u0442\u043E\u0439 \u043A\u043E\u0434\u043E\u0432\u043E\u0439 \u0431\u0430\u0437\u0435 \u044F \u0440\u0435\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043B \u043D\u043E\u0432\u043E\u0435 \u0440\u0435\u0448\u0435\u043D\u0438\u0435: \u043F\u0440\u044F\u043C\u043E\u0435 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u0438\u0441\u0445\u043E\u0434\u043D\u043E\u0433\u043E \u043A\u043E\u0434\u0430 <code>quickjs</code> \u0434\u043B\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u044F <code>rust</code>.</p><p>\u042D\u0442\u043E \u0443\u043D\u0438\u0432\u0435\u0440\u0441\u0430\u043B\u044C\u043D\u043E\u0435 \u0440\u0435\u0448\u0435\u043D\u0438\u0435, \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u043D\u0435 \u0442\u043E\u043B\u044C\u043A\u043E \u0434\u043B\u044F \u043C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438 Kraken, \u043D\u043E \u0438 \u0434\u043B\u044F \u0432\u0441\u0435\u0445 \u0444\u0440\u0435\u0439\u043C\u0432\u043E\u0440\u043A\u043E\u0432 \u0438 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A, \u0432 \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0432\u0441\u0442\u0440\u043E\u0435\u043D <code>quickjs</code>.</p><h2 id="\u0434\u0435\u043C\u043E\u043D\u0441\u0442\u0440\u0430\u0446\u0438\u044F" tabindex="-1"><a class="header-anchor" href="#\u0434\u0435\u043C\u043E\u043D\u0441\u0442\u0440\u0430\u0446\u0438\u044F" aria-hidden="true">#</a> \u0414\u0435\u043C\u043E\u043D\u0441\u0442\u0440\u0430\u0446\u0438\u044F</h2><p>\u041A\u043E\u0434 test.js \u0432\u044B\u0433\u043B\u044F\u0434\u0438\u0442 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C :</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">try_run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u274C&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> rust <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;export from rust :&quot;</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>rust<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
  fib<span class="token punctuation">,</span>
  sleep
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;begin sleep 2s&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sleep done&#39;</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fib(3) =&#39;</span><span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;try catch example :&quot;</span><span class="token punctuation">)</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0412\u044B\u043F\u043E\u043B\u043D\u0438\u0442\u044C <code>./quickjs/qjs test.js</code>, \u0432\u044B\u0445\u043E\u0434:</p><div class="language-text ext-text"><pre class="language-text"><code>export from rust : fib,sleep
begin sleep 2s
sleep done
fib(3) = 6
try catch example :
\u274C miss : args need 1 pass 0
    at fib (native)
    at try_run (test.js:8)
    at &lt;anonymous&gt; (test.js:27)

\u274C not number : args position 0
    at fib (native)
    at try_run (test.js:6)
    at &lt;anonymous&gt; (test.js:28)
</code></pre></div><h3 id="\u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F-fib-\u0432-rust" tabindex="-1"><a class="header-anchor" href="#\u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F-fib-\u0432-rust" aria-hidden="true">#</a> \u0420\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F fib \u0432 rust</h3><p>\u0424\u0443\u043D\u043A\u0446\u0438\u044F fib, \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u0443\u0435\u043C\u0430\u044F \u0432 js, \u0432\u0437\u044F\u0442\u0430 \u0441 \u0441\u0430\u0439\u0442\u0430 <code>rust/src/export/fib.rs</code>, \u0438 \u0435\u0435 \u043A\u043E\u0434 \u0432\u044B\u0433\u043B\u044F\u0434\u0438\u0442 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0412 \u043D\u0430\u0441\u0442\u043E\u044F\u0449\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u043D\u044B\u0439 \u043C\u0430\u043A\u0440\u043E\u0441 <code>#[js]</code> \u043F\u0440\u043E\u0441\u0442\u043E \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u0442 \u043A\u043E\u043D\u0441\u0442\u0430\u043D\u0442\u0443 <code>fib_args_len</code>, \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u0442 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0430\u0440\u0433\u0443\u043C\u0435\u043D\u0442\u043E\u0432 \u0444\u0443\u043D\u043A\u0446\u0438\u0438.</p><p>\u0412 \u0431\u0443\u0434\u0443\u0449\u0435\u043C \u043C\u043E\u0436\u043D\u043E \u0431\u0443\u0434\u0435\u0442 \u043D\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u043D\u044B\u0439 \u043C\u0430\u043A\u0440\u043E\u0441 <code>./rust_macro</code>, \u0447\u0442\u043E\u0431\u044B \u043E\u0431\u0435\u0441\u043F\u0435\u0447\u0438\u0442\u044C \u043F\u043E\u043B\u043D\u043E\u0441\u0442\u044C\u044E \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u044D\u043A\u0441\u043F\u043E\u0440\u0442 \u0444\u0443\u043D\u043A\u0446\u0438\u0439.</p><h3 id="\u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F-\u0444\u0443\u043D\u043A\u0446\u0438\u0438-\u0441\u043D\u0430-\u0432-rust" tabindex="-1"><a class="header-anchor" href="#\u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F-\u0444\u0443\u043D\u043A\u0446\u0438\u0438-\u0441\u043D\u0430-\u0432-rust" aria-hidden="true">#</a> \u0420\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u0441\u043D\u0430 \u0432 rust</h3><p>\u0424\u0443\u043D\u043A\u0446\u0438\u044F sleep, \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u0430\u044F \u0432 js, \u0432\u0437\u044F\u0442\u0430 \u0441 \u0441\u0430\u0439\u0442\u0430 <code>rust/src/export/sleep.rs</code>, \u0430 \u043A\u043E\u0434 \u0432\u044B\u0433\u043B\u044F\u0434\u0438\u0442 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u041A\u0430\u043A \u0432\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044C \u0432\u044B\u0448\u0435, \u0432\u0441\u0435 \u044D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u0443\u0435\u043C\u044B\u0435 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u044B \u0432 \u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0435 <code>./rust/src/export</code>. \u042D\u0442\u043E\u0442 \u043A\u0430\u0442\u0430\u043B\u043E\u0433 <code>mod.rs</code> \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0441\u043E\u0437\u0434\u0430\u0435\u0442\u0441\u044F \u043F\u0440\u0438 \u0437\u0430\u043F\u0443\u0441\u043A\u0435 <code>./rust/build.xsh</code>, \u044D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u0443\u044F \u043F\u043E\u0434 \u043D\u0435\u0433\u043E \u0432\u0441\u0435 \u0444\u0430\u0439\u043B\u044B <code>.rs</code>.</p><h3 id="\u0447\u0442\u0435\u043D\u0438\u0435-\u0438-\u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430-\u0432\u0445\u043E\u0434\u044F\u0449\u0438\u0445-\u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u043E\u0432-js" tabindex="-1"><a class="header-anchor" href="#\u0447\u0442\u0435\u043D\u0438\u0435-\u0438-\u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430-\u0432\u0445\u043E\u0434\u044F\u0449\u0438\u0445-\u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u043E\u0432-js" aria-hidden="true">#</a> \u0427\u0442\u0435\u043D\u0438\u0435 \u0438 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0432\u0445\u043E\u0434\u044F\u0449\u0438\u0445 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u043E\u0432 js</h3><p>\u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B \u0441\u0447\u0438\u0442\u044B\u0432\u0430\u044E\u0442\u0441\u044F \u0438 \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u044E\u0442\u0441\u044F \u043D\u0430 \u0441\u0430\u0439\u0442\u0435 <code>src/js/arg.rs</code> \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0433\u043E \u043A\u043E\u0434\u0430 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0412 \u043D\u0430\u0441\u0442\u043E\u044F\u0449\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u0442\u0441\u044F \u0442\u043E\u043B\u044C\u043A\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0430\u0440\u0433\u0443\u043C\u0435\u043D\u0442\u043E\u0432 \u0438 \u0441\u0447\u0438\u0442\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u0442\u0438\u043F i64.</p>`,20),un=s("\u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u044D\u0442\u0438 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u043F\u043E \u043C\u0435\u0440\u0435 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E\u0441\u0442\u0438, \u0441\u043C. \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u0432 "),ln={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},kn=s("qjs_sys"),rn=s(", \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441 "),dn=n("code",null,"JS_To",-1),mn=s("."),fn=p(`<h3 id="\u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435-\u0442\u0438\u043F\u043E\u0432-\u0434\u0430\u043D\u043D\u044B\u0445-\u0438\u0437-rust-\u0432-js" tabindex="-1"><a class="header-anchor" href="#\u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435-\u0442\u0438\u043F\u043E\u0432-\u0434\u0430\u043D\u043D\u044B\u0445-\u0438\u0437-rust-\u0432-js" aria-hidden="true">#</a> \u041F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u0438\u043F\u043E\u0432 \u0434\u0430\u043D\u043D\u044B\u0445 \u0438\u0437 rust \u0432 js</h3><p>\u041F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u0438\u043F\u0430 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0435\u0442\u0441\u044F \u043D\u0430 \u0441\u0430\u0439\u0442\u0435 <code>src/js/val.rs</code> \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0433\u043E \u043A\u043E\u0434\u0430:</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0414\u043B\u044F \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u0437 <code>None</code>, <code>()</code>, <code>i64</code>\u0438 CString \u0432 <code>js</code> \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u044B \u0442\u043E\u043B\u044C\u043A\u043E \u0447\u0435\u0442\u044B\u0440\u0435 \u0442\u0438\u043F\u0430. \u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u043E\u043B\u044C\u043A\u043E, \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0437\u0430\u0445\u043E\u0442\u0438\u0442\u0435.</p>`,4),_n=s("\u0414\u0440\u0443\u0433\u0438\u0435 \u0442\u0438\u043F\u044B \u0434\u0430\u043D\u043D\u044B\u0445 \u043C\u043E\u0433\u0443\u0442 \u0431\u044B\u0442\u044C \u043E\u0431\u044A\u044F\u0432\u043B\u0435\u043D\u044B \u0432 \u0444\u0443\u043D\u043A\u0446\u0438\u044F\u0445 \u0432 "),yn={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},wn=s("qjs_sys"),gn=s(", \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441 "),hn=n("code",null,"JS_New",-1),bn=s("."),xn=n("h2",{id:"\u0441\u0440\u0435\u0434\u0430-\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u0441\u0440\u0435\u0434\u0430-\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438","aria-hidden":"true"},"#"),s(" \u0421\u0440\u0435\u0434\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438")],-1),jn=n("p",null,"\u042F \u0440\u0430\u0437\u0440\u0430\u0431\u0430\u0442\u044B\u0432\u0430\u044E \u043D\u0430 \u043D\u043E\u0443\u0442\u0431\u0443\u043A\u0435 Apple, rust \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442 1.62.0-nightly.",-1),Sn=s("\u0421\u043D\u0430\u0447\u0430\u043B\u0430 \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 "),qn={href:"https://direnv.net",target:"_blank",rel:"noopener noreferrer"},Jn=s("direnv"),vn=s(", \u043F\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u043A\u0430\u0442\u0430\u043B\u043E\u0433 \u0438 "),Vn=n("code",null,"direnv allow",-1),Cn=s(" \u043D\u0430 \u043D\u0435\u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u0432\u0440\u0435\u043C\u044F."),En=p(`<p>\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 python3, \u0437\u0430\u0442\u0435\u043C <code>pip3 install -r ./requirements.txt</code></p><p>\u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C <code>./build.xsh</code> \u0434\u043B\u044F \u043A\u043E\u043C\u043F\u0438\u043B\u044F\u0446\u0438\u0438 \u0438 \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u0434\u0435\u043C\u043E\u043D\u0441\u0442\u0440\u0430\u0446\u0438\u043E\u043D\u043D\u043E\u0439 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B</p><p>\u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E \u043E\u0444\u0438\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0439 \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 quickjs \u0431\u0443\u0434\u0435\u0442 \u043A\u043B\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D, \u0435\u0441\u043B\u0438 \u0432\u044B \u0445\u043E\u0442\u0438\u0442\u0435 \u0438\u0437\u043C\u0435\u043D\u0438\u0442\u044C quickjs \u0432 \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0438 Kraken, \u0441\u043D\u0430\u0447\u0430\u043B\u0430</p><p><code>git clone --recursive git@github.com:openkraken/kraken.git --depth=1</code></p><p>\u0442\u043E\u0433\u0434\u0430 \u0441\u0434\u0435\u043B\u0430\u0439\u0442\u0435 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0435</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">rm</span> -rf quickjs
<span class="token function">ln</span> -s <span class="token punctuation">..</span>/kraken/bridge/third_party/quickjs <span class="token builtin class-name">.</span>
</code></pre></div><p>\u041D\u0430\u043A\u043E\u043D\u0435\u0446, \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u0435 <code>./build.xsh</code></p><h2 id="\u0441\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430-\u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0430" tabindex="-1"><a class="header-anchor" href="#\u0441\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430-\u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0430" aria-hidden="true">#</a> \u0421\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430 \u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0430</h2>`,8),Nn=p("<li><p><code>./quickjs_rust</code><br> \u041C\u043E\u0434\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044F c-\u0444\u0430\u0439\u043B\u0430 \u043A\u043E\u0434\u0430 quickjs</p></li><li><p><code>./quickjs_ffi</code><br> \u042D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u0438\u0437 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u0447\u043D\u043E\u0433\u043E \u0444\u0430\u0439\u043B\u0430 <code>quickjs</code> \u0432 <code>rust</code></p></li><li><p><code>./rust</code><br> \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 <code>rust</code> \u0434\u043B\u044F \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u0444\u0443\u043D\u043A\u0446\u0438\u0439 \u0432 <code>quickjs</code>.</p><ul><li><code>./rust/src/qjs.rs</code><br> \u0420\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0430\u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u044B\u0445 \u0432\u044B\u0437\u043E\u0432\u043E\u0432. \u041F\u043E\u0441\u043A\u043E\u043B\u044C\u043A\u0443 <code>quickjs</code> \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043E\u0434\u043D\u043E\u043F\u043E\u0442\u043E\u0447\u043D\u044B\u043C, \u0432\u044B\u0437\u043E\u0432\u044B \u0444\u0443\u043D\u043A\u0446\u0438\u0439 \u0441 \u0443\u0447\u0430\u0441\u0442\u0438\u0435\u043C <code>quckjs</code> \u0437\u0430\u043F\u0438\u0441\u044B\u0432\u0430\u044E\u0442\u0441\u044F \u0432 \u0433\u043B\u0430\u0432\u043D\u043E\u043C \u043F\u043E\u0442\u043E\u043A\u0435.</li></ul></li>",3),In=n("p",null,[n("code",null,"./rust_macro"),n("br"),n("code",null,"rust"),s(" \u0420\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u043C\u0430\u043A\u0440\u043E\u0441\u0430 \u043F\u0440\u043E\u0446\u0435\u0434\u0443\u0440\u044B "),n("code",null,"#[js]")],-1),Dn=s("\u0412 \u0431\u0443\u0434\u0443\u0449\u0435\u043C, \u0441\u043C. "),Un={href:"https://github.com/second-state/wasmedge-quickjs/blob/70efe8520dc65636cb81b7225e2a6dae47cfad49/src/quickjs_sys/mod.rs#L122",target:"_blank",rel:"noopener noreferrer"},Tn=s("wasmedge-quickjs"),Fn=s(" \u0434\u043B\u044F \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0433\u043E \u044D\u043A\u0441\u043F\u043E\u0440\u0442\u0430 rust-\u0444\u0443\u043D\u043A\u0446\u0438\u0439 \u0432 js-\u0444\u0443\u043D\u043A\u0446\u0438\u0438. "),On={href:"https://github.com/second-state/wasmedge-quickjs/blob/70efe8520dc65636cb81b7225e2a6dae47cfad49/src/quickjs_sys/mod.rs#L122",target:"_blank",rel:"noopener noreferrer"},Ln=s("wasmedge-quickjs \u2192 JsFunctionTrampoline"),Rn=p(`<h2 id="\u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435-\u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432-build-xsh" tabindex="-1"><a class="header-anchor" href="#\u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435-\u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432-build-xsh" aria-hidden="true">#</a> \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432 <code>build.xsh</code></h2><p>\u0411\u0435\u0437 \u043B\u0438\u0448\u043D\u0438\u0445 \u0441\u043B\u043E\u0432 \u043F\u0435\u0440\u0435\u0439\u0434\u0435\u043C \u043D\u0435\u043F\u043E\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E \u043A \u0438\u0441\u0445\u043E\u0434\u043D\u043E\u043C\u0443 \u043A\u043E\u0434\u0443 \u0441\u0446\u0435\u043D\u0430\u0440\u0438\u044F \u0441\u0431\u043E\u0440\u043A\u0438 <code>build.xsh</code>.</p><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from pathlib import Path
from os.path import dirname,abspath,exists,join
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;.xonshrc&quot;.exists() &amp;&amp; source .xonshrc

quickjs = &#39;quickjs&#39;

if not exists(quickjs):
  git clone git@github.com:bellard/@(quickjs).git --depth=1

./quickjs_rust/patch.py

./rust/build.xsh
./quickjs_rust/gen.py

def ln_s(li):
  for arg in li.split(&#39; &#39;):
    fp = join(quickjs,arg)
    if not exists(fp):
      ln -s @(PWD)/@(arg) @(fp)

ln_s(&#39;quickjs_rust rust quickjs_ffi rust_macro&#39;)

cd @(quickjs)
make qjs

cd @(PWD)
./quickjs/qjs --unhandled-rejection -m test.js 2&gt;&amp;1 | tee test.js.out
</code></pre></div><h2 id="\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0430" tabindex="-1"><a class="header-anchor" href="#\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0430" aria-hidden="true">#</a> \u041E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0430</h2><h3 id="quickjs-rust-patch-py" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-patch-py" aria-hidden="true">#</a> <code>quickjs_rust/patch.py</code></h3><p>\u0417\u0430\u043F\u0443\u0441\u043A <code>./quickjs_rust/patch.py</code> \u0432\u043D\u0435\u0441\u0435\u0442 \u043D\u0435\u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u043D\u0435\u0437\u043D\u0430\u0447\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0435 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0432 \u0438\u0441\u0445\u043E\u0434\u043D\u044B\u0439 \u043A\u043E\u0434 <code>quickjs</code>.</p><p>\u041E\u0434\u043D\u0430 \u0438\u0437 \u0444\u0443\u043D\u043A\u0446\u0438\u0439 <code>JS_AddRust</code> \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u0434\u043B\u044F \u0438\u043D\u044A\u0435\u043A\u0446\u0438\u0438 \u0432 \u043C\u043E\u0434\u0443\u043B\u044C rust.</p><p><code>rust_run</code> \u0438\u043D\u0436\u0435\u043A\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u0432 <code>JS_ExecutePendingJob</code> \u0434\u043B\u044F \u0432\u044B\u0437\u043E\u0432\u0430 \u0430\u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u044B\u0445 \u0444\u0443\u043D\u043A\u0446\u0438\u0439.</p><p>\u0421\u043A\u0440\u0438\u043D\u0448\u043E\u0442 \u0432\u0441\u0435\u0445 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0439 \u043F\u043E\u043A\u0430\u0437\u0430\u043D \u043D\u0438\u0436\u0435:</p><p><img src="//irmw.gumlet.io/ep2Xgg.png" alt=""></p><h3 id="quickjs-rust-h" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-h" aria-hidden="true">#</a> <code>quickjs_rust.h</code></h3><p>\u0418\u0437 \u043F\u0440\u0438\u0432\u0435\u0434\u0435\u043D\u043D\u044B\u0445 \u0432\u044B\u0448\u0435 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0439 \u0432\u0438\u0434\u043D\u043E, \u0447\u0442\u043E \u043C\u044B \u0432\u0432\u0435\u043B\u0438 \u043D\u043E\u0432\u044B\u0439 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u0447\u043D\u044B\u0439 \u0444\u0430\u0439\u043B <code>quickjs_rust.h</code> \u0441\u043E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u043A\u043E\u0434\u043E\u043C</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QUICKJS_RUST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUICKJS_RUST_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../quickjs/quickjs.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../rust/rust.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">countof</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">JS_RUSTFUNC_DEF</span><span class="token expression"><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token function">JS_CFUNC_DEF</span><span class="token punctuation">(</span>#name<span class="token punctuation">,</span> name</span><span class="token punctuation">##</span><span class="token expression">_args_len<span class="token punctuation">,</span> js_</span><span class="token punctuation">##</span><span class="token expression">name<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;./js_rust_funcs.h&quot;</span></span>

<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> js_rust_funcs_count <span class="token operator">=</span> <span class="token function">countof</span><span class="token punctuation">(</span>js_rust_funcs<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">int</span>
<span class="token function">js_rust_init</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">JS_SetModuleExportList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">,</span>
      js_rust_funcs_count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">JS_INIT_MODULE</span> <span class="token expression">js_init_module_rust</span></span>

JSModuleDef<span class="token operator">*</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> module_name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">;</span>
  m <span class="token operator">=</span> <span class="token function">JS_NewCModule</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> module_name<span class="token punctuation">,</span> js_rust_init<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>m<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
  <span class="token function">js_rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> m<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">JS_AddRust</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSRuntime<span class="token operator">*</span> rt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m <span class="token operator">=</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;rust&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> js_rust_funcs_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">JS_AddModuleExport</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> rt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre></div><h3 id="rust-rust-h" tabindex="-1"><a class="header-anchor" href="#rust-rust-h" aria-hidden="true">#</a> <code>rust/rust.h</code></h3><p>\u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044C, \u0447\u0442\u043E <code>quickjs_rust/quickjs_rust.h</code> \u0432\u0432\u043E\u0434\u0438\u0442 <code>quickjs_rust/js_rust_funcs.h</code>, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0433\u0435\u043D\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u0438\u0437 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u0447\u043D\u043E\u0433\u043E \u0444\u0430\u0439\u043B\u0430 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u044D\u043A\u0441\u043F\u043E\u0440\u0442\u0430 rust <code>rust/rust.h</code> \u0438 \u043D\u0435 \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D \u0432\u0440\u0443\u0447\u043D\u0443\u044E.</p><p>\u0410 <code>rust/rust.h</code> \u0441\u043E\u0437\u0434\u0430\u0435\u0442\u0441\u044F \u043F\u0443\u0442\u0435\u043C \u0432\u044B\u0437\u043E\u0432\u0430 cbindgen \u0438\u0437 <code>./rust/build.xsh</code>.</p><h3 id="rust-build-xsh" tabindex="-1"><a class="header-anchor" href="#rust-build-xsh" aria-hidden="true">#</a> <code>rust/build.xsh</code></h3><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from os.path import dirname,abspath
import platform
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;../.xonshrc&quot;.exists() &amp;&amp; source ../.xonshrc

./src/export/mod.gen.py

system = platform.system().lower()
if system == &#39;darwin&#39;:
  system = f&#39;apple-{system}&#39;

TARGET=f&#39;{platform.machine()}-{system}&#39;

def cbindgen():
  cbindgen -q --config cbindgen.toml --crate rust --output rust.h

try:
  cbindgen()
except:
  cargo clean
  cbindgen()

cargo build \\
--release \\
-Z build-std=std,panic_abort \\
-Z build-std-features=panic_immediate_abort \\
--target @(TARGET)

mv ./target/@(TARGET)/release/librust.a ./target/release
</code></pre></div><h2 id="\u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B-\u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F-\u043F\u0430\u043C\u044F\u0442\u043A\u0430" tabindex="-1"><a class="header-anchor" href="#\u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B-\u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F-\u043F\u0430\u043C\u044F\u0442\u043A\u0430" aria-hidden="true">#</a> \u041F\u0440\u043E\u0431\u043B\u0435\u043C\u044B \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F : \u041F\u0430\u043C\u044F\u0442\u043A\u0430</h2><h3 id="quickjs-ffi" tabindex="-1"><a class="header-anchor" href="#quickjs-ffi" aria-hidden="true">#</a> <code>quickjs_ffi</code></h3>`,20),Mn=s("\u041A\u043E\u0434 \u0438\u0437 \u0444\u0430\u0439\u043B\u0430 "),An={href:"https://raw.githubusercontent.com/taskie/quijine/main/quijine_core/src/ffi.rs",target:"_blank",rel:"noopener noreferrer"},Bn=s("quijine/main/quijine_core/src/ffi.rs"),Kn=p(`<p>\u0441 \u043D\u0435\u0431\u043E\u043B\u044C\u0448\u0438\u043C\u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\u043C\u0438, \u0437\u0430\u043C\u0435\u043D\u0438\u0432</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">pub</span> <span class="token keyword">use</span> <span class="token namespace">libquickjs_sys<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
</code></pre></div><p>\u043D\u0430</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">pub</span> <span class="token keyword">use</span> <span class="token namespace">libquickjs_sys<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#![allow(non_upper_case_globals)]</span>
<span class="token attribute attr-name">#![allow(non_camel_case_types)]</span>
<span class="token attribute attr-name">#![allow(non_snake_case)]</span>

<span class="token macro property">include!</span><span class="token punctuation">(</span><span class="token macro property">concat!</span><span class="token punctuation">(</span><span class="token macro property">env!</span><span class="token punctuation">(</span><span class="token string">&quot;OUT_DIR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/c.rs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="undefined-symbols-for-architecture-x86-64-js-toint32" tabindex="-1"><a class="header-anchor" href="#undefined-symbols-for-architecture-x86-64-js-toint32" aria-hidden="true">#</a> <code>Undefined symbols for architecture x86_64: &quot;_JS_ToInt32&quot;</code></h3><p>\u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C &#39;. /rust/Cargo.toml&quot; \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C, \u0441\u043E\u0445\u0440\u0430\u043D\u0438\u0432 \u0442\u043E\u043B\u044C\u043A\u043E staticlib</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">lib</span><span class="token punctuation">]</span>
<span class="token comment">#crate-type = [&quot;lib&quot;, &quot;cdylib&quot;, &quot;staticlib&quot;]</span>
<span class="token key property">crate-type</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;staticlib&quot;</span><span class="token punctuation">]</span>
</code></pre></div><h2 id="\u0441\u0441\u044B\u043B\u043A\u0438" tabindex="-1"><a class="header-anchor" href="#\u0441\u0441\u044B\u043B\u043A\u0438" aria-hidden="true">#</a> \u0421\u0441\u044B\u043B\u043A\u0438</h2>`,8),zn={start:"0"},Pn=s("\u041E\u0442 \u0434\u0432\u0438\u0436\u043A\u0430 "),Qn=n("code",null,"JS",-1),Wn=s(" \u043A \u0441\u0440\u0435\u0434\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F "),Gn=n("code",null,"JS",-1),Hn=s(),Xn={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-1.md",target:"_blank",rel:"noopener noreferrer"},Zn=s("(\u0432\u0432\u0435\u0440\u0445\u0443)"),Yn=s(),$n={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-2.md",target:"_blank",rel:"noopener noreferrer"},ns=s("(\u0432\u043D\u0438\u0437\u0443)"),ss={href:"https://github.com/quickjs-zh/QuickJS/wiki/%E4%BD%BF%E7%94%A8C%E8%AF%AD%E8%A8%80%E4%B8%BAQuickJS%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},as=s("\u0420\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u043C\u043E\u0434\u0443\u043B\u044F \u0434\u043B\u044F "),ts=n("code",null,"QuickJS",-1),ps=s(" \u043D\u0430 \u044F\u0437\u044B\u043A\u0435 C"),os={href:"https://wasmedge.org/book/en/dev/js/rust.html",target:"_blank",rel:"noopener noreferrer"},cs=s("\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 Rust \u0434\u043B\u044F \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 JS API"),es={href:"https://github.com/Kozova1/quickjs-example",target:"_blank",rel:"noopener noreferrer"},us=s("\u041F\u0440\u0438\u043C\u0435\u0440\u044B QuickJS"),ls={href:"https://rust-lang.github.io/rust-bindgen/",target:"_blank",rel:"noopener noreferrer"},ks=s("rust-bindgen"),is={href:"https://calbertts.medium.com/how-to-create-asynchronous-apis-for-quickjs-8aca5488bb2e",target:"_blank",rel:"noopener noreferrer"},rs=s("\u041A\u0430\u043A \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u0430\u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u044B\u0439 \u043A\u043E\u0434 \u0434\u043B\u044F "),ds=n("code",null,"QuickJS",-1),ms={href:"https://github.com/DelSkayn/rquickjs/blob/master/core/src/context/ctx.rs#L104",target:"_blank",rel:"noopener noreferrer"},fs=s("rquickjs \u2192 JS_NewPromiseCapability"),_s={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L515",target:"_blank",rel:"noopener noreferrer"},ys=s("wasmedge-quickjs \u2192 new_promise"),ws={href:"https://github.com/second-state/wasmedge-quickjs/blob/da887752fdc9c36aca0f4b7499c5b115862ce771/src/internal_module/wasi_net_module.rs#L46",target:"_blank",rel:"noopener noreferrer"},gs=s("wasmedge-quickjs \u2192 JsMethod"),hs={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L756",target:"_blank",rel:"noopener noreferrer"},bs=s("wasmedge-quickjs \u2192 \u0432\u044B\u0437\u043E\u0432"),xs={href:"https://mp.weixin.qq.com/s/BKto24ItwXbeHon_LaF_0w",target:"_blank",rel:"noopener noreferrer"},js=s("\u041D\u0435\u0437\u0430\u043C\u0435\u0442\u043D\u0430\u044F \u043B\u043E\u0432\u0443\u0448\u043A\u0430 - \u0437\u0430\u043C\u043A\u0438 \u0432 Rust"),Ss=n("h2",{id:"\u043E-\u0441\u0430\u0438\u0442\u0435",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u043E-\u0441\u0430\u0438\u0442\u0435","aria-hidden":"true"},"#"),s(" \u041E \u0441\u0430\u0439\u0442\u0435")],-1),qs=s("\u042D\u0442\u043E\u0442 \u043F\u0440\u043E\u0435\u043A\u0442 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0447\u0430\u0441\u0442\u044C\u044E \u043F\u0440\u043E\u0435\u043A\u0442\u0430 \u043A\u043E\u0434\u0430 "),Js=s("rmw.link ( "),vs={href:"//rmw.link",target:"_blank",rel:"noopener noreferrer"},Vs=s("rmw.link"),Cs=s(" )."),Es=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/rmw-link/logo/master/rmw.red.bg.svg",alt:"rmw.link"})],-1);function Ns(Is,Ds){const a=c("ExternalLinkIcon");return e(),u(l,null,[i,r,n("ul",null,[n("li",null,[n("a",d,[m,t(a)])]),n("li",null,[n("a",f,[_,t(a)])]),n("li",null,[n("a",y,[w,t(a)])])]),g,n("p",null,[n("a",h,[b,t(a)]),x,j,S,n("a",q,[J,t(a)]),v]),V,n("p",null,[C,n("a",E,[N,I,t(a)]),D]),n("p",null,[U,n("a",T,[F,t(a)]),O,L,R,M,A]),B,n("p",null,[K,z,P,n("a",Q,[W,t(a)]),G,H,X,Z,Y,$,nn,sn,an,tn,pn,on,cn]),en,n("p",null,[un,n("a",ln,[kn,t(a)]),rn,dn,mn]),fn,n("p",null,[_n,n("a",yn,[wn,t(a)]),gn,hn,bn]),xn,jn,n("p",null,[Sn,n("a",qn,[Jn,t(a)]),vn,Vn,Cn]),En,n("ul",null,[Nn,n("li",null,[In,n("p",null,[Dn,n("a",Un,[Tn,t(a)]),Fn,n("a",On,[Ln,t(a)])])])]),Rn,n("p",null,[Mn,n("a",An,[Bn,t(a)])]),Kn,n("ol",zn,[n("li",null,[Pn,Qn,Wn,Gn,Hn,n("a",Xn,[Zn,t(a)]),Yn,n("a",$n,[ns,t(a)])]),n("li",null,[n("a",ss,[as,ts,ps,t(a)])]),n("li",null,[n("a",os,[cs,t(a)])]),n("li",null,[n("a",es,[us,t(a)])]),n("li",null,[n("a",ls,[ks,t(a)])]),n("li",null,[n("a",is,[rs,ds,t(a)])]),n("li",null,[n("a",ms,[fs,t(a)])]),n("li",null,[n("a",_s,[ys,t(a)])]),n("li",null,[n("a",ws,[gs,t(a)])]),n("li",null,[n("a",hs,[bs,t(a)])]),n("li",null,[n("a",xs,[js,t(a)])])]),Ss,n("p",null,[qs,n("strong",null,[Js,n("a",vs,[Vs,t(a)])]),Cs]),Es],64)}var Ts=o(k,[["render",Ns],["__file","2022-04-29-quickjs-rust.html.vue"]]);export{Ts as default};
