import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{e as r}from"./app.87d927ab.js";const o={},a=r(`<h1 id="my-node-js-tool-library" tabindex="-1"><a class="header-anchor" href="#my-node-js-tool-library" aria-hidden="true">#</a> My node.js tool library</h1><ul><li><p><a href="//www.npmjs.com/package/@rmw/axios" target="_blank" rel="noopener noreferrer">@rmw/axios</a> axios with timeouts and retries</p></li><li><p><a href="//www.npmjs.com/package/@rmw/csv" target="_blank" rel="noopener noreferrer">@rmw/csv</a> reads CSV line by line</p></li><li><p><a href="//www.npmjs.com/package/@rmw/console" target="_blank" rel="noopener noreferrer">@rmw/md-include</a> makes markdown support <code>#include /xx/xx.xxx</code>for referencing source code when writing <a href="http://readme.md" target="_blank" rel="noopener noreferrer">readme.md</a>, see <a href="//github.com/rmw-lib/coffee_template/blob/master/.direnv/git/hooks/pre-commit" target="_blank" rel="noopener noreferrer">coffee_template/git/hooks/pre-commit</a></p></li><li><p><a href="//www.npmjs.com/package/@rmw/pool" target="_blank" rel="noopener noreferrer">@rmw/pool</a> Promise concurrent pools, remember to put <code>bind</code> under the functions used for <code>class</code></p></li><li><p><a href="//www.npmjs.com/package/@rmw/qiniu" target="_blank" rel="noopener noreferrer">@rmw/qiniu</a> Uploading directories to <a href="//www.qiniu.com" target="_blank" rel="noopener noreferrer">SevenNiuCloud</a></p></li><li><p><a href="//github.com/evanw/node-source-map-support/issues/301" target="_blank" rel="noopener noreferrer">@rmw/source-map-support Let source-map-support support Chinese display</a></p></li><li><p><a href="//www.npmjs.com/package/@rmw/walk" target="_blank" rel="noopener noreferrer">@rmw/walk</a> iterate through the directory paths asynchronously, where <code>import {walkRel} from &#39;@rmw/walk&#39;</code> is the relative path iteration</p></li><li><p><a href="//www.npmjs.com/package/@rmw/walk" target="_blank" rel="noopener noreferrer">@rmw/thisdir</a> passes in <code>i<wbr>mport.meta</code>to return the path to the current file directory; <code>import {thisfile} from &#39;@rmw/thisdir&#39;</code> returns the path to the file itself</p></li><li><p><a href="//www.npmjs.com/package/@rmw/console" target="_blank" rel="noopener noreferrer">@rmw/console</a> makes the console output line numbers (as follows)</p><div class="language-text ext-text"><pre class="language-text"><code>10:45:18 coffee-template/src/index.coffee:11 \u203A 1
</code></pre></div></li><li><p><a href="//github.com/rmw-lib/coffee_template" target="_blank" rel="noopener noreferrer">coffee_template</a> coffeescript project template : supports type: module, i.e. ES6-style import, via node.js&#39; <code>--experimental-loader</code></p></li></ul>`,2);function t(n,l){return a}var s=e(o,[["render",t],["__file","2021-12-20-js.html.vue"]]);export{s as default};
