import{_ as o,r as c,o as e,c as u,a as n,b as t,F as l,d as s,e as p}from"./app.8d0bec44.js";const k={},i=n("h1",{id:"\u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C4\u03BF\u03C5-quickjs-\u03B3\u03B9\u03B1-\u03C4\u03B7\u03BD-\u03B5\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03B7-\u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03B7\u03C3\u03B5\u03C9\u03BD-\u03C1\u03BF\u03C5\u03C3\u03C4\u03B9\u03BD\u03B1\u03C2-\u03B5\u03BD\u03B1\u03C2-\u03BD\u03B5\u03BF\u03C2-\u03C4\u03C1\u03BF\u03C0\u03BF\u03C2-\u03C3\u03BA\u03B5\u03C8\u03B7\u03C2-\u03B3\u03B9\u03B1-\u03C4\u03B7\u03BD-\u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03C3\u03B7-\u03C4\u03BF\u03C5-kraken",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C4\u03BF\u03C5-quickjs-\u03B3\u03B9\u03B1-\u03C4\u03B7\u03BD-\u03B5\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03B7-\u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03B7\u03C3\u03B5\u03C9\u03BD-\u03C1\u03BF\u03C5\u03C3\u03C4\u03B9\u03BD\u03B1\u03C2-\u03B5\u03BD\u03B1\u03C2-\u03BD\u03B5\u03BF\u03C2-\u03C4\u03C1\u03BF\u03C0\u03BF\u03C2-\u03C3\u03BA\u03B5\u03C8\u03B7\u03C2-\u03B3\u03B9\u03B1-\u03C4\u03B7\u03BD-\u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03C3\u03B7-\u03C4\u03BF\u03C5-kraken","aria-hidden":"true"},"#"),s(" \u03A4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 quickjs \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03B5\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03C9\u03BD \u03C1\u03BF\u03C5\u03C3\u03C4\u03AF\u03BD\u03B1\u03C2 - \u03AD\u03BD\u03B1\u03C2 \u03BD\u03AD\u03BF\u03C2 \u03C4\u03C1\u03CC\u03C0\u03BF\u03C2 \u03C3\u03BA\u03AD\u03C8\u03B7\u03C2 \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03B5\u03C0\u03AD\u03BA\u03C4\u03B1\u03C3\u03B7 \u03C4\u03BF\u03C5 Kraken")],-1),r=n("h2",{id:"\u03B1\u03C0\u03BF\u03B8\u03B5\u03C4\u03B7\u03C1\u03B9\u03BF-\u03BA\u03C9\u03B4\u03B9\u03BA\u03B1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03B1\u03C0\u03BF\u03B8\u03B5\u03C4\u03B7\u03C1\u03B9\u03BF-\u03BA\u03C9\u03B4\u03B9\u03BA\u03B1","aria-hidden":"true"},"#"),s(" \u0391\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C1\u03B9\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1")],-1),d={href:"https://github.com/rmw-lib/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},m=s("github"),f={href:"https://gitee.com/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},_=s("gitee"),y={href:"https://gitflic.ru/project/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},w=s("gitflic"),g={href:"https://bitbucket.org/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},h=s("bitbucket"),b=n("h2",{id:"\u03B7-\u03B3\u03B5\u03BD\u03B5\u03C3\u03B7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03B7-\u03B3\u03B5\u03BD\u03B5\u03C3\u03B7","aria-hidden":"true"},"#"),s(" \u0397 \u03B3\u03AD\u03BD\u03B5\u03C3\u03B7")],-1),x=s("\u03A4\u03BF "),j={href:"https://openkraken.com",target:"_blank",rel:"noopener noreferrer"},S=s("Kraken"),q=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7\u03C2 \u03B9\u03C3\u03C4\u03BF\u03C3\u03B5\u03BB\u03AF\u03B4\u03C9\u03BD \u03C5\u03C8\u03B7\u03BB\u03AE\u03C2 \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7\u03C2 \u03B2\u03B1\u03C3\u03B9\u03C3\u03BC\u03AD\u03BD\u03B7 \u03C3\u03C4\u03BF "),J=n("code",null,"Flutter",-1),v=s(", \u03B7 \u03BF\u03C0\u03BF\u03AF\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF "),V={href:"https://github.com/openkraken/kraken/tree/main/bridge/third_party/quickjs",target:"_blank",rel:"noopener noreferrer"},C=s("quickjs"),E=s(" \u03C9\u03C2 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE \u03C3\u03B5\u03BD\u03B1\u03C1\u03AF\u03C9\u03BD."),N=n("p",null,[s("\u0389\u03B8\u03B5\u03BB\u03B1 \u03BD\u03B1 \u03B3\u03C1\u03AC\u03C8\u03C9 \u03BA\u03AC\u03C0\u03BF\u03B9\u03B5\u03C2 \u03B5\u03C0\u03B5\u03BA\u03C4\u03AC\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C4\u03BF Kraken \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03CE\u03BD\u03C4\u03B1\u03C2 \u03C4\u03BF "),n("code",null,"rust"),s(".")],-1),I=s("\u03A4\u03BF Kraken "),D={href:"https://openkraken.com/guide/advanced/custom-js-api",target:"_blank",rel:"noopener noreferrer"},U=s("\u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03B7 \u03C3\u03C5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B5\u03C0\u03B5\u03BA\u03C4\u03AC\u03C3\u03B5\u03C9\u03BD \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03CE\u03BD\u03C4\u03B1\u03C2 \u03C4\u03BF "),T=n("code",null,"dart",-1),F=s(" ."),O=s("\u03A7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03BF\u03C5 "),L={href:"https://github.com/fzyzcjy/flutter_rust_bridge",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"flutter_rust_bridge",-1),M=s(),A=n("code",null,"rust",-1),B=s(" \u03BA\u03B1\u03B9 "),K=n("code",null,"dart",-1),z=s("."),P=n("p",null,[s("\u03A3\u03C5\u03BD\u03B4\u03C5\u03AC\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2 \u03B1\u03C5\u03C4\u03AC \u03C4\u03B1 \u03B4\u03CD\u03BF \u03C3\u03B7\u03BC\u03B5\u03AF\u03B1, \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03CD\u03C3\u03BA\u03BF\u03BB\u03BF \u03BD\u03B1 \u03B3\u03C1\u03AC\u03C8\u03B5\u03C4\u03B5 \u03B5\u03C0\u03B5\u03BA\u03C4\u03AC\u03C3\u03B5\u03B9\u03C2 Kraken \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03CE\u03BD\u03C4\u03B1\u03C2 \u03C4\u03BF "),n("code",null,"rust"),s("."),n("br"),s(" \u03A9\u03C3\u03C4\u03CC\u03C3\u03BF, \u03B7 \u03B5\u03C0\u03B9\u03B2\u03AC\u03C1\u03C5\u03BD\u03C3\u03B7 \u03C4\u03C9\u03BD \u03B5\u03C0\u03B9\u03B4\u03CC\u03C3\u03B5\u03C9\u03BD \u03B1\u03C5\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03BB\u03CD\u03C3\u03B7\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03AC\u03BB\u03B7, \u03BA\u03B1\u03B8\u03CE\u03C2 \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03C0\u03BF\u03B9\u03BD\u03AE \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7\u03C2 \u03B3\u03B9\u03B1 \u03C4\u03BF "),n("code",null,"dart"),s(" \u03C0\u03BF\u03C5 \u03BA\u03B1\u03BB\u03B5\u03AF \u03C4\u03BF "),n("code",null,"rust"),s(" \u03BA\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03AC\u03BB\u03BB\u03B7 \u03B3\u03B9\u03B1 \u03C4\u03BF "),n("code",null,"quickjs"),s(" \u03C0\u03BF\u03C5 \u03BA\u03B1\u03BB\u03B5\u03AF \u03C4\u03BF "),n("code",null,"dart"),s(".")],-1),Q=s("\u0391\u03C0\u03CC \u03C4\u03B7\u03BD \u03AC\u03BB\u03BB\u03B7 \u03C0\u03BB\u03B5\u03C5\u03C1\u03AC, \u03B5\u03BD\u03CE \u03B7 \u03BA\u03BF\u03B9\u03BD\u03CC\u03C4\u03B7\u03C4\u03B1 "),W=n("code",null,"rust",-1),G=s(" \u03AD\u03C7\u03B5\u03B9 "),H={href:"https://github.com/DelSkayn/rquickjs",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"rquickjs",-1),Z=s(" \u03C4\u03AD\u03C4\u03BF\u03B9\u03B5\u03C2 \u03BA\u03BB\u03AE\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C4\u03B7 \u03B2\u03B9\u03B2\u03BB\u03B9\u03BF\u03B8\u03AE\u03BA\u03B7 "),Y=n("code",null,"quickjs",-1),$=s(" \u03C3\u03C4\u03BF "),nn=n("code",null,"rust",-1),sn=s("."),an=n("br",null,null,-1),tn=s(" \u03A9\u03C3\u03C4\u03CC\u03C3\u03BF, \u03BA\u03B1\u03BB\u03BF\u03CD\u03BD \u03C4\u03BF "),pn=n("code",null,"quickjs",-1),on=s(" \u03B1\u03BD\u03C4\u03AF \u03BD\u03B1 \u03B5\u03BD\u03C3\u03C9\u03BC\u03B1\u03C4\u03CE\u03C3\u03BF\u03C5\u03BD \u03C4\u03BF "),cn=n("code",null,"quickjs",-1),en=s("\u03BA\u03B1\u03B9 \u03B4\u03B5\u03BD \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03BF\u03CD\u03BD \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BC\u03B1\u03B3\u03AD\u03C8\u03BF\u03C5\u03BD \u03C4\u03BF "),un=n("code",null,"quickjs",-1),ln=s("."),kn=p(`<p>\u03A3\u03B5 \u03B1\u03C5\u03C4\u03AE \u03C4\u03B7\u03BD \u03B2\u03AC\u03C3\u03B7 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1, \u03AD\u03C7\u03C9 \u03B5\u03C6\u03B1\u03C1\u03BC\u03CC\u03C3\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03BD\u03AD\u03B1 \u03BB\u03CD\u03C3\u03B7: \u03C4\u03B7\u03BD \u03AC\u03BC\u03B5\u03C3\u03B7 \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 \u03C0\u03B7\u03B3\u03B1\u03AF\u03BF\u03C5 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03C4\u03BF\u03C5 <code>quickjs</code> \u03CE\u03C3\u03C4\u03B5 \u03BD\u03B1 \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03B7\u03BD \u03B5\u03C0\u03AD\u03BA\u03C4\u03B1\u03C3\u03B7 <code>rust</code>.</p><p>\u03A0\u03C1\u03CC\u03BA\u03B5\u03B9\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03BC\u03B9\u03B1 \u03B3\u03B5\u03BD\u03B9\u03BA\u03AE \u03BB\u03CD\u03C3\u03B7 \u03C0\u03BF\u03C5 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03B5\u03AF \u03CC\u03C7\u03B9 \u03BC\u03CC\u03BD\u03BF \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 Kraken, \u03B1\u03BB\u03BB\u03AC \u03BA\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03CC\u03BB\u03B1 \u03C4\u03B1 \u03C0\u03BB\u03B1\u03AF\u03C3\u03B9\u03B1 \u03BA\u03B1\u03B9 \u03C4\u03B9\u03C2 \u03B2\u03B9\u03B2\u03BB\u03B9\u03BF\u03B8\u03AE\u03BA\u03B5\u03C2 \u03C0\u03BF\u03C5 \u03B5\u03BD\u03C3\u03C9\u03BC\u03B1\u03C4\u03CE\u03BD\u03BF\u03C5\u03BD \u03C4\u03BF <code>quickjs</code>.</p><h2 id="\u03B5\u03C0\u03B9\u03B4\u03B5\u03B9\u03BE\u03B7" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03C0\u03B9\u03B4\u03B5\u03B9\u03BE\u03B7" aria-hidden="true">#</a> \u0395\u03C0\u03AF\u03B4\u03B5\u03B9\u03BE\u03B7</h2><p>\u039F \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03C4\u03BF\u03C5 test.js \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 :</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">try_run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u274C&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> rust <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;export from rust :&quot;</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>rust<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
  fib<span class="token punctuation">,</span>
  sleep
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;begin sleep 2s&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sleep done&#39;</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fib(3) =&#39;</span><span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;try catch example :&quot;</span><span class="token punctuation">)</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03BF <code>./quickjs/qjs test.js</code>, \u03AD\u03BE\u03BF\u03B4\u03BF\u03C2 :</p><div class="language-text ext-text"><pre class="language-text"><code>export from rust : fib,sleep
begin sleep 2s
sleep done
fib(3) = 6
try catch example :
\u274C miss : args need 1 pass 0
    at fib (native)
    at try_run (test.js:8)
    at &lt;anonymous&gt; (test.js:27)

\u274C not number : args position 0
    at fib (native)
    at try_run (test.js:6)
    at &lt;anonymous&gt; (test.js:28)
</code></pre></div><h3 id="\u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03B7-\u03C4\u03B7\u03C2-fib-\u03C3\u03C4\u03B7-\u03C3\u03BA\u03BF\u03C5\u03C1\u03B9\u03B1" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03B7-\u03C4\u03B7\u03C2-fib-\u03C3\u03C4\u03B7-\u03C3\u03BA\u03BF\u03C5\u03C1\u03B9\u03B1" aria-hidden="true">#</a> \u0395\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03C4\u03B7\u03C2 fib \u03C3\u03C4\u03B7 \u03C3\u03BA\u03BF\u03C5\u03C1\u03B9\u03AC</h3><p>\u0397 \u03C3\u03C5\u03BD\u03AC\u03C1\u03C4\u03B7\u03C3\u03B7 fib \u03C0\u03BF\u03C5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF js \u03C0\u03C1\u03BF\u03AD\u03C1\u03C7\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C0\u03CC \u03C4\u03BF <code>rust/src/export/fib.rs</code> \u03BA\u03B1\u03B9 \u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0395\u03C0\u03AF \u03C4\u03BF\u03C5 \u03C0\u03B1\u03C1\u03CC\u03BD\u03C4\u03BF\u03C2, \u03B7 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE \u03C4\u03B7\u03C2 \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1\u03C2 <code>#[js]</code> \u03C0\u03C1\u03BF\u03C3\u03B8\u03AD\u03C4\u03B5\u03B9 \u03B1\u03C0\u03BB\u03CE\u03C2 \u03BC\u03B9\u03B1 \u03C3\u03C4\u03B1\u03B8\u03B5\u03C1\u03AC <code>fib_args_len</code>\u03C0\u03BF\u03C5 \u03C0\u03C1\u03BF\u03C3\u03B4\u03B9\u03BF\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03BF\u03BD \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC \u03C4\u03C9\u03BD \u03B5\u03C0\u03B9\u03C7\u03B5\u03B9\u03C1\u03B7\u03BC\u03AC\u03C4\u03C9\u03BD \u03C4\u03B7\u03C2 \u03C3\u03C5\u03BD\u03AC\u03C1\u03C4\u03B7\u03C3\u03B7\u03C2.</p><p>\u039C\u03B5\u03BB\u03BB\u03BF\u03BD\u03C4\u03B9\u03BA\u03AC, \u03B7 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1\u03C2 <code>./rust_macro</code> \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B3\u03C1\u03B1\u03C6\u03C4\u03B5\u03AF \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C8\u03B5\u03B9 \u03C4\u03B7\u03BD \u03C0\u03BB\u03AE\u03C1\u03C9\u03C2 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B7 \u03B5\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03B9\u03CE\u03BD.</p><h3 id="\u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2-\u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03B7\u03C3\u03B7\u03C2-sleep-\u03C3\u03C4\u03B7\u03BD-rust" tabindex="-1"><a class="header-anchor" href="#\u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2-\u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03B7\u03C3\u03B7\u03C2-sleep-\u03C3\u03C4\u03B7\u03BD-rust" aria-hidden="true">#</a> \u03A5\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03B7\u03C2 \u03C3\u03C5\u03BD\u03AC\u03C1\u03C4\u03B7\u03C3\u03B7\u03C2 sleep \u03C3\u03C4\u03B7\u03BD rust</h3><p>\u0397 \u03C3\u03C5\u03BD\u03AC\u03C1\u03C4\u03B7\u03C3\u03B7 sleep \u03C0\u03BF\u03C5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF js \u03C0\u03C1\u03BF\u03AD\u03C1\u03C7\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C0\u03CC \u03C4\u03BF <code>rust/src/export/sleep.rs</code> \u03BA\u03B1\u03B9 \u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u038C\u03C0\u03C9\u03C2 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03C0\u03B1\u03C1\u03B1\u03C0\u03AC\u03BD\u03C9, \u03CC\u03BB\u03B5\u03C2 \u03BF\u03B9 \u03B5\u03BE\u03B1\u03B3\u03CC\u03BC\u03B5\u03BD\u03B5\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 \u03BF\u03C1\u03AF\u03B6\u03BF\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF\u03BD \u03BA\u03B1\u03C4\u03AC\u03BB\u03BF\u03B3\u03BF <code>./rust/src/export</code>. \u0391\u03C5\u03C4\u03CC\u03C2 \u03BF \u03BA\u03B1\u03C4\u03AC\u03BB\u03BF\u03B3\u03BF\u03C2 <code>mod.rs</code> \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03B5\u03AF\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1 \u03CC\u03C4\u03B1\u03BD \u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03AF\u03C4\u03B1\u03B9 \u03C4\u03BF <code>./rust/build.xsh</code>, \u03B5\u03BE\u03AC\u03B3\u03BF\u03BD\u03C4\u03B1\u03C2 \u03CC\u03BB\u03B1 \u03C4\u03B1 \u03B1\u03C1\u03C7\u03B5\u03AF\u03B1 <code>.rs</code> \u03C0\u03BF\u03C5 \u03B2\u03C1\u03AF\u03C3\u03BA\u03BF\u03BD\u03C4\u03B1\u03B9 \u03BA\u03AC\u03C4\u03C9 \u03B1\u03C0\u03CC \u03B1\u03C5\u03C4\u03CC\u03BD.</p><h3 id="\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B7-\u03BA\u03B1\u03B9-\u03B5\u03C0\u03B9\u03BA\u03C5\u03C1\u03C9\u03C3\u03B7-\u03C4\u03C9\u03BD-\u03B5\u03B9\u03C3\u03B5\u03C1\u03C7\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C0\u03B1\u03C1\u03B1\u03BC\u03B5\u03C4\u03C1\u03C9\u03BD-js" tabindex="-1"><a class="header-anchor" href="#\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B7-\u03BA\u03B1\u03B9-\u03B5\u03C0\u03B9\u03BA\u03C5\u03C1\u03C9\u03C3\u03B7-\u03C4\u03C9\u03BD-\u03B5\u03B9\u03C3\u03B5\u03C1\u03C7\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C0\u03B1\u03C1\u03B1\u03BC\u03B5\u03C4\u03C1\u03C9\u03BD-js" aria-hidden="true">#</a> \u0391\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7 \u03C4\u03C9\u03BD \u03B5\u03B9\u03C3\u03B5\u03C1\u03C7\u03CC\u03BC\u03B5\u03BD\u03C9\u03BD \u03C0\u03B1\u03C1\u03B1\u03BC\u03AD\u03C4\u03C1\u03C9\u03BD js</h3><p>\u039F\u03B9 \u03C0\u03B1\u03C1\u03AC\u03BC\u03B5\u03C4\u03C1\u03BF\u03B9 \u03B4\u03B9\u03B1\u03B2\u03AC\u03B6\u03BF\u03BD\u03C4\u03B1\u03B9 \u03BA\u03B1\u03B9 \u03B5\u03C0\u03B9\u03BA\u03C5\u03C1\u03CE\u03BD\u03BF\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 <code>src/js/arg.rs</code> \u03BC\u03B5 \u03C4\u03BF\u03BD \u03B1\u03BA\u03CC\u03BB\u03BF\u03C5\u03B8\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u03A0\u03C1\u03BF\u03C2 \u03C4\u03BF \u03C0\u03B1\u03C1\u03CC\u03BD \u03B5\u03BB\u03AD\u03B3\u03C7\u03B5\u03C4\u03B1\u03B9 \u03BC\u03CC\u03BD\u03BF \u03BF \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2 \u03C4\u03C9\u03BD \u03BF\u03C1\u03AF\u03C9\u03BD \u03BA\u03B1\u03B9 \u03B4\u03B9\u03B1\u03B2\u03AC\u03B6\u03B5\u03C4\u03B1\u03B9 \u03BF \u03C4\u03CD\u03C0\u03BF\u03C2 i64.</p>`,20),rn=s("\u039C\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B8\u03AD\u03C3\u03B5\u03C4\u03B5 \u03B1\u03C5\u03C4\u03AD\u03C2 \u03C4\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 \u03B1\u03BD\u03AC\u03BB\u03BF\u03B3\u03B1 \u03BC\u03B5 \u03C4\u03B9\u03C2 \u03B1\u03BD\u03AC\u03B3\u03BA\u03B5\u03C2 \u03C3\u03B1\u03C2, \u03B4\u03B5\u03AF\u03C4\u03B5 \u03C4\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C4\u03BF "),dn={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},mn=s("qjs_sys"),fn=s(" \u03BE\u03B5\u03BA\u03B9\u03BD\u03CE\u03BD\u03C4\u03B1\u03C2 \u03BC\u03B5 "),_n=n("code",null,"JS_To",-1),yn=s("."),wn=p(`<h3 id="\u03BC\u03B5\u03C4\u03B1\u03C4\u03C1\u03BF\u03C0\u03B7-\u03C4\u03C5\u03C0\u03BF\u03C5-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03B1\u03C0\u03BF-rust-\u03C3\u03B5-js" tabindex="-1"><a class="header-anchor" href="#\u03BC\u03B5\u03C4\u03B1\u03C4\u03C1\u03BF\u03C0\u03B7-\u03C4\u03C5\u03C0\u03BF\u03C5-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03B1\u03C0\u03BF-rust-\u03C3\u03B5-js" aria-hidden="true">#</a> \u039C\u03B5\u03C4\u03B1\u03C4\u03C1\u03BF\u03C0\u03AE \u03C4\u03CD\u03C0\u03BF\u03C5 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B1\u03C0\u03CC rust \u03C3\u03B5 js</h3><p>\u0397 \u03BC\u03B5\u03C4\u03B1\u03C4\u03C1\u03BF\u03C0\u03AE \u03C4\u03CD\u03C0\u03BF\u03C5 \u03B3\u03AF\u03BD\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF <code>src/js/val.rs</code> \u03BC\u03B5 \u03C4\u03BF\u03BD \u03B1\u03BA\u03CC\u03BB\u03BF\u03C5\u03B8\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u039C\u03CC\u03BD\u03BF \u03C4\u03AD\u03C3\u03C3\u03B5\u03C1\u03B9\u03C2 \u03C4\u03CD\u03C0\u03BF\u03B9 \u03BF\u03C1\u03AF\u03B6\u03BF\u03BD\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03BC\u03B5\u03C4\u03B1\u03C4\u03C1\u03BF\u03C0\u03AE \u03B1\u03C0\u03CC <code>None</code>, <code>()</code>, <code>i64</code>\u03BA\u03B1\u03B9 CString \u03C3\u03B5 <code>js</code>. \u039C\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B8\u03AD\u03C3\u03B5\u03C4\u03B5 \u03CC\u03C3\u03BF\u03C5\u03C2 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF\u03C5\u03C2 \u03B8\u03AD\u03BB\u03B5\u03C4\u03B5.</p>`,4),gn=s("\u03A0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF\u03B9 \u03C4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03B4\u03B7\u03BB\u03C9\u03B8\u03BF\u03CD\u03BD \u03C3\u03C4\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 \u03C4\u03B7\u03C2 "),hn={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},bn=s("qjs_sys"),xn=s(" \u03C0\u03BF\u03C5 \u03B1\u03C1\u03C7\u03AF\u03B6\u03BF\u03C5\u03BD \u03BC\u03B5 "),jn=n("code",null,"JS_New",-1),Sn=s("."),qn=n("h2",{id:"\u03C0\u03B5\u03C1\u03B9\u03B2\u03B1\u03BB\u03BB\u03BF\u03BD-\u03B1\u03BD\u03B1\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C0\u03B5\u03C1\u03B9\u03B2\u03B1\u03BB\u03BB\u03BF\u03BD-\u03B1\u03BD\u03B1\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2","aria-hidden":"true"},"#"),s(" \u03A0\u03B5\u03C1\u03B9\u03B2\u03AC\u03BB\u03BB\u03BF\u03BD \u03B1\u03BD\u03AC\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2")],-1),Jn=n("p",null,"\u0391\u03BD\u03B1\u03C0\u03C4\u03CD\u03C3\u03C3\u03C9 \u03C3\u03B5 \u03AD\u03BD\u03B1 \u03C6\u03BF\u03C1\u03B7\u03C4\u03CC \u03C5\u03C0\u03BF\u03BB\u03BF\u03B3\u03B9\u03C3\u03C4\u03AE \u03C4\u03B7\u03C2 Apple, \u03B7 \u03C3\u03BA\u03BF\u03C5\u03C1\u03B9\u03AC \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03B7\u03BD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7 1.62.0-nightly.",-1),vn=s("\u03A0\u03C1\u03CE\u03C4\u03B1 \u03B5\u03B3\u03BA\u03B1\u03C4\u03B1\u03C3\u03C4\u03AE\u03C3\u03C4\u03B5 "),Vn={href:"https://direnv.net",target:"_blank",rel:"noopener noreferrer"},Cn=s("\u03C4\u03BF direnv"),En=s(", \u03C0\u03B7\u03B3\u03B1\u03AF\u03BD\u03B5\u03C4\u03B5 \u03C3\u03C4\u03BF\u03BD \u03BA\u03B1\u03C4\u03AC\u03BB\u03BF\u03B3\u03BF \u03BA\u03B1\u03B9 "),Nn=n("code",null,"direnv allow",-1),In=s(" \u03B3\u03B9\u03B1 \u03BB\u03AF\u03B3\u03BF"),Dn=p(`<p>\u0395\u03B3\u03BA\u03B1\u03C4\u03B1\u03C3\u03C4\u03AE\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD python3, \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 <code>pip3 install -r ./requirements.txt</code></p><p>run <code>./build.xsh</code> \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B3\u03BB\u03C9\u03C4\u03C4\u03AF\u03C3\u03B5\u03C4\u03B5 \u03BA\u03B1\u03B9 \u03BD\u03B1 \u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF demo</p><p>\u0391\u03C0\u03CC \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE, \u03C4\u03BF \u03B5\u03C0\u03AF\u03C3\u03B7\u03BC\u03BF \u03B1\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C1\u03B9\u03BF quickjs \u03B8\u03B1 \u03BA\u03BB\u03C9\u03BD\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03B5\u03AF, \u03B1\u03BD \u03B8\u03AD\u03BB\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF quickjs \u03C3\u03C4\u03BF \u03B1\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C1\u03B9\u03BF Kraken, \u03C0\u03C1\u03CE\u03C4\u03B1</p><p><code>git clone --recursive git@github.com:openkraken/kraken.git --depth=1</code></p><p>\u03C4\u03CC\u03C4\u03B5 \u03BA\u03AC\u03BD\u03C4\u03B5 \u03C4\u03B1 \u03B5\u03BE\u03AE\u03C2</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">rm</span> -rf quickjs
<span class="token function">ln</span> -s <span class="token punctuation">..</span>/kraken/bridge/third_party/quickjs <span class="token builtin class-name">.</span>
</code></pre></div><p>\u03A4\u03AD\u03BB\u03BF\u03C2, \u03B5\u03C0\u03B1\u03BD\u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03BF <code>./build.xsh</code></p><h2 id="\u03B4\u03BF\u03BC\u03B7-\u03BA\u03B1\u03C4\u03B1\u03BB\u03BF\u03B3\u03BF\u03C5" tabindex="-1"><a class="header-anchor" href="#\u03B4\u03BF\u03BC\u03B7-\u03BA\u03B1\u03C4\u03B1\u03BB\u03BF\u03B3\u03BF\u03C5" aria-hidden="true">#</a> \u0394\u03BF\u03BC\u03AE \u03BA\u03B1\u03C4\u03B1\u03BB\u03CC\u03B3\u03BF\u03C5</h2>`,8),Un=p("<li><p><code>./quickjs_rust</code><br> \u03A4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF\u03C5 c \u03C4\u03BF\u03C5 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 quickjs</p></li><li><p><code>./quickjs_ffi</code><br> \u0395\u03BE\u03AC\u03B3\u03B5\u03C4\u03B5 \u03C4\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 \u03B1\u03C0\u03CC \u03C4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03BA\u03B5\u03C6\u03B1\u03BB\u03AF\u03B4\u03B1\u03C2 <code>quickjs</code> \u03C3\u03C4\u03BF <code>rust</code></p></li><li><p><code>./rust</code><br> \u03A7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03C4\u03B5 \u03C4\u03BF <code>rust</code> \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03B9\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C4\u03BF\u03C5 <code>quickjs</code></p><ul><li><code>./rust/src/qjs.rs</code><br> \u03A5\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03B1\u03C3\u03CD\u03B3\u03C7\u03C1\u03BF\u03BD\u03C9\u03BD \u03BA\u03BB\u03AE\u03C3\u03B5\u03C9\u03BD. \u0394\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03BF\u03C5 \u03CC\u03C4\u03B9 \u03C4\u03BF <code>quickjs</code> \u03B5\u03AF\u03BD\u03B1\u03B9 single-threaded, \u03BF\u03B9 \u03BA\u03BB\u03AE\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03C9\u03BD \u03C0\u03BF\u03C5 \u03B1\u03C6\u03BF\u03C1\u03BF\u03CD\u03BD \u03C4\u03BF <code>quckjs</code> \u03B3\u03C1\u03AC\u03C6\u03BF\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF \u03BA\u03CD\u03C1\u03B9\u03BF \u03BD\u03AE\u03BC\u03B1.</li></ul></li>",3),Tn=n("p",null,[n("code",null,"./rust_macro"),n("br"),n("code",null,"rust"),s(" \u0395\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03C4\u03B7\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1\u03C2 "),n("code",null,"#[js]")],-1),Fn=s("\u03A3\u03C4\u03BF \u03BC\u03AD\u03BB\u03BB\u03BF\u03BD, \u03B4\u03B5\u03AF\u03C4\u03B5 "),On={href:"https://github.com/second-state/wasmedge-quickjs/blob/70efe8520dc65636cb81b7225e2a6dae47cfad49/src/quickjs_sys/mod.rs#L122",target:"_blank",rel:"noopener noreferrer"},Ln=s("wasmedge-quickjs"),Rn=s(" \u03B3\u03B9\u03B1 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B7 \u03B5\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03C9\u03BD rust \u03C3\u03B5 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 js. "),Mn={href:"https://github.com/second-state/wasmedge-quickjs/blob/70efe8520dc65636cb81b7225e2a6dae47cfad49/src/quickjs_sys/mod.rs#L122",target:"_blank",rel:"noopener noreferrer"},An=s("wasmedge-quickjs \u2192 JsFunctionTrampoline"),Bn=p(`<h2 id="\u03C3\u03B5\u03BD\u03B1\u03C1\u03B9\u03B1-\u03BF\u03B9\u03BA\u03BF\u03B4\u03BF\u03BC\u03B7\u03C3\u03B7\u03C2-build-xsh" tabindex="-1"><a class="header-anchor" href="#\u03C3\u03B5\u03BD\u03B1\u03C1\u03B9\u03B1-\u03BF\u03B9\u03BA\u03BF\u03B4\u03BF\u03BC\u03B7\u03C3\u03B7\u03C2-build-xsh" aria-hidden="true">#</a> \u03A3\u03B5\u03BD\u03AC\u03C1\u03B9\u03B1 \u03BF\u03B9\u03BA\u03BF\u03B4\u03CC\u03BC\u03B7\u03C3\u03B7\u03C2 <code>build.xsh</code></h2><p>\u03A7\u03C9\u03C1\u03AF\u03C2 \u03AC\u03BB\u03BB\u03B7 \u03BA\u03B1\u03B8\u03C5\u03C3\u03C4\u03AD\u03C1\u03B7\u03C3\u03B7, \u03B1\u03C2 \u03C0\u03AC\u03BC\u03B5 \u03BA\u03B1\u03C4\u03B5\u03C5\u03B8\u03B5\u03AF\u03B1\u03BD \u03C3\u03C4\u03BF\u03BD \u03C0\u03B7\u03B3\u03B1\u03AF\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03C4\u03BF\u03C5 \u03C3\u03B5\u03BD\u03B1\u03C1\u03AF\u03BF\u03C5 \u03BA\u03B1\u03C4\u03B1\u03C3\u03BA\u03B5\u03C5\u03AE\u03C2 <code>build.xsh</code></p><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from pathlib import Path
from os.path import dirname,abspath,exists,join
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;.xonshrc&quot;.exists() &amp;&amp; source .xonshrc

quickjs = &#39;quickjs&#39;

if not exists(quickjs):
  git clone git@github.com:bellard/@(quickjs).git --depth=1

./quickjs_rust/patch.py

./rust/build.xsh
./quickjs_rust/gen.py

def ln_s(li):
  for arg in li.split(&#39; &#39;):
    fp = join(quickjs,arg)
    if not exists(fp):
      ln -s @(PWD)/@(arg) @(fp)

ln_s(&#39;quickjs_rust rust quickjs_ffi rust_macro&#39;)

cd @(quickjs)
make qjs

cd @(PWD)
./quickjs/qjs --unhandled-rejection -m test.js 2&gt;&amp;1 | tee test.js.out
</code></pre></div><h2 id="\u03B5\u03C0\u03B5\u03BE\u03B7\u03B3\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2-\u03B1\u03C1\u03C7\u03B7\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03C0\u03B5\u03BE\u03B7\u03B3\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2-\u03B1\u03C1\u03C7\u03B7\u03C2" aria-hidden="true">#</a> \u0395\u03C0\u03B5\u03BE\u03AE\u03B3\u03B7\u03C3\u03B7 \u03C4\u03B7\u03C2 \u03B1\u03C1\u03C7\u03AE\u03C2</h2><h3 id="quickjs-rust-patch-py" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-patch-py" aria-hidden="true">#</a> <code>quickjs_rust/patch.py</code></h3><p>\u0397 \u03B5\u03BA\u03C4\u03AD\u03BB\u03B5\u03C3\u03B7 \u03C4\u03BF\u03C5 <code>./quickjs_rust/patch.py</code> \u03B8\u03B1 \u03BA\u03AC\u03BD\u03B5\u03B9 \u03BA\u03AC\u03C0\u03BF\u03B9\u03B5\u03C2 \u03BC\u03B9\u03BA\u03C1\u03AD\u03C2 \u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2 \u03C3\u03C4\u03BF\u03BD \u03C0\u03B7\u03B3\u03B1\u03AF\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03C4\u03BF\u03C5 <code>quickjs</code>.</p><p>\u039C\u03AF\u03B1 \u03B1\u03C0\u03CC \u03C4\u03B9\u03C2 \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2 <code>JS_AddRust</code> \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03AD\u03B3\u03C7\u03C5\u03C3\u03B7 \u03C3\u03C4\u03B7\u03BD \u03B5\u03BD\u03CC\u03C4\u03B7\u03C4\u03B1 rust.</p><p>\u03A4\u03BF <code>rust_run</code> \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF <code>JS_ExecutePendingJob</code> \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03BA\u03BB\u03AE\u03C3\u03B7 \u03B1\u03C3\u03CD\u03B3\u03C7\u03C1\u03BF\u03BD\u03C9\u03BD \u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03C9\u03BD.</p><p>\u0388\u03BD\u03B1 \u03C3\u03C4\u03B9\u03B3\u03BC\u03B9\u03CC\u03C4\u03C5\u03C0\u03BF \u03BF\u03B8\u03CC\u03BD\u03B7\u03C2 \u03BC\u03B5 \u03CC\u03BB\u03B5\u03C2 \u03C4\u03B9\u03C2 \u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2 \u03C0\u03B1\u03C1\u03BF\u03C5\u03C3\u03B9\u03AC\u03B6\u03B5\u03C4\u03B1\u03B9 \u03C0\u03B1\u03C1\u03B1\u03BA\u03AC\u03C4\u03C9 :</p><p><img src="//irmw.gumlet.io/ep2Xgg.png" alt=""></p><h3 id="quickjs-rust-h" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-h" aria-hidden="true">#</a> <code>quickjs_rust.h</code></h3><p>\u0391\u03C0\u03CC \u03C4\u03B9\u03C2 \u03C0\u03B1\u03C1\u03B1\u03C0\u03AC\u03BD\u03C9 \u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03CC\u03C4\u03B9 \u03AD\u03C7\u03BF\u03C5\u03BC\u03B5 \u03B5\u03B9\u03C3\u03B1\u03B3\u03AC\u03B3\u03B5\u03B9 \u03AD\u03BD\u03B1 \u03BD\u03AD\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03BA\u03B5\u03C6\u03B1\u03BB\u03AF\u03B4\u03B1\u03C2 <code>quickjs_rust.h</code> \u03BC\u03B5 \u03C4\u03BF\u03BD \u03B1\u03BA\u03CC\u03BB\u03BF\u03C5\u03B8\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QUICKJS_RUST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUICKJS_RUST_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../quickjs/quickjs.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../rust/rust.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">countof</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">JS_RUSTFUNC_DEF</span><span class="token expression"><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token function">JS_CFUNC_DEF</span><span class="token punctuation">(</span>#name<span class="token punctuation">,</span> name</span><span class="token punctuation">##</span><span class="token expression">_args_len<span class="token punctuation">,</span> js_</span><span class="token punctuation">##</span><span class="token expression">name<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;./js_rust_funcs.h&quot;</span></span>

<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> js_rust_funcs_count <span class="token operator">=</span> <span class="token function">countof</span><span class="token punctuation">(</span>js_rust_funcs<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">int</span>
<span class="token function">js_rust_init</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">JS_SetModuleExportList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">,</span>
      js_rust_funcs_count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">JS_INIT_MODULE</span> <span class="token expression">js_init_module_rust</span></span>

JSModuleDef<span class="token operator">*</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> module_name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">;</span>
  m <span class="token operator">=</span> <span class="token function">JS_NewCModule</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> module_name<span class="token punctuation">,</span> js_rust_init<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>m<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
  <span class="token function">js_rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> m<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">JS_AddRust</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSRuntime<span class="token operator">*</span> rt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m <span class="token operator">=</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;rust&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> js_rust_funcs_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">JS_AddModuleExport</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> rt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre></div><h3 id="rust-rust-h" tabindex="-1"><a class="header-anchor" href="#rust-rust-h" aria-hidden="true">#</a> <code>rust/rust.h</code></h3><p>\u039C\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03CC\u03C4\u03B9 \u03C4\u03BF <code>quickjs_rust/quickjs_rust.h</code> \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03B9 \u03C4\u03BF <code>quickjs_rust/js_rust_funcs.h</code>, \u03C4\u03BF \u03BF\u03C0\u03BF\u03AF\u03BF \u03C0\u03B1\u03C1\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1 \u03B1\u03C0\u03CC \u03C4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03BA\u03B5\u03C6\u03B1\u03BB\u03AF\u03B4\u03B1\u03C2 \u03C4\u03B7\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B1\u03C2 \u03B5\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03C1\u03BF\u03C5\u03C3\u03C4\u03AF\u03BA <code>rust/rust.h</code> \u03BA\u03B1\u03B9 \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03B5\u03AF \u03BC\u03B5 \u03C4\u03BF \u03C7\u03AD\u03C1\u03B9.</p><p>\u039A\u03B1\u03B9 \u03C4\u03BF <code>rust/rust.h</code> \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03B5\u03AF\u03C4\u03B1\u03B9 \u03BC\u03B5 \u03C4\u03B7\u03BD \u03BA\u03BB\u03AE\u03C3\u03B7 \u03C4\u03BF\u03C5 cbindgen \u03B1\u03C0\u03CC \u03C4\u03BF <code>./rust/build.xsh</code>.</p><h3 id="rust-build-xsh" tabindex="-1"><a class="header-anchor" href="#rust-build-xsh" aria-hidden="true">#</a> <code>rust/build.xsh</code></h3><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from os.path import dirname,abspath
import platform
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;../.xonshrc&quot;.exists() &amp;&amp; source ../.xonshrc

./src/export/mod.gen.py

system = platform.system().lower()
if system == &#39;darwin&#39;:
  system = f&#39;apple-{system}&#39;

TARGET=f&#39;{platform.machine()}-{system}&#39;

def cbindgen():
  cbindgen -q --config cbindgen.toml --crate rust --output rust.h

try:
  cbindgen()
except:
  cargo clean
  cbindgen()

cargo build \\
--release \\
-Z build-std=std,panic_abort \\
-Z build-std-features=panic_immediate_abort \\
--target @(TARGET)

mv ./target/@(TARGET)/release/librust.a ./target/release
</code></pre></div><h2 id="\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B5\u03B9\u03C2-\u03B1\u03BD\u03B1\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B5\u03B9\u03C2-\u03B1\u03BD\u03B1\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2" aria-hidden="true">#</a> \u03A3\u03B7\u03BC\u03B5\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2 \u03B1\u03BD\u03AC\u03C0\u03C4\u03C5\u03BE\u03B7\u03C2</h2><h3 id="quickjs-ffi" tabindex="-1"><a class="header-anchor" href="#quickjs-ffi" aria-hidden="true">#</a> <code>quickjs_ffi</code></h3>`,20),Kn=s("\u039A\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03B1\u03C0\u03CC "),zn={href:"https://raw.githubusercontent.com/taskie/quijine/main/quijine_core/src/ffi.rs",target:"_blank",rel:"noopener noreferrer"},Pn=s("quijine/main/quijine_core/src/ffi.rs"),Qn=p(`<p>\u03BC\u03B5 \u03BA\u03AC\u03C0\u03BF\u03B9\u03B5\u03C2 \u03BC\u03B9\u03BA\u03C1\u03AD\u03C2 \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03B9\u03C2, \u03B1\u03BD\u03C4\u03B9\u03BA\u03B1\u03B8\u03B9\u03C3\u03C4\u03CE\u03BD\u03C4\u03B1\u03C2</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">pub</span> <span class="token keyword">use</span> <span class="token namespace">libquickjs_sys<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
</code></pre></div><p>\u03C3\u03C4\u03BF</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">pub</span> <span class="token keyword">use</span> <span class="token namespace">libquickjs_sys<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#![allow(non_upper_case_globals)]</span>
<span class="token attribute attr-name">#![allow(non_camel_case_types)]</span>
<span class="token attribute attr-name">#![allow(non_snake_case)]</span>

<span class="token macro property">include!</span><span class="token punctuation">(</span><span class="token macro property">concat!</span><span class="token punctuation">(</span><span class="token macro property">env!</span><span class="token punctuation">(</span><span class="token string">&quot;OUT_DIR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/c.rs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="undefined-symbols-for-architecture-x86-64-js-toint32" tabindex="-1"><a class="header-anchor" href="#undefined-symbols-for-architecture-x86-64-js-toint32" aria-hidden="true">#</a> <code>Undefined symbols for architecture x86_64: &quot;_JS_ToInt32&quot;</code></h3><p>\u03A4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 &#39;. /rust/Cargo.toml&#39; \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2, \u03B4\u03B9\u03B1\u03C4\u03B7\u03C1\u03CE\u03BD\u03C4\u03B1\u03C2 \u03BC\u03CC\u03BD\u03BF \u03C4\u03B7 staticlib</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">lib</span><span class="token punctuation">]</span>
<span class="token comment">#crate-type = [&quot;lib&quot;, &quot;cdylib&quot;, &quot;staticlib&quot;]</span>
<span class="token key property">crate-type</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;staticlib&quot;</span><span class="token punctuation">]</span>
</code></pre></div><h2 id="\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03B5\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03B5\u03C2" aria-hidden="true">#</a> \u0391\u03BD\u03B1\u03C6\u03BF\u03C1\u03AD\u03C2</h2>`,8),Wn={start:"0"},Gn=s("\u0391\u03C0\u03CC \u03C4\u03B7 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE "),Hn=n("code",null,"JS",-1),Xn=s(" \u03C3\u03C4\u03BF \u03C0\u03C1\u03CC\u03B3\u03C1\u03B1\u03BC\u03BC\u03B1 \u03B5\u03BA\u03C4\u03AD\u03BB\u03B5\u03C3\u03B7\u03C2 "),Zn=n("code",null,"JS",-1),Yn=s(),$n={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-1.md",target:"_blank",rel:"noopener noreferrer"},ns=s("(\u03C0\u03AC\u03BD\u03C9)"),ss=s(),as={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-2.md",target:"_blank",rel:"noopener noreferrer"},ts=s("(\u03BA\u03AC\u03C4\u03C9)"),ps={href:"https://github.com/quickjs-zh/QuickJS/wiki/%E4%BD%BF%E7%94%A8C%E8%AF%AD%E8%A8%80%E4%B8%BAQuickJS%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},os=s("\u0391\u03BD\u03AC\u03C0\u03C4\u03C5\u03BE\u03B7 \u03BC\u03B9\u03B1\u03C2 \u03B5\u03B3\u03B3\u03B5\u03BD\u03BF\u03CD\u03C2 \u03BC\u03BF\u03BD\u03AC\u03B4\u03B1\u03C2 \u03B3\u03B9\u03B1 \u03C4\u03BF "),cs=n("code",null,"QuickJS",-1),es=s(" \u03C3\u03B5 C"),us={href:"https://wasmedge.org/book/en/dev/js/rust.html",target:"_blank",rel:"noopener noreferrer"},ls=s("\u03A7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03BF\u03C5 Rust \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03C5\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 JS API"),ks={href:"https://github.com/Kozova1/quickjs-example",target:"_blank",rel:"noopener noreferrer"},is=s("\u03A0\u03B1\u03C1\u03B1\u03B4\u03B5\u03AF\u03B3\u03BC\u03B1\u03C4\u03B1 QuickJS"),rs={href:"https://rust-lang.github.io/rust-bindgen/",target:"_blank",rel:"noopener noreferrer"},ds=s("rust-bindgen"),ms={href:"https://calbertts.medium.com/how-to-create-asynchronous-apis-for-quickjs-8aca5488bb2e",target:"_blank",rel:"noopener noreferrer"},fs=s("\u03A0\u03CE\u03C2 \u03BD\u03B1 \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03AE\u03C3\u03B5\u03C4\u03B5 \u03B1\u03C3\u03CD\u03B3\u03C7\u03C1\u03BF\u03BD\u03BF \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03B3\u03B9\u03B1 \u03C4\u03BF "),_s=n("code",null,"QuickJS",-1),ys={href:"https://github.com/DelSkayn/rquickjs/blob/master/core/src/context/ctx.rs#L104",target:"_blank",rel:"noopener noreferrer"},ws=s("rquickjs \u2192 JS_NewPromiseCapability"),gs={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L515",target:"_blank",rel:"noopener noreferrer"},hs=s("wasmedge-quickjs \u2192 new_promise"),bs={href:"https://github.com/second-state/wasmedge-quickjs/blob/da887752fdc9c36aca0f4b7499c5b115862ce771/src/internal_module/wasi_net_module.rs#L46",target:"_blank",rel:"noopener noreferrer"},xs=s("wasmedge-quickjs \u2192 JsMethod"),js={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L756",target:"_blank",rel:"noopener noreferrer"},Ss=s("wasmedge-quickjs \u2192 \u03BA\u03BB\u03AE\u03C3\u03B7"),qs={href:"https://mp.weixin.qq.com/s/BKto24ItwXbeHon_LaF_0w",target:"_blank",rel:"noopener noreferrer"},Js=s("\u0397 \u03B1\u03C0\u03B1\u03C1\u03B1\u03C4\u03AE\u03C1\u03B7\u03C4\u03B7 \u03C0\u03B1\u03B3\u03AF\u03B4\u03B1 - \u03BA\u03BB\u03B5\u03B9\u03B4\u03B1\u03C1\u03B9\u03AD\u03C2 \u03C3\u03C4\u03BF Rust"),vs=n("h2",{id:"\u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03B1-\u03BC\u03B5-\u03C4\u03BF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03B1-\u03BC\u03B5-\u03C4\u03BF","aria-hidden":"true"},"#"),s(" \u03A3\u03C7\u03B5\u03C4\u03B9\u03BA\u03AC \u03BC\u03B5 \u03C4\u03BF")],-1),Vs=s("\u0391\u03C5\u03C4\u03CC \u03C4\u03BF \u03AD\u03C1\u03B3\u03BF \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03B5\u03AF \u03BC\u03AD\u03C1\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03AD\u03C1\u03B3\u03BF\u03C5 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 "),Cs=s("rmw.link ( "),Es={href:"//rmw.link",target:"_blank",rel:"noopener noreferrer"},Ns=s("rmw.link"),Is=s(" )."),Ds=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/rmw-link/logo/master/rmw.red.bg.svg",alt:"rmw.link"})],-1);function Us(Ts,Fs){const a=c("ExternalLinkIcon");return e(),u(l,null,[i,r,n("ul",null,[n("li",null,[n("a",d,[m,t(a)])]),n("li",null,[n("a",f,[_,t(a)])]),n("li",null,[n("a",y,[w,t(a)])]),n("li",null,[n("a",g,[h,t(a)])])]),b,n("p",null,[x,n("a",j,[S,t(a)]),q,J,v,n("a",V,[C,t(a)]),E]),N,n("p",null,[I,n("a",D,[U,T,t(a)]),F]),n("p",null,[O,n("a",L,[R,t(a)]),M,A,B,K,z]),P,n("p",null,[Q,W,G,n("a",H,[X,t(a)]),Z,Y,$,nn,sn,an,tn,pn,on,cn,en,un,ln]),kn,n("p",null,[rn,n("a",dn,[mn,t(a)]),fn,_n,yn]),wn,n("p",null,[gn,n("a",hn,[bn,t(a)]),xn,jn,Sn]),qn,Jn,n("p",null,[vn,n("a",Vn,[Cn,t(a)]),En,Nn,In]),Dn,n("ul",null,[Un,n("li",null,[Tn,n("p",null,[Fn,n("a",On,[Ln,t(a)]),Rn,n("a",Mn,[An,t(a)])])])]),Bn,n("p",null,[Kn,n("a",zn,[Pn,t(a)])]),Qn,n("ol",Wn,[n("li",null,[Gn,Hn,Xn,Zn,Yn,n("a",$n,[ns,t(a)]),ss,n("a",as,[ts,t(a)])]),n("li",null,[n("a",ps,[os,cs,es,t(a)])]),n("li",null,[n("a",us,[ls,t(a)])]),n("li",null,[n("a",ks,[is,t(a)])]),n("li",null,[n("a",rs,[ds,t(a)])]),n("li",null,[n("a",ms,[fs,_s,t(a)])]),n("li",null,[n("a",ys,[ws,t(a)])]),n("li",null,[n("a",gs,[hs,t(a)])]),n("li",null,[n("a",bs,[xs,t(a)])]),n("li",null,[n("a",js,[Ss,t(a)])]),n("li",null,[n("a",qs,[Js,t(a)])])]),vs,n("p",null,[Vs,n("strong",null,[Cs,n("a",Es,[Ns,t(a)])]),Is]),Ds],64)}var Ls=o(k,[["render",Us],["__file","2022-04-29-quickjs-rust.html.vue"]]);export{Ls as default};
