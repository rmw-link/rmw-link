import{_ as o,r as e,o as c,c as u,a as n,b as t,F as l,d as s,e as p}from"./app.32c338c0.js";const i={},k=n("h1",{id:"\u4FEE\u6539-quickjs-\u4EE5\u5BFC\u5165-rust-\u51FD\u6570-\u2014\u2014-\u4E00\u79CD\u6269\u5C55\u5317\u6D77\u7684\u65B0\u601D\u8DEF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4FEE\u6539-quickjs-\u4EE5\u5BFC\u5165-rust-\u51FD\u6570-\u2014\u2014-\u4E00\u79CD\u6269\u5C55\u5317\u6D77\u7684\u65B0\u601D\u8DEF","aria-hidden":"true"},"#"),s(" \u4FEE\u6539 quickjs \u4EE5\u5BFC\u5165 rust \u51FD\u6570 \u2014\u2014 \u4E00\u79CD\u6269\u5C55\u5317\u6D77\u7684\u65B0\u601D\u8DEF")],-1),r=n("h2",{id:"\u4EE3\u7801\u5E93",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4EE3\u7801\u5E93","aria-hidden":"true"},"#"),s(" \u4EE3\u7801\u5E93")],-1),d={href:"https://github.com/rmw-lib/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},_=s("github"),h={href:"https://gitee.com/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},m=s("gitee"),f={href:"https://gitflic.ru/project/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},g=s("gitflic"),b={href:"https://bitbucket.org/rmw-link/quickjs-rust",target:"_blank",rel:"noopener noreferrer"},y=s("bitbucket"),w=n("h2",{id:"\u8D77\u56E0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8D77\u56E0","aria-hidden":"true"},"#"),s(" \u8D77\u56E0")],-1),j={href:"https://openkraken.com",target:"_blank",rel:"noopener noreferrer"},x=s("\u5317\u6D77"),q=s(" \u662F\u57FA\u4E8E "),S=n("code",null,"Flutter",-1),v=s(" \u6784\u5EFA\u9AD8\u6027\u80FD Web \u6E32\u67D3\u5F15\u64CE\uFF0C\u5B83\u4F7F\u7528\u4E86 "),J={href:"https://github.com/openkraken/kraken/tree/main/bridge/third_party/quickjs",target:"_blank",rel:"noopener noreferrer"},E=s("quickjs"),C=s("\uFF0C\u4F5C\u4E3A\u811A\u672C\u5F15\u64CE\u3002"),V=n("p",null,[s("\u6211\u671F\u671B\u7528 "),n("code",null,"rust"),s(" \u5199\u4E00\u4E9B\u5317\u6D77\u7684\u6269\u5C55\u3002")],-1),N=s("\u5317\u6D77 "),D={href:"https://openkraken.com/guide/advanced/custom-js-api",target:"_blank",rel:"noopener noreferrer"},I=s("\u652F\u6301\u7528 "),U=n("code",null,"dart",-1),T=s(" \u5199\u6269\u5C55"),F=s("\u3002"),L=s("\u7528 "),A={href:"https://github.com/fzyzcjy/flutter_rust_bridge",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"flutter_rust_bridge",-1),M=s(" \u53EF\u4EE5\u6253\u901A "),B=n("code",null,"rust",-1),O=s(" \u548C "),P=n("code",null,"dart",-1),Q=s("\u3002"),z=n("p",null,[s("\u7ED3\u5408\u4EE5\u4E0A\u4E24\u70B9\uFF0C\u7528 "),n("code",null,"rust"),s(" \u5199\u5317\u6D77\u7684\u6269\u5C55\u4E0D\u96BE\u3002"),n("br"),s(" \u4F46\uFF0C\u6B64\u65B9\u6848\u6027\u80FD\u5F00\u9500\u611F\u89C9\u6BD4\u8F83\u5927\uFF0C\u56E0\u4E3A "),n("code",null,"dart"),s(" \u8C03\u7528 "),n("code",null,"rust"),s(" \u6709\u4E00\u6B21\u6027\u80FD\u635F\u8017\uFF0C"),n("code",null,"quickjs"),s(" \u8C03\u7528 "),n("code",null,"dart"),s(" \u53C8\u6709\u4E00\u6B21\u6027\u80FD\u635F\u8017\u3002")],-1),W=s("\u53E6\u4E00\u65B9\u9762\uFF0C\u867D\u7136 "),K=n("code",null,"rust",-1),G=s(" \u793E\u533A\u6709 "),H={href:"https://github.com/DelSkayn/rquickjs",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"rquickjs",-1),Z=s(" \u8FD9\u79CD\u5728 "),Y=n("code",null,"rust",-1),$=s(" \u4E2D\u8C03\u7528 "),nn=n("code",null,"quickjs",-1),sn=s(" \u5E93\u3002"),an=n("br",null,null,-1),tn=s(" \u4F46\uFF0C\u5B83\u4EEC\u662F\u8C03\u7528 "),pn=n("code",null,"quickjs",-1),on=s(" \u800C\u4E0D\u662F\u5D4C\u5165 "),en=n("code",null,"quickjs",-1),cn=s("\uFF0C\u4E5F\u6CA1\u6CD5\u7528\u6765\u9B54\u6539 "),un=n("code",null,"quickjs",-1),ln=s(" \u3002"),kn=p(`<p>\u5728\u6B64\u4EE3\u7801\u5E93\u4E2D\uFF0C\u6211\u5B9E\u73B0\u4E00\u79CD\u65B0\u65B9\u6848\uFF1A\u76F4\u63A5\u4FEE\u6539 <code>quickjs</code> \u6E90\u4EE3\u7801\uFF0C\u4F7F\u5176\u652F\u6301 <code>rust</code> \u6269\u5C55\u3002</p><p>\u8FD9\u662F\u4E00\u4E2A\u901A\u7528\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u4E0D\u4EC5\u4EC5\u53EF\u4EE5\u7528\u4E8E\u4FEE\u6539\u5317\u6D77\uFF0C\u5728\u6240\u6709\u5D4C\u5165\u4E86 <code>quickjs</code> \u6846\u67B6\u548C\u5E93\u90FD\u9002\u7528\u3002</p><h2 id="\u6F14\u793A" tabindex="-1"><a class="header-anchor" href="#\u6F14\u793A" aria-hidden="true">#</a> \u6F14\u793A</h2><p>test.js \u4EE3\u7801\u5982\u4E0B :</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">try_run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u274C&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> rust <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;export from rust :&quot;</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>rust<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
  fib<span class="token punctuation">,</span>
  sleep
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rust&#39;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;begin sleep 2s&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sleep done&#39;</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fib(3) =&#39;</span><span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;try catch example :&quot;</span><span class="token punctuation">)</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">try_run</span><span class="token punctuation">(</span>fib<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD0\u884C <code>./quickjs/qjs test.js</code>, \u8F93\u51FA :</p><div class="language-text ext-text"><pre class="language-text"><code>export from rust : fib,sleep
begin sleep 2s
sleep done
fib(3) = 6
try catch example :
\u274C miss : args need 1 pass 0
    at fib (native)
    at try_run (test.js:8)
    at &lt;anonymous&gt; (test.js:27)

\u274C not number : args position 0
    at fib (native)
    at try_run (test.js:6)
    at &lt;anonymous&gt; (test.js:28)
</code></pre></div><h3 id="fib-\u5728-rust-\u4E2D\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#fib-\u5728-rust-\u4E2D\u7684\u5B9E\u73B0" aria-hidden="true">#</a> fib \u5728 rust \u4E2D\u7684\u5B9E\u73B0</h3><p>js \u4E2D\u5BFC\u5165\u7684 fib \u51FD\u6570\u6765\u81EA <code>rust/src/export/fib.rs</code> \uFF0C\u4EE3\u7801\u5982\u4E0B :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i64</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_fib</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> fib_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">js<span class="token punctuation">::</span></span><span class="token function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u76EE\u524D\uFF0C\u8FC7\u7A0B\u5B8F <code>#[js]</code> \u53EA\u662F\u6DFB\u52A0\u4E86\u4E00\u4E2A\u5E38\u91CF <code>fib_args_len</code>\uFF0C\u6807\u8BC6\u51FD\u6570\u7684\u53C2\u6570\u4E2A\u6570\u3002</p><p>\u65E5\u540E\uFF0C\u53EF\u4EE5\u8FDB\u4E00\u6B65\u7F16\u5199\u8FC7\u7A0B\u5B8F <code>./rust_macro</code> \u4EE5\u5B9E\u73B0\u5168\u81EA\u52A8\u7684\u51FD\u6570\u5BFC\u51FA\u3002</p><h3 id="\u5F02\u6B65\u51FD\u6570-sleep-\u5728-rust-\u4E2D\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u51FD\u6570-sleep-\u5728-rust-\u4E2D\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u5F02\u6B65\u51FD\u6570 sleep \u5728 rust \u4E2D\u7684\u5B9E\u73B0</h3><p>js \u4E2D\u5BFC\u5165\u7684 sleep \u51FD\u6570\u6765\u81EA <code>rust/src/export/sleep.rs</code> \uFF0C\u4EE3\u7801\u5982\u4E0B :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">js<span class="token punctuation">::</span></span>arg<span class="token punctuation">,</span> <span class="token namespace">qjs<span class="token punctuation">::</span></span>run<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">async_io<span class="token punctuation">::</span></span><span class="token class-name">Timer</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rust_macro<span class="token punctuation">::</span></span>js<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[js]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sleep</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timer</span><span class="token punctuation">::</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">js_sleep</span><span class="token punctuation">(</span>
  ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span>
  _this<span class="token punctuation">:</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
  argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
  argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argc<span class="token punctuation">,</span> sleep_args_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">match</span> <span class="token namespace">arg<span class="token punctuation">::</span></span><span class="token function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">,</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
      <span class="token function">sleep</span><span class="token punctuation">(</span>n <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4ECE\u4E0A\u9762\u53EF\u4EE5\u770B\u5230\uFF0C\u6240\u6709\u5BFC\u51FA\u7684\u51FD\u6570\u90FD\u5B9A\u4E49\u5728\u76EE\u5F55 <code>./rust/src/export</code> \u4E2D\uFF0C\u8FD9\u4E2A\u76EE\u5F55\u7684 <code>mod.rs</code> \u4F1A\u5728\u8FD0\u884C <code>./rust/build.xsh</code> \u81EA\u52A8\u751F\u6210\uFF0C\u5BFC\u51FA\u5176\u4E0B\u6240\u6709\u7684 <code>.rs</code> \u6587\u4EF6\u3002</p><h3 id="js-\u4F20\u5165\u53C2\u6570\u7684\u8BFB\u53D6\u548C\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#js-\u4F20\u5165\u53C2\u6570\u7684\u8BFB\u53D6\u548C\u6821\u9A8C" aria-hidden="true">#</a> js \u4F20\u5165\u53C2\u6570\u7684\u8BFB\u53D6\u548C\u6821\u9A8C</h3><p>\u53C2\u6570\u7684\u8BFB\u53D6\u548C\u6821\u9A8C\u5728 <code>src/js/arg.rs</code> \u4E2D\uFF0C\u4EE3\u7801\u5982\u4E0B :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>js<span class="token punctuation">::</span></span>throw<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">,</span> <span class="token class-name">JS_ToInt64</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">,</span> <span class="token namespace">os<span class="token punctuation">::</span>raw<span class="token punctuation">::</span></span>c_int<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_miss</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argc<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span> need<span class="token punctuation">:</span> c_int<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> argc <span class="token operator">&lt;</span> need <span class="token punctuation">{</span>
    <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;miss : args need {need} pass {argc}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">arg_i64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> argv<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> pos<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token operator">*</span>argv<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token class-name">JS_IsNumber</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token function">throw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;not number : args position {pos}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JS_ToInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> _<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u76EE\u524D\u53EA\u63D0\u4F9B\u4E86\u53C2\u6570\u4E2A\u6570\u7684\u6821\u9A8C\uFF0C\u4EE5\u53CA\u5BF9 i64 \u7C7B\u578B\u53C2\u6570\u7684\u8BFB\u53D6\u3002</p>`,20),rn=s("\u53EF\u4EE5\u6309\u9700\u6C42\u81EA\u884C\u6DFB\u52A0\uFF0C\u8BFB\u53D6\u51FD\u6570\u53C2\u89C1 "),dn={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},_n=s("qjs_sys"),hn=s(" \u4E2D\u4EE5 "),mn=n("code",null,"JS_To",-1),fn=s(" \u5F00\u5934\u7684\u51FD\u6570\u3002"),gn=p(`<h3 id="\u4ECE-rust-\u5230-js-\u6570\u636E\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u4ECE-rust-\u5230-js-\u6570\u636E\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u4ECE rust \u5230 js \u6570\u636E\u7C7B\u578B\u8F6C\u6362</h3><p>\u7C7B\u578B\u8F6C\u6362\u5728 <code>src/js/val.rs</code> \u4E2D\uFF0C\u4EE3\u7801\u5982\u4E0B :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">quickjs_ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">JSContext</span><span class="token punctuation">,</span> <span class="token class-name">JSValue</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">,</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">,</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token class-name">CString</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token class-name">None</span><span class="token punctuation">,</span>
  <span class="token class-name">Undefined</span><span class="token punctuation">,</span>
  <span class="token constant">I64</span><span class="token punctuation">(</span><span class="token keyword">i64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">CString</span><span class="token punctuation">(</span><span class="token class-name">CString</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">CString</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Val</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token class-name">CString</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">val</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">JSContext</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">Val</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">JSValue</span> <span class="token punctuation">{</span>
  <span class="token keyword">match</span> t<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_NULL</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">Undefined</span> <span class="token operator">=&gt;</span> <span class="token constant">JS_UNDEFINED</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token constant">I64</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewInt64</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Val</span><span class="token punctuation">::</span><span class="token class-name">CString</span><span class="token punctuation">(</span>cstr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">JS_NewString</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cstr<span class="token punctuation">.</span><span class="token function">as_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u76EE\u524D\u53EA\u5B9A\u4E49\u4E86 <code>None</code>\u3001<code>()</code>\u3001<code>i64</code>\u3001CString \u8FD9 4 \u79CD\u7C7B\u578B\u5230 <code>js</code> \u7684\u8F6C\u6362\uFF0C\u53EF\u4EE5\u6839\u636E\u9700\u8981\u81EA\u5DF1\u6DFB\u52A0\u3002</p>`,4),bn=s("\u66F4\u591A\u6570\u636E\u7C7B\u578B\u7684\u58F0\u660E\u65B9\u5F0F\u53EF\u53C2\u89C1 "),yn={href:"https://docs.rs/qjs-sys/0.1.2/qjs_sys/",target:"_blank",rel:"noopener noreferrer"},wn=s("qjs_sys"),jn=s(" \u4E2D\u4EE5 "),xn=n("code",null,"JS_New",-1),qn=s(" \u5F00\u5934\u7684\u51FD\u6570\u3002"),Sn=n("h2",{id:"\u5F00\u53D1\u73AF\u5883",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F00\u53D1\u73AF\u5883","aria-hidden":"true"},"#"),s(" \u5F00\u53D1\u73AF\u5883")],-1),vn=n("p",null,"\u6211\u662F\u5728\u82F9\u679C\u7B14\u8BB0\u672C\u4E0A\u5F00\u53D1\u7684\uFF0Crust \u7528\u7684\u662F 1.62.0-nightly\u3002",-1),Jn=s("\u5148\u5B89\u88C5 "),En={href:"https://direnv.net",target:"_blank",rel:"noopener noreferrer"},Cn=s("direnv"),Vn=s(" \uFF0C\u8FDB\u5165\u76EE\u5F55\u540E\uFF0C"),Nn=n("code",null,"direnv allow",-1),Dn=s(" \u4E00\u4E0B"),In=p(`<p>\u5B89\u88C5 python3\uFF0C\u7136\u540E <code>pip3 install -r ./requirements.txt</code></p><p>\u8FD0\u884C <code>./build.xsh</code> \u5373\u53EF\u7F16\u8BD1\u5E76\u8FD0\u884C\u6F14\u793A</p><p>\u9ED8\u8BA4\u662F\u4F1A\u514B\u9686 quickjs \u7684\u5B98\u65B9\u4ED3\u5E93\uFF0C\u5982\u679C\u60F3\u4FEE\u6539\u5317\u6D77\u4ED3\u5E93\u7684\u4E2D\u7684 quickjs\uFF0C\u5148</p><p><code>git clone --recursive git@github.com:openkraken/kraken.git --depth=1</code></p><p>\u7136\u540E\u8FDB\u884C\u5982\u4E0B\u64CD\u4F5C</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">rm</span> -rf quickjs
<span class="token function">ln</span> -s <span class="token punctuation">..</span>/kraken/bridge/third_party/quickjs <span class="token builtin class-name">.</span>
</code></pre></div><p>\u6700\u540E\u91CD\u65B0\u8FD0\u884C <code>./build.xsh</code></p><h2 id="\u76EE\u5F55\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55\u7ED3\u6784" aria-hidden="true">#</a> \u76EE\u5F55\u7ED3\u6784</h2>`,8),Un=p("<li><p><code>./quickjs_rust</code><br> \u4FEE\u6539 quickjs \u4EE3\u7801\u7684 c \u6587\u4EF6</p></li><li><p><code>./quickjs_ffi</code><br> \u5BFC\u51FA <code>quickjs</code> \u5934\u6587\u4EF6\u7684\u51FD\u6570\u5230 <code>rust</code></p></li><li><p><code>./rust</code><br> \u7528 <code>rust</code> \u5B9E\u73B0 <code>quickjs</code> \u4E2D\u7684\u51FD\u6570</p><ul><li><code>./rust/src/qjs.rs</code><br> \u5F02\u6B65\u8C03\u7528\u7684\u5B9E\u73B0\u3002\u56E0\u4E3A <code>quickjs</code> \u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u6240\u4EE5\u6D89\u53CA <code>quckjs</code> \u51FD\u6570\u8C03\u7528\u90FD\u5199\u5728\u4E3B\u7EBF\u7A0B\u3002</li></ul></li>",3),Tn=n("p",null,[n("code",null,"./rust_macro"),n("br"),n("code",null,"rust"),s(" \u8FC7\u7A0B\u5B8F "),n("code",null,"#[js]"),s(" \u7684\u5B9E\u73B0")],-1),Fn=s("\u672A\u6765\u53EF\u4EE5\u53C2\u8003 wasmedge-quickjs \u5B9E\u73B0 rust \u51FD\u6570\u81EA\u52A8\u5BFC\u51FA\u4E3A js \u51FD\u6570\u3002"),Ln={href:"https://github.com/second-state/wasmedge-quickjs/blob/70efe8520dc65636cb81b7225e2a6dae47cfad49/src/quickjs_sys/mod.rs#L122",target:"_blank",rel:"noopener noreferrer"},An=s("wasmedge-quickjs \u2192 JsFunctionTrampoline"),Rn=p(`<h2 id="\u6784\u5EFA\u811A\u672C-build-xsh" tabindex="-1"><a class="header-anchor" href="#\u6784\u5EFA\u811A\u672C-build-xsh" aria-hidden="true">#</a> \u6784\u5EFA\u811A\u672C <code>build.xsh</code></h2><p>\u4E0D\u591A\u8BF4\uFF0C\u76F4\u63A5\u770B <code>build.xsh</code> \u6784\u5EFA\u811A\u672C\u6E90\u4EE3\u7801</p><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from pathlib import Path
from os.path import dirname,abspath,exists,join
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;.xonshrc&quot;.exists() &amp;&amp; source .xonshrc

quickjs = &#39;quickjs&#39;

if not exists(quickjs):
  git clone git@github.com:bellard/@(quickjs).git --depth=1

./quickjs_rust/patch.py

./rust/build.xsh
./quickjs_rust/gen.py

def ln_s(li):
  for arg in li.split(&#39; &#39;):
    fp = join(quickjs,arg)
    if not exists(fp):
      ln -s @(PWD)/@(arg) @(fp)

ln_s(&#39;quickjs_rust rust quickjs_ffi rust_macro&#39;)

cd @(quickjs)
make qjs

cd @(PWD)
./quickjs/qjs --unhandled-rejection -m test.js 2&gt;&amp;1 | tee test.js.out
</code></pre></div><h2 id="\u539F\u7406\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406\u89E3\u6790" aria-hidden="true">#</a> \u539F\u7406\u89E3\u6790</h2><h3 id="quickjs-rust-patch-py" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-patch-py" aria-hidden="true">#</a> <code>quickjs_rust/patch.py</code></h3><p>\u8FD0\u884C <code>./quickjs_rust/patch.py</code> \u4F1A\u5BF9 <code>quickjs</code> \u6E90\u7801\u505A\u4E00\u4E9B\u5C0F\u4FEE\u6539\u3002</p><p>\u5176\u4E2D <code>JS_AddRust</code> \u662F\u7528\u6765\u6CE8\u5165 rust \u6A21\u5757\u7684\u51FD\u6570\u3002</p><p>\u5728 <code>JS_ExecutePendingJob</code> \u4E2D\u6CE8\u5165\u4E86 <code>rust_run</code> \u6765\u8C03\u7528\u5F02\u6B65\u51FD\u6570\u3002</p><p>\u5168\u90E8\u6539\u52A8\u622A\u56FE\u5982\u4E0B :</p><p><img src="//irmw.gumlet.io/ep2Xgg.png" alt=""></p><h3 id="quickjs-rust-h" tabindex="-1"><a class="header-anchor" href="#quickjs-rust-h" aria-hidden="true">#</a> <code>quickjs_rust.h</code></h3><p>\u4ECE\u4E0A\u9762\u6539\u52A8\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u5F15\u5165\u4E86\u4E00\u4E2A\u65B0\u7684\u5934\u6587\u4EF6 <code>quickjs_rust.h</code> \uFF0C\u5176\u4EE3\u7801\u5982\u4E0B</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QUICKJS_RUST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUICKJS_RUST_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../quickjs/quickjs.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;../rust/rust.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">countof</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">JS_RUSTFUNC_DEF</span><span class="token expression"><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token function">JS_CFUNC_DEF</span><span class="token punctuation">(</span>#name<span class="token punctuation">,</span> name</span><span class="token punctuation">##</span><span class="token expression">_args_len<span class="token punctuation">,</span> js_</span><span class="token punctuation">##</span><span class="token expression">name<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;./js_rust_funcs.h&quot;</span></span>

<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> js_rust_funcs_count <span class="token operator">=</span> <span class="token function">countof</span><span class="token punctuation">(</span>js_rust_funcs<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">int</span>
<span class="token function">js_rust_init</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">JS_SetModuleExportList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">,</span>
      js_rust_funcs_count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">JS_INIT_MODULE</span> <span class="token expression">js_init_module_rust</span></span>

JSModuleDef<span class="token operator">*</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> module_name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m<span class="token punctuation">;</span>
  m <span class="token operator">=</span> <span class="token function">JS_NewCModule</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> module_name<span class="token punctuation">,</span> js_rust_init<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>m<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
  <span class="token function">js_rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> m<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">JS_AddRust</span><span class="token punctuation">(</span>JSContext<span class="token operator">*</span> ctx<span class="token punctuation">,</span> JSRuntime<span class="token operator">*</span> rt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  JSModuleDef<span class="token operator">*</span> m <span class="token operator">=</span> <span class="token function">JS_INIT_MODULE</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;rust&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> js_rust_funcs_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">JS_AddModuleExport</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> m<span class="token punctuation">,</span> js_rust_funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">rust_init</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> rt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre></div><h3 id="rust-rust-h" tabindex="-1"><a class="header-anchor" href="#rust-rust-h" aria-hidden="true">#</a> <code>rust/rust.h</code></h3><p>\u53EF\u4EE5\u770B\u5230 <code>quickjs_rust/quickjs_rust.h</code> \u5F15\u5165\u4E86 <code>quickjs_rust/js_rust_funcs.h</code>\uFF0C\u6B64\u662F\u6839\u636E rust \u5BFC\u51FA\u51FD\u6570\u7684\u5934\u6587\u4EF6 <code>rust/rust.h</code> \u81EA\u52A8\u751F\u6210\u7684\uFF0C\u4E0D\u8981\u624B\u5DE5\u4FEE\u6539\u3002</p><p>\u800C <code>rust/rust.h</code> \u662F\u5728 <code>./rust/build.xsh</code> \u4E2D\u8C03\u7528 cbindgen \u751F\u6210\u7684\u3002</p><h3 id="rust-build-xsh" tabindex="-1"><a class="header-anchor" href="#rust-build-xsh" aria-hidden="true">#</a> <code>rust/build.xsh</code></h3><div class="language-xonsh ext-xonsh"><pre class="language-xonsh"><code>#!/usr/bin/env xonsh

from os.path import dirname,abspath
import platform
PWD = dirname(abspath(__file__))
cd @(PWD)

p&quot;../.xonshrc&quot;.exists() &amp;&amp; source ../.xonshrc

./src/export/mod.gen.py

system = platform.system().lower()
if system == &#39;darwin&#39;:
  system = f&#39;apple-{system}&#39;

TARGET=f&#39;{platform.machine()}-{system}&#39;

def cbindgen():
  cbindgen -q --config cbindgen.toml --crate rust --output rust.h

try:
  cbindgen()
except:
  cargo clean
  cbindgen()

cargo build \\
--release \\
-Z build-std=std,panic_abort \\
-Z build-std-features=panic_immediate_abort \\
--target @(TARGET)

mv ./target/@(TARGET)/release/librust.a ./target/release
</code></pre></div><h2 id="\u5F00\u53D1\u5907\u5FD8" tabindex="-1"><a class="header-anchor" href="#\u5F00\u53D1\u5907\u5FD8" aria-hidden="true">#</a> \u5F00\u53D1\u5907\u5FD8</h2><h3 id="quickjs-ffi" tabindex="-1"><a class="header-anchor" href="#quickjs-ffi" aria-hidden="true">#</a> <code>quickjs_ffi</code></h3>`,20),Mn=s("\u4EE3\u7801\u6765\u81EA "),Bn={href:"https://raw.githubusercontent.com/taskie/quijine/main/quijine_core/src/ffi.rs",target:"_blank",rel:"noopener noreferrer"},On=s("quijine/main/quijine_core/src/ffi.rs"),Pn=p(`<p>\u505A\u4E86\u4E00\u4E9B\u5C0F\u4FEE\u6539\uFF0C\u66FF\u6362</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">pub</span> <span class="token keyword">use</span> <span class="token namespace">libquickjs_sys<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E3A</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token attribute attr-name">#![allow(non_upper_case_globals)]</span>
<span class="token attribute attr-name">#![allow(non_camel_case_types)]</span>
<span class="token attribute attr-name">#![allow(non_snake_case)]</span>

<span class="token macro property">include!</span><span class="token punctuation">(</span><span class="token macro property">concat!</span><span class="token punctuation">(</span><span class="token macro property">env!</span><span class="token punctuation">(</span><span class="token string">&quot;OUT_DIR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/c.rs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="undefined-symbols-for-architecture-x86-64-js-toint32" tabindex="-1"><a class="header-anchor" href="#undefined-symbols-for-architecture-x86-64-js-toint32" aria-hidden="true">#</a> <code>Undefined symbols for architecture x86_64: &quot;_JS_ToInt32&quot;</code></h3><p>\u4FEE\u6539 &#39;./rust/Cargo.toml&#39; \u5982\u4E0B\uFF0C\u53EA\u4FDD\u7559 staticlib</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">lib</span><span class="token punctuation">]</span>
<span class="token comment">#crate-type = [&quot;lib&quot;, &quot;cdylib&quot;, &quot;staticlib&quot;]</span>
<span class="token key property">crate-type</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;staticlib&quot;</span><span class="token punctuation">]</span>
</code></pre></div><h2 id="\u53C2\u8003\u6587\u732E" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u732E" aria-hidden="true">#</a> \u53C2\u8003\u6587\u732E</h2>`,8),Qn={start:"0"},zn=s("\u4ECE "),Wn=n("code",null,"JS",-1),Kn=s(" \u5F15\u64CE\u5230 "),Gn=n("code",null,"JS",-1),Hn=s(" \u8FD0\u884C\u65F6 "),Xn={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-1.md",target:"_blank",rel:"noopener noreferrer"},Zn=s("(\u4E0A)"),Yn=s(),$n={href:"https://github.com/doodlewind/blog/blob/master/source/_posts/js-engine-to-js-runtime-2.md",target:"_blank",rel:"noopener noreferrer"},ns=s("\uFF08\u4E0B\uFF09"),ss={href:"https://github.com/quickjs-zh/QuickJS/wiki/%E4%BD%BF%E7%94%A8C%E8%AF%AD%E8%A8%80%E4%B8%BAQuickJS%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},as=s("\u4F7F\u7528 C \u8BED\u8A00\u4E3A "),ts=n("code",null,"QuickJS",-1),ps=s(" \u5F00\u53D1\u4E00\u4E2A\u539F\u751F\u6A21\u5757"),os={href:"https://wasmedge.org/book/en/dev/js/rust.html",target:"_blank",rel:"noopener noreferrer"},es=s("Use Rust to implement JS API"),cs={href:"https://github.com/Kozova1/quickjs-example",target:"_blank",rel:"noopener noreferrer"},us=s("QuickJS examples"),ls={href:"https://rust-lang.github.io/rust-bindgen/",target:"_blank",rel:"noopener noreferrer"},is=s("rust-bindgen"),ks={href:"https://calbertts.medium.com/how-to-create-asynchronous-apis-for-quickjs-8aca5488bb2e",target:"_blank",rel:"noopener noreferrer"},rs=s("\u5982\u4F55\u4E3A "),ds=n("code",null,"QuickJS",-1),_s=s(" \u521B\u5EFA\u5F02\u6B65\u4EE3\u7801"),hs={href:"https://github.com/DelSkayn/rquickjs/blob/master/core/src/context/ctx.rs#L104",target:"_blank",rel:"noopener noreferrer"},ms=s("rquickjs \u2192 JS_NewPromiseCapability"),fs={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L515",target:"_blank",rel:"noopener noreferrer"},gs=s("wasmedge-quickjs \u2192 new_promise"),bs={href:"https://github.com/second-state/wasmedge-quickjs/blob/da887752fdc9c36aca0f4b7499c5b115862ce771/src/internal_module/wasi_net_module.rs#L46",target:"_blank",rel:"noopener noreferrer"},ys=s("wasmedge-quickjs \u2192 JsMethod"),ws={href:"https://github.com/second-state/wasmedge-quickjs/blob/8a65582265ecdd3171380feebf56b3bb8c34d183/src/quickjs_sys/mod.rs#L756",target:"_blank",rel:"noopener noreferrer"},js=s("wasmedge-quickjs \u2192 call"),xs={href:"https://mp.weixin.qq.com/s/BKto24ItwXbeHon_LaF_0w",target:"_blank",rel:"noopener noreferrer"},qs=s("\u4E0D\u6613\u5BDF\u89C9\u7684\u9677\u9631\u2014\u2014Rust \u4E2D\u7684\u9501"),Ss=n("h2",{id:"\u5173\u4E8E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5173\u4E8E","aria-hidden":"true"},"#"),s(" \u5173\u4E8E")],-1),vs=s("\u672C\u9879\u76EE\u96B6\u5C5E\u4E8E "),Js=s("\u4EBA\u6C11\u7F51\u7EDC ("),Es={href:"//rmw.link",target:"_blank",rel:"noopener noreferrer"},Cs=s("rmw.link"),Vs=s(")"),Ns=s(" \u4EE3\u7801\u8BA1\u5212\u3002"),Ds=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/rmw-link/logo/master/rmw.red.bg.svg",alt:"\u4EBA\u6C11\u7F51\u7EDC"})],-1);function Is(Us,Ts){const a=e("ExternalLinkIcon");return c(),u(l,null,[k,r,n("ul",null,[n("li",null,[n("a",d,[_,t(a)])]),n("li",null,[n("a",h,[m,t(a)])]),n("li",null,[n("a",f,[g,t(a)])]),n("li",null,[n("a",b,[y,t(a)])])]),w,n("p",null,[n("a",j,[x,t(a)]),q,S,v,n("a",J,[E,t(a)]),C]),V,n("p",null,[N,n("a",D,[I,U,T,t(a)]),F]),n("p",null,[L,n("a",A,[R,t(a)]),M,B,O,P,Q]),z,n("p",null,[W,K,G,n("a",H,[X,t(a)]),Z,Y,$,nn,sn,an,tn,pn,on,en,cn,un,ln]),kn,n("p",null,[rn,n("a",dn,[_n,t(a)]),hn,mn,fn]),gn,n("p",null,[bn,n("a",yn,[wn,t(a)]),jn,xn,qn]),Sn,vn,n("p",null,[Jn,n("a",En,[Cn,t(a)]),Vn,Nn,Dn]),In,n("ul",null,[Un,n("li",null,[Tn,n("p",null,[Fn,n("a",Ln,[An,t(a)])])])]),Rn,n("p",null,[Mn,n("a",Bn,[On,t(a)])]),Pn,n("ol",Qn,[n("li",null,[zn,Wn,Kn,Gn,Hn,n("a",Xn,[Zn,t(a)]),Yn,n("a",$n,[ns,t(a)])]),n("li",null,[n("a",ss,[as,ts,ps,t(a)])]),n("li",null,[n("a",os,[es,t(a)])]),n("li",null,[n("a",cs,[us,t(a)])]),n("li",null,[n("a",ls,[is,t(a)])]),n("li",null,[n("a",ks,[rs,ds,_s,t(a)])]),n("li",null,[n("a",hs,[ms,t(a)])]),n("li",null,[n("a",fs,[gs,t(a)])]),n("li",null,[n("a",bs,[ys,t(a)])]),n("li",null,[n("a",ws,[js,t(a)])]),n("li",null,[n("a",xs,[qs,t(a)])])]),Ss,n("p",null,[vs,n("strong",null,[Js,n("a",Es,[Cs,t(a)]),Vs]),Ns]),Ds],64)}var Ls=o(i,[["render",Is],["__file","2022-04-29-quickjs-rust.html.vue"]]);export{Ls as default};
