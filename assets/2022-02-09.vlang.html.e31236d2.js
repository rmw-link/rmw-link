import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as s,a as e,b as t,w as r,F as d,d as n,e as l,r as p}from"./app.2a6a1bd2.js";const c={},h=e("h1",{id:"v-notities-over-het-leren-van-talen",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v-notities-over-het-leren-van-talen","aria-hidden":"true"},"#"),n(" V Notities over het leren van talen")],-1),g=e("hr",null,null,-1),m=e("p",null,"Inhoudsopgave :",-1),v={class:"table-of-contents"},u=n("Inleiding: vlang, de taal van de toekomst"),k=n("Voorwoord"),b=n("v self Compileer het zelf"),f=n("V Schrijven van scripts"),w=n("Bewaak bestandswijzigingen en start de run automatisch opnieuw op"),_=l(`<hr><h2 id="inleiding-vlang-de-taal-van-de-toekomst" tabindex="-1"><a class="header-anchor" href="#inleiding-vlang-de-taal-van-de-toekomst" aria-hidden="true">#</a> Inleiding: vlang, de taal van de toekomst</h2><p>vlang, voor front-end, back-end, big data, blockchain, kunstmatige intelligentie, doordringt elk aspect van de samenleving. Het verslaan van andere programmeertalen en het verenigen van de wereld in 2050. Het werd zelfs de lingua franca van de wereld, waardoor de mensheid de legendarische Toren van Babel kon herbouwen en de technologie met sprongen vooruitging ......</p><p>--- <a href="https://www.zhihu.com/question/318526180/answer/729421901" target="_blank" rel="noopener noreferrer">Geciteerd uit People&#39;s Daily 2050</a></p><h2 id="voorwoord" tabindex="-1"><a class="header-anchor" href="#voorwoord" aria-hidden="true">#</a> Voorwoord</h2><p><a href="https://vlang.io" target="_blank" rel="noopener noreferrer"><code>V\u8BED\u8A00</code></a> , Vlang, de programmeertaal voor hackers.</p><p>roest en zig zijn goed, maar ze zijn te rigoureus en academisch.</p><p>V is meer een snelstarttaal zoals javascript, minder gestructureerd, snel aan de slag en natuurlijk snel.</p><p>Veel van de hype op de V-homepage is nog niet doorgedrongen (b.v. C tot V automatisch) en <a href="https://www.zhihu.com/question/318526180" target="_blank" rel="noopener noreferrer">is door velen valse propaganda genoemd</a>, b.v. :</p><p>Het is de juiste strategie om eerst voor propaganda te gaan en het dan waar te maken; de mens is een gemeenschap van verbeelding.</p><blockquote><p>De meeste mensen geloven omdat ze zien, en sommige mensen zien omdat ze geloven.</p></blockquote><p>Net zoals het geloof in het communisme misschien in de minderheid is, maar er zal altijd een zeer klein aantal mensen zijn dat echt gelooft, en het vuur van een ster kan een prairiebrand doen ontbranden. Zonder de Communistische Partij zou er geen nieuw China zijn.</p><p>Computer wiskundigen vinden V misschien een beetje frivool, maar ik denk dat hackers de taal geweldig zullen vinden.</p><p>Denken is handelen, durven denken, durven proberen, en misschien is dat het verschil tussen kunst en wiskunde. Is een programmeertaal kunst of wiskunde? Dat is de eeuwige vraag.</p><p>Het beste aan V vind ik de vervaging van de grenzen tussen taalontwerp en programma-ontwikkeling.</p><p>Het compileert zichzelf, en in drie of vijf seconden, kan het opnieuw gecompileerd worden, en is de code duidelijk.</p><p>De auteur van V schrijft in de <a href="https://github.com/vlang/v/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">V-code directory structuur</a>:</p><blockquote><p>Ik heb geprobeerd om de compiler en de vlib-code zo eenvoudig en leesbaar mogelijk te maken.</p><p>Een van de doelstellingen van V is om open te staan voor ontwikkelaars met verschillende niveaus van compiler ontwikkelervaring. De compiler hoeft geen zwarte doos vol magie te zijn die slechts een paar mensen kunnen begrijpen.</p><p>De V-compiler is modulair en kan door andere toepassingen worden gebruikt. Het is gelegen op <code>cmd/v/</code> en <code>vlib/v/</code>.</p><p>Het belangrijkste en nuttigste commando bij het werken met de V compiler is <code>v self</code>. Het herbouwt de V compiler.</p><p>De structuur van de compiler is zeer eenvoudig en bestaat uit drie verschillende stappen.</p><p>Parsing/genereren van AST ( <code>v.parser</code>) =&gt; controleren van het type ( <code>v.checker</code>) =&gt; genereren van C/JavaScript/machinecode ( <code>v.gen</code>)</p></blockquote><p>Men zou kunnen denken :</p><blockquote><p><a href="https://www.zhihu.com/question/318526180/answer/685952638" target="_blank" rel="noopener noreferrer">De lexer en parser niet meegerekend, is de kerncode slechts een paar duizend regels. Ik kan alleen maar zeggen dat de auteur goed aan marketing heeft gedaan en dat de offici\xEBle website er ook zo uitziet.</a></p></blockquote><p>Maar ik denk dat deze eenvoud het beste is aan V.</p><p>Denk niet aan V als een traditionele lompe programmeertaal met een compiler die een obscuur, obscuur boek in de hemel is.</p><p>Zie het als een web front-end framework, zoals Vue, waar de toetredingsdrempel laag is en iedereen mee kan doen.</p><p>Als je een probleem hebt, verander je het gewoon.</p><blockquote><p>Doe het zelf en je zult genoeg te eten hebben.</p></blockquote><p>Een mooie nieuwe wereld is niet iets waar je maar op zit te wachten, het is iets wat werkende mensen met hun handen cre\xEBren.</p><p><img src="//irmw.gumlet.io/cEFoDn.jpg" alt=""></p><h2 id="v-self-compileer-het-zelf" tabindex="-1"><a class="header-anchor" href="#v-self-compileer-het-zelf" aria-hidden="true">#</a> <code>v self</code> Compileer het zelf</h2><p>V kan zichzelf gemakkelijk compileren met <code>v self</code>. Op mijn 2015-versie van Apple&#39;s laptop duurt het 5,63 seconden om \xE9\xE9n keer te compileren.</p><p>Ik raad aan het als broncode te installeren.</p><div class="language-text ext-text"><pre class="language-text"><code>git clone git@github.com:vlang/v.git
make
sudo ./v symlink
</code></pre></div><p>Als je idee\xEBn hebt, ga je gang en pas je de broncode van de compiler of standaardbibliotheek direct aan.</p><p>Gebruik dan <code>v self</code>en compileer het zelf. Als je je vereisten hebt uitgewerkt, commit ze dan en voeg ze samen in de offici\xEBle broncode.</p><p>Vandaag heb ik net V geleerd en ik heb 3 merge requests gelanceerd <a href="https://github.com/vlang/v/pull/13518" target="_blank" rel="noopener noreferrer">(1</a>, <a href="https://github.com/vlang/v/pull/13524" target="_blank" rel="noopener noreferrer">2</a>, <a href="https://github.com/vlang/v/pull/13514" target="_blank" rel="noopener noreferrer">3</a> ) met een suggestie voor taalverbetering: <a href="https://github.com/vlang/v/issues/13526" target="_blank" rel="noopener noreferrer">optionele expliciete verklaring van ondersteuning voor een interface</a>.</p><p>Ik spreek niet goed Engels, maar met de vertaler <a href="https://www.deepl.com/zh/translator" target="_blank" rel="noopener noreferrer">op DeepL</a> is het gemakkelijk om van het Chinees naar het Engels om te zetten voor een diepgaande communicatie met internationale vrienden.</p><h2 id="v-schrijven-van-scripts" tabindex="-1"><a class="header-anchor" href="#v-schrijven-van-scripts" aria-hidden="true">#</a> V Schrijven van scripts</h2><p><code>v init</code> Na het initialiseren van het project, heb ik een compilatie script nodig.</p><p>V kan gebruikt worden om dit script te schrijven in plaats van bash.</p><p>Mijn compilatie script is als volgt.</p><div class="language-vlang ext-vlang"><pre class="language-vlang"><code>#!/usr/bin/env -S v run

import v.vmod

fn sh(cmd string){
  println(&quot;\u276F $cmd&quot;)
  print(execute_or_exit(cmd).output)
}

vm := vmod.decode( @VMOD_FILE ) or { panic(err) }

name := vm.name

sh(&#39;v -autofree -prod \${name}.v&#39;)

suffix := $if windows { &#39;.exe&#39; } $else { &#39;&#39; }
src := name + suffix
bin := join_path_single(&#39;bin&#39;,src)
mkdir(&#39;bin&#39;) or {}
mv(src, bin)?

println(&#39;  &#39;+bin)
</code></pre></div><h2 id="bewaak-bestandswijzigingen-en-start-de-run-automatisch-opnieuw-op" tabindex="-1"><a class="header-anchor" href="#bewaak-bestandswijzigingen-en-start-de-run-automatisch-opnieuw-op" aria-hidden="true">#</a> Bewaak bestandswijzigingen en start de run automatisch opnieuw op</h2><p>Het is mijn gewoonte om een script \xE9\xE9n keer te schrijven en uit te voeren, en te controleren op veranderingen en het automatisch opnieuw te starten is wat ik nodig heb.</p><p>v komt met <code>v watch run xx.v</code> om dit te doen.</p><p>Ik heb een script gemaakt om het gebruik van <code>./dev.sh</code> als volgt te vergemakkelijken.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>#!/usr/bin/env bash

DIR=$(dirname $(realpath &quot;$0&quot;))
cd $DIR
set -ex

NAME=$(cat v.mod|grep name|awk -F\\&#39; &#39;{print $2}&#39;)
SH=&quot;v watch run $NAME.v&quot;

exec $SH \\
  -i &#39;.git&#39; \\
  -i &#39;bin&#39; \\
  -c -s --before &quot;printf \\&quot;\\e[90m\u276F \${SH}\\e[0m\\n\\&quot;&quot;
</code></pre></div><p>Voor het project sjabloon zie <a href="https://github.com/rmw-link/rmw-v-template" target="_blank" rel="noopener noreferrer">rmw-link/rmw-v-template</a></p>`,46);function z(j,V){const a=p("RouterLink");return i(),s(d,null,[h,g,m,e("nav",v,[e("ul",null,[e("li",null,[t(a,{to:"#inleiding-vlang-de-taal-van-de-toekomst"},{default:r(()=>[u]),_:1})]),e("li",null,[t(a,{to:"#voorwoord"},{default:r(()=>[k]),_:1})]),e("li",null,[t(a,{to:"#v-self-compileer-het-zelf"},{default:r(()=>[b]),_:1})]),e("li",null,[t(a,{to:"#v-schrijven-van-scripts"},{default:r(()=>[f]),_:1})]),e("li",null,[t(a,{to:"#bewaak-bestandswijzigingen-en-start-de-run-automatisch-opnieuw-op"},{default:r(()=>[w]),_:1})])])]),_],64)}var D=o(c,[["render",z],["__file","2022-02-09.vlang.html.vue"]]);export{D as default};
