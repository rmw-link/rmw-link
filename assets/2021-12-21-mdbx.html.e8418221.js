import{_ as u,o as l,c as k,a as n,b as a,w as o,F as i,d as s,e as c,r as e}from"./app.278ef889.js";const r={},m=n("h1",{id:"\u03C4\u03BF-\u03C0\u03B1\u03BA\u03B5\u03C4\u03BF-rust-\u03B3\u03B9\u03B1-\u03C4\u03BF-libmdbx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C4\u03BF-\u03C0\u03B1\u03BA\u03B5\u03C4\u03BF-rust-\u03B3\u03B9\u03B1-\u03C4\u03BF-libmdbx","aria-hidden":"true"},"#"),s(" \u03A4\u03BF \u03C0\u03B1\u03BA\u03AD\u03C4\u03BF rust \u03B3\u03B9\u03B1 \u03C4\u03BF libmdbx")],-1),d=s("\u03A4\u03BF \u03C0\u03B5\u03C1\u03B9\u03C4\u03CD\u03BB\u03B9\u03B3\u03BC\u03B1 "),b=n("code",null,"rust",-1),y=s(" \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD "),f={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},_=s("libmdbx"),g=s("."),h=n("hr",null,null,-1),w=n("p",null,"\u039A\u03B1\u03C4\u03AC\u03BB\u03BF\u03B3\u03BF\u03C2 :",-1),x={class:"table-of-contents"},v=s("\u0391\u03C0\u03BF\u03C3\u03C0\u03AC\u03C3\u03BC\u03B1\u03C4\u03B1"),q=s("\u03A4\u03B9 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B7 libmdbx;"),D=s("\u03A3\u03B5\u03BC\u03B9\u03BD\u03AC\u03C1\u03B9\u03B1"),E=s("\u03A0\u03CE\u03C2 \u03BD\u03B1 \u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1"),B=s("\u03A0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 1 : \u0393\u03C1\u03AC\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2 set(key,val) \u03BA\u03B1\u03B9 \u03B4\u03B9\u03B1\u03B2\u03AC\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2 .get(key)"),T=s("\u039A\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2"),M=s("\u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF"),N=s("\u03A0\u03B5\u03C1\u03B9\u03B3\u03C1\u03B1\u03C6\u03AE \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD"),S=s("env_rw! \u039F\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),X=s("\u039C\u03B1\u03BA\u03C1\u03BF\u03C3\u03BA\u03BF\u03C0\u03B9\u03BA\u03AE \u03B5\u03C0\u03AD\u03BA\u03C4\u03B1\u03C3\u03B7"),R=s("anyhow \u03BA\u03B1\u03B9 lazy_static"),O=s("\u0397 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE mdbx!"),C=s("\u039D\u03AE\u03BC\u03B1\u03C4\u03B1 \u03BA\u03B1\u03B9 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2"),V=s("\u0391\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03CE\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),U=s("\u03A0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 2: \u03A4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE, \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7"),I=s("\u039A\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2"),A=s("\u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF"),L=s("\u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B5\u03C2 \u03B1\u03BD\u03B1\u03B3\u03BD\u03CE\u03C3\u03B5\u03B9\u03C2 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AD\u03C2"),P=s("\u03A4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),F=s("\u03A0\u03C1\u03BF\u03BA\u03B1\u03B8\u03BF\u03C1\u03B9\u03C3\u03BC\u03AD\u03BD\u03BF\u03B9 \u03C4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),z=s("\u03A3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),$=s("DUPSORT : \u0388\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03C4\u03B9\u03BC\u03AD\u03C2"),Y=s(".dup(key) iterator \u03C0\u03BF\u03C5 \u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 \u03CC\u03BB\u03B5\u03C2 \u03C4\u03B9\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03C0\u03BF\u03C5 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03BF\u03CD\u03BD \u03C3\u03B5 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF"),j=s("\u03A0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B5\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03C4\u03CE\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1"),G=s("\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),H=s(".del(key) \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B5\u03BD\u03CC\u03C2 \u03C0\u03BB\u03AE\u03BA\u03C4\u03C1\u03BF\u03C5"),W=s(".del_val(key,val) \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B1\u03BA\u03C1\u03B9\u03B2\u03BF\u03CD\u03C2 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03AF\u03B1\u03C2"),K=s("\u0394\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03AE"),J=s("\u03B4\u03B9\u03B1\u03B4\u03BF\u03C7\u03B9\u03BA\u03AE \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7"),Q=s(".rev() \u0391\u03BD\u03C4\u03AF\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7 \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7 \u03C3\u03B5\u03B9\u03C1\u03AC\u03C2"),Z=s("\u03A4\u03B1\u03BE\u03B9\u03BD\u03CC\u03BC\u03B7\u03C3\u03B7"),nn=s("\u0395\u03C0\u03B1\u03BD\u03B1\u03BB\u03AE\u03C0\u03C4\u03B5\u03C2 \u03B4\u03B9\u03B1\u03C3\u03C4\u03AE\u03BC\u03B1\u03C4\u03BF\u03C2"),sn=s("\u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF \u03C4\u03BF\u03C5"),an=s(".range(begin..end) \u0394\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03B5\u03C0\u03B1\u03BD\u03AC\u03BB\u03B7\u03C8\u03B7\u03C2"),pn=s(".rev_range \u0391\u03BD\u03C4\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03AD\u03BD\u03B1 \u03B4\u03B9\u03B1\u03C3\u03C4\u03AE\u03BC\u03B1\u03C4\u03B1"),tn=s("\u03A0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03C4\u03CD\u03C0\u03C9\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD"),on=s("\u0391\u03C0\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03AD\u03BD\u03C9\u03BD \u03C4\u03CD\u03C0\u03C9\u03BD \u03BC\u03B5 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AD\u03C2 \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CE\u03BD"),cn=s("\u03A3\u03B7\u03BC\u03B5\u03AF\u03C9\u03C3\u03B7 \u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03AC \u03BC\u03B5 \u03C4\u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03B7\u03C2"),en=s("\u03A4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03CD"),un=s("\u03A5\u03C0\u03BF\u03C3\u03B7\u03BC\u03B5\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2"),ln=n("hr",null,null,-1),kn=n("h2",{id:"\u03B1\u03C0\u03BF\u03C3\u03C0\u03B1\u03C3\u03BC\u03B1\u03C4\u03B1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03B1\u03C0\u03BF\u03C3\u03C0\u03B1\u03C3\u03BC\u03B1\u03C4\u03B1","aria-hidden":"true"},"#"),s(" \u0391\u03C0\u03BF\u03C3\u03C0\u03AC\u03C3\u03BC\u03B1\u03C4\u03B1")],-1),rn=s("\u039A\u03B1\u03B8\u03CE\u03C2 \u03AD\u03B3\u03C1\u03B1\u03C6\u03B1 \u03C4\u03BF "),mn={href:"https://rmw.link",target:"_blank",rel:"noopener noreferrer"},dn=s("'rmw.link"),bn=s(" ', \u03AD\u03BD\u03B9\u03C9\u03C3\u03B1 \u03CC\u03C4\u03B9 \u03C7\u03C1\u03B5\u03B9\u03B1\u03B6\u03CC\u03BC\u03BF\u03C5\u03BD \u03BC\u03B9\u03B1 \u03B5\u03BD\u03C3\u03C9\u03BC\u03B1\u03C4\u03C9\u03BC\u03AD\u03BD\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD."),yn=n("p",null,[s("\u039B\u03CC\u03B3\u03C9 \u03C4\u03B7\u03C2 \u03C4\u03B1\u03C7\u03CD\u03C4\u03B7\u03C4\u03B1\u03C2 \u03BC\u03B5\u03C4\u03AC\u03B4\u03BF\u03C3\u03B7\u03C2 \u03B4\u03B9\u03BA\u03C4\u03CD\u03BF\u03C5 \u03C0\u03BF\u03C5 \u03C3\u03C5\u03BD\u03B5\u03C0\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03B7 \u03C3\u03C5\u03C7\u03BD\u03AE \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE, \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE, \u03C4\u03BF "),n("code",null,"sqlite3"),s(" \u03AE\u03C4\u03B1\u03BD \u03C0\u03BF\u03BB\u03CD \u03C0\u03C1\u03BF\u03B7\u03B3\u03BC\u03AD\u03BD\u03BF \u03B3\u03B9\u03B1 \u03BB\u03CC\u03B3\u03BF\u03C5\u03C2 \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7\u03C2.")],-1),fn=s("\u0388\u03C4\u03C3\u03B9, \u03BC\u03B9\u03B1 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03CE\u03BD-\u03C4\u03B9\u03BC\u03CE\u03BD \u03C7\u03B1\u03BC\u03B7\u03BB\u03CC\u03C4\u03B5\u03C1\u03BF\u03C5 \u03B5\u03C0\u03B9\u03C0\u03AD\u03B4\u03BF\u03C5 \u03AE\u03C4\u03B1\u03BD \u03C0\u03B9\u03BF \u03BA\u03B1\u03C4\u03AC\u03BB\u03BB\u03B7\u03BB\u03B7 "),_n={href:"https://discourse.world/h/2020/06/05/Shine-and-poverty-key-value-database-LMDB-in-applications-for-iOS",target:"_blank",rel:"noopener noreferrer"},gn=s("(\u03B7 lmdb \u03B5\u03AF\u03BD\u03B1\u03B9 10 \u03C6\u03BF\u03C1\u03AD\u03C2 \u03C4\u03B1\u03C7\u03CD\u03C4\u03B5\u03C1\u03B7 \u03B1\u03C0\u03CC \u03C4\u03B7\u03BD sqlite"),hn=s(" ) "),wn={href:"https://discourse.world/h/2020/06/05/Shine-and-poverty-key-value-database-LMDB-in-applications-for-iOS",target:"_blank",rel:"noopener noreferrer"},xn=s("."),vn=n("p",null,[n("img",{src:"//irmw.gumlet.io/yxZV8x.jpg",alt:""})],-1),qn=n("p",null,[s("\u03A4\u03B5\u03BB\u03B9\u03BA\u03AC, \u03B5\u03C0\u03AD\u03BB\u03B5\u03BE\u03B1 \u03C4\u03B7 \u03BC\u03B1\u03B3\u03B9\u03BA\u03AE \u03B5\u03BA\u03B4\u03BF\u03C7\u03AE \u03C4\u03BF\u03C5 "),n("code",null,"lmdb"),s(" - "),n("code",null,"mdbx"),s(".")],-1),Dn=s("\u0395\u03C0\u03AF \u03C4\u03BF\u03C5 \u03C0\u03B1\u03C1\u03CC\u03BD\u03C4\u03BF\u03C2, \u03C4\u03BF \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03BD \u03C0\u03B1\u03BA\u03AD\u03C4\u03BF "),En=n("code",null,"rust",-1),Bn=s(" \u03C4\u03BF\u03C5 "),Tn={href:"https://github.com/vorot93/mdbx-rs/issues/1",target:"_blank",rel:"noopener noreferrer"},Mn=s("mdbx-rs (mdbx-sys)"),Nn=s(" \u03B1\u03C0\u03CC \u03C4\u03BF "),Sn=n("code",null,"mdbx",-1),Xn=s(),Rn={href:"https://github.com/vorot93/mdbx-rs/issues/1",target:"_blank",rel:"noopener noreferrer"},On=s("\u03B4\u03B5\u03BD \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03B1 Windows"),Cn=s(", \u03BF\u03C0\u03CC\u03C4\u03B5 \u03B1\u03BD\u03AD\u03BB\u03B1\u03B2\u03B1 \u03BD\u03B1 \u03B2\u03AC\u03BB\u03C9 \u03C3\u03B5 \u03C0\u03B1\u03BA\u03AD\u03C4\u03BF \u03BC\u03B9\u03B1 \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7 \u03BC\u03B5 \u03C5\u03C0\u03BF\u03C3\u03C4\u03AE\u03C1\u03B9\u03BE\u03B7 \u03B3\u03B9\u03B1 \u03C4\u03B1 Windows."),Vn=c(`<p>\u03A5\u03C0\u03BF\u03C3\u03C4\u03AE\u03C1\u03B9\u03BE\u03B7 \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03B1\u03C0\u03BF\u03B8\u03AE\u03BA\u03B5\u03C5\u03C3\u03B7 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03AD\u03BD\u03C9\u03BD \u03C4\u03CD\u03C0\u03C9\u03BD \u03C3\u03BA\u03BF\u03C5\u03C1\u03B9\u03AC\u03C2. \u03A5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7.</p><p>\u0397 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03BF\u03C1\u03B9\u03C3\u03C4\u03B5\u03AF \u03C3\u03B5 \u03BC\u03B9\u03B1 \u03B5\u03BD\u03CC\u03C4\u03B7\u03C4\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03CE\u03BD\u03C4\u03B1\u03C2 \u03C4\u03BF <code>lazy_static</code> \u03BA\u03B1\u03B9 \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 \u03BD\u03B1 \u03B5\u03B9\u03C3\u03B1\u03C7\u03B8\u03B5\u03AF \u03BA\u03B1\u03B9 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03B5\u03AF \u03BC\u03B5 \u03BA\u03AC\u03C4\u03B9 \u03C3\u03B1\u03BD :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u03C4\u03B9-\u03B5\u03B9\u03BD\u03B1\u03B9-\u03B7-libmdbx" tabindex="-1"><a class="header-anchor" href="#\u03C4\u03B9-\u03B5\u03B9\u03BD\u03B1\u03B9-\u03B7-libmdbx" aria-hidden="true">#</a> \u03A4\u03B9 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B7 libmdbx;</h2>`,4),Un=s("\u03A4\u03BF "),In={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},An=s("mdbx"),Ln=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03B5\u03CD\u03BF\u03C5\u03C3\u03B1 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B2\u03B1\u03C3\u03B9\u03C3\u03BC\u03AD\u03BD\u03B7 \u03C3\u03C4\u03BF lmdb, \u03C4\u03BF\u03C5 \u03A1\u03CE\u03C3\u03BF\u03C5 "),Pn={href:"https://vk.com/erthink",target:"_blank",rel:"noopener noreferrer"},Fn=s("\u041B\u0435\u043E\u043D\u0438\u0434 \u042E\u0440\u044C\u0435\u0432 (Leonid Yuriev"),zn=s(" )."),$n=s("\u0397 "),Yn={href:"https://en.wikipedia.org/wiki/Lightning_Memory-Mapped_Database",target:"_blank",rel:"noopener noreferrer"},jn=s("lmdb"),Gn=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03B5\u03BE\u03B1\u03B9\u03C1\u03B5\u03C4\u03B9\u03BA\u03AC \u03B3\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B5\u03BD\u03C3\u03C9\u03BC\u03B1\u03C4\u03C9\u03BC\u03AD\u03BD\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03CE\u03BD-\u03C4\u03B9\u03BC\u03CE\u03BD."),Hn=s("\u0397 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE \u03B1\u03BD\u03B1\u03B6\u03AE\u03C4\u03B7\u03C3\u03B7\u03C2 \u03C0\u03BB\u03AE\u03C1\u03BF\u03C5\u03C2 \u03BA\u03B5\u03B9\u03BC\u03AD\u03BD\u03BF\u03C5 "),Wn={href:"https://docs.meilisearch.com/reference/under_the_hood/storage.html#measured-disk-usage",target:"_blank",rel:"noopener noreferrer"},Kn=s("MeiliSearch"),Jn=s(" \u03B2\u03B1\u03C3\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03B7\u03BD lmdb."),Qn={href:"https://docs.nvidia.com/deeplearning/dali/user-guide/docs/examples/general/data_loading/dataloading_lmdb.html",target:"_blank",rel:"noopener noreferrer"},Zn=s("\u03A4\u03BF \u03C0\u03BB\u03B1\u03AF\u03C3\u03B9\u03BF \u03B2\u03B1\u03B8\u03B9\u03AC\u03C2 \u03BC\u03AC\u03B8\u03B7\u03C3\u03B7\u03C2 caffe \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03B5\u03C0\u03AF\u03C3\u03B7\u03C2 \u03C4\u03BF lmdb \u03C9\u03C2 \u03C7\u03CE\u03C1\u03BF \u03B1\u03C0\u03BF\u03B8\u03AE\u03BA\u03B5\u03C5\u03C3\u03B7\u03C2"),ns=s(" \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD."),ss=s("\u03A4\u03BF "),as={href:"https://github.com/erthink/libmdbx#added-features",target:"_blank",rel:"noopener noreferrer"},ps=s("mdbx \u03B5\u03AF\u03BD\u03B1\u03B9 30% \u03C4\u03B1\u03C7\u03CD\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03C4\u03BF lmdb \u03C3\u03C4\u03BF \u03B5\u03BD\u03C3\u03C9\u03BC\u03B1\u03C4\u03C9\u03BC\u03AD\u03BD\u03BF \u03C4\u03B5\u03C3\u03C4 \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7\u03C2 ioarena"),ts=s("."),os=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-1.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-3.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-4.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-5.png",alt:""})],-1),cs=s("\u03A4\u03B1\u03C5\u03C4\u03CC\u03C7\u03C1\u03BF\u03BD\u03B1, \u03C4\u03BF mdbx "),es={href:"https://github.com/erthink/libmdbx#improvements-beyond-lmdb",target:"_blank",rel:"noopener noreferrer"},us=s("\u03B2\u03B5\u03BB\u03C4\u03B9\u03CE\u03BD\u03B5\u03B9 \u03C0\u03BF\u03BB\u03BB\u03AD\u03C2 \u03B1\u03C0\u03CC \u03C4\u03B9\u03C2 \u03B1\u03B4\u03C5\u03BD\u03B1\u03BC\u03AF\u03B5\u03C2 \u03C4\u03BF\u03C5"),ls=s(" lmdb, \u03BF\u03C0\u03CC\u03C4\u03B5 \u03C4\u03BF Erigon (\u03BF \u03C0\u03B5\u03BB\u03AC\u03C4\u03B7\u03C2 ethereum \u03B5\u03C0\u03CC\u03BC\u03B5\u03BD\u03B7\u03C2 \u03B3\u03B5\u03BD\u03B9\u03AC\u03C2) \u03BC\u03B5\u03C4\u03B1\u03C0\u03AE\u03B4\u03B7\u03C3\u03B5 \u03C0\u03C1\u03CC\u03C3\u03C6\u03B1\u03C4\u03B1 \u03B1\u03C0\u03CC \u03C4\u03BF LMDB \u03C3\u03C4\u03BF MDBX "),ks=n("sup",{class:"footnote-ref"},[n("a",{href:"#fn1",id:"fnref1"},"[1]")],-1),is=s("."),rs=c(`<h2 id="\u03C3\u03B5\u03BC\u03B9\u03BD\u03B1\u03C1\u03B9\u03B1" tabindex="-1"><a class="header-anchor" href="#\u03C3\u03B5\u03BC\u03B9\u03BD\u03B1\u03C1\u03B9\u03B1" aria-hidden="true">#</a> \u03A3\u03B5\u03BC\u03B9\u03BD\u03AC\u03C1\u03B9\u03B1</h2><h3 id="\u03C0\u03C9\u03C2-\u03BD\u03B1-\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03B5\u03C4\u03B5-\u03C4\u03BF-\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1" tabindex="-1"><a class="header-anchor" href="#\u03C0\u03C9\u03C2-\u03BD\u03B1-\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03B5\u03C4\u03B5-\u03C4\u03BF-\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1" aria-hidden="true">#</a> \u03A0\u03CE\u03C2 \u03BD\u03B1 \u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1</h3><p>\u03A0\u03C1\u03CE\u03C4\u03B1 \u03BA\u03BB\u03C9\u03BD\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03B2\u03AC\u03C3\u03B7 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 <code>git clone git@github.com:rmw-lib/mdbx.git --depth=1 &amp;&amp; cd mdbx</code></p><p>\u03A3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1, \u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03BF <code>cargo run --example 01</code> \u03BA\u03B1\u03B9 \u03B8\u03B1 \u03C4\u03C1\u03AD\u03BE\u03B5\u03B9 <code>examples/01.rs</code></p><p>\u0395\u03AC\u03BD \u03C0\u03C1\u03CC\u03BA\u03B5\u03B9\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03BF \u03B4\u03B9\u03BA\u03CC \u03C3\u03B1\u03C2 \u03AD\u03C1\u03B3\u03BF, \u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BD\u03B1 \u03C4\u03BF \u03B5\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03B5\u03C4\u03B5 \u03C0\u03C1\u03CE\u03C4\u03B1 :</p><div class="language-bash ext-sh"><pre class="language-bash"><code>cargo <span class="token function">install</span> cargo-edit
cargo <span class="token function">add</span> mdbx lazy_static ctor <span class="token function">paste</span>
</code></pre></div><h3 id="\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-1-\u03B3\u03C1\u03B1\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2-set-key-val-\u03BA\u03B1\u03B9-\u03B4\u03B9\u03B1\u03B2\u03B1\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2-get-key" tabindex="-1"><a class="header-anchor" href="#\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-1-\u03B3\u03C1\u03B1\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2-set-key-val-\u03BA\u03B1\u03B9-\u03B4\u03B9\u03B1\u03B2\u03B1\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2-get-key" aria-hidden="true">#</a> \u03A0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 1 : \u0393\u03C1\u03AC\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2 <code>set(key,val)</code> \u03BA\u03B1\u03B9 \u03B4\u03B9\u03B1\u03B2\u03AC\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2 <code>.get(key)</code></h3>`,7),ms=s("\u0391\u03C2 \u03B4\u03BF\u03CD\u03BC\u03B5 \u03AD\u03BD\u03B1 \u03B1\u03C0\u03BB\u03CC "),ds={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/01.rs",target:"_blank",rel:"noopener noreferrer"},bs=s("\u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1/01.rs"),ys=c(`<h4 id="\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2" aria-hidden="true">#</a> \u039A\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2</h4><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF" aria-hidden="true">#</a> \u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/01.mdb
mdbx version https://github.com/erthink/libmdbx/releases/tag/v0.11.2
test1 get Ok(Some(Bin([6])))
[6]
</code></pre></div><h4 id="\u03C0\u03B5\u03C1\u03B9\u03B3\u03C1\u03B1\u03C6\u03B7-\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C5" tabindex="-1"><a class="header-anchor" href="#\u03C0\u03B5\u03C1\u03B9\u03B3\u03C1\u03B1\u03C6\u03B7-\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C5" aria-hidden="true">#</a> \u03A0\u03B5\u03C1\u03B9\u03B3\u03C1\u03B1\u03C6\u03AE \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD</h4><h5 id="env-rw-\u03BF\u03C1\u03B9\u03C3\u03BC\u03BF\u03C2-\u03C4\u03B7\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" tabindex="-1"><a class="header-anchor" href="#env-rw-\u03BF\u03C1\u03B9\u03C3\u03BC\u03BF\u03C2-\u03C4\u03B7\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" aria-hidden="true">#</a> <code>env_rw!</code> \u039F\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</h5><p>\u039F \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03BE\u03B5\u03BA\u03B9\u03BD\u03AC \u03BC\u03B5 \u03BC\u03B9\u03B1 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE env_rw, \u03B7 \u03BF\u03C0\u03BF\u03AF\u03B1 \u03AD\u03C7\u03B5\u03B9 4 \u03C0\u03B1\u03C1\u03B1\u03BC\u03AD\u03C4\u03C1\u03BF\u03C5\u03C2.</p>`,7),fs=n("li",null,[n("p",null,"\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C4\u03B7\u03C2 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03C1\u03B9\u03B2\u03AC\u03BB\u03BB\u03BF\u03BD\u03C4\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD")],-1),_s=s("\u0395\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 \u03AD\u03BD\u03B1 \u03B1\u03BD\u03C4\u03B9\u03BA\u03B5\u03AF\u03BC\u03B5\u03BD\u03BF, "),gs={href:"https://docs.rs/mdbx/latest/src/mdbx/env.rs.html#27-35",target:"_blank",rel:"noopener noreferrer"},hs=s("mdbx:: env:: Config"),ws=s("."),xs=c(`<p>\u03A7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BC\u03B5 \u03C4\u03B7\u03BD \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B7 \u03B4\u03B9\u03B1\u03BC\u03CC\u03C1\u03C6\u03C9\u03C3\u03B7, \u03BA\u03B1\u03B8\u03CE\u03C2 \u03C4\u03BF <code>Env</code> \u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF <code>From&lt;Into&lt;PathBuf&gt;&gt;</code>, \u03BF\u03C0\u03CC\u03C4\u03B5 \u03B1\u03C1\u03BA\u03B5\u03AF \u03B7 \u03B4\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03AE \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD <code>into()</code>, \u03BA\u03B1\u03B9 \u03B7 \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B7 \u03B4\u03B9\u03B1\u03BC\u03CC\u03C1\u03C6\u03C9\u03C3\u03B7 \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2.</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
<span class="token constant">MDBX</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
r<span class="token punctuation">,</span>
w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
<span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
<span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
<span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span>
    <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
    mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
<span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
  test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

<span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
  path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
  mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
  flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
  sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
  <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
    <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
    sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
    sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
    max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
    flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
      <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),vs=n("code",null,"max_db",-1),qs=s(" \u0391\u03C5\u03C4\u03AE \u03B7 \u03C1\u03CD\u03B8\u03BC\u03B9\u03C3\u03B7 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03BC\u03B7\u03B4\u03B5\u03BD\u03B9\u03C3\u03C4\u03B5\u03AF \u03BA\u03AC\u03B8\u03B5 \u03C6\u03BF\u03C1\u03AC "),Ds={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},Es=s("\u03C0\u03BF\u03C5"),Bs=s(" \u03B1\u03BD\u03BF\u03AF\u03B3\u03B5\u03B9 \u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03B1\u03BB\u03BB\u03AC \u03B7 \u03C5\u03C0\u03B5\u03C1\u03B2\u03BF\u03BB\u03B9\u03BA\u03AE \u03C1\u03CD\u03B8\u03BC\u03B9\u03C3\u03B7 \u03B8\u03B1 \u03B5\u03C0\u03B7\u03C1\u03B5\u03AC\u03C3\u03B5\u03B9 \u03C4\u03B7\u03BD \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7, \u03B1\u03C0\u03BB\u03AC \u03C1\u03C5\u03B8\u03BC\u03AF\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03CC\u03C0\u03C9\u03C2 \u03B1\u03C0\u03B1\u03B9\u03C4\u03B5\u03AF\u03C4\u03B1\u03B9."),Ts=s("\u0391\u03BD\u03B1\u03C4\u03C1\u03AD\u03BE\u03C4\u03B5 "),Ms={href:"https://erthink.github.io/libmdbx/group__c__opening.html#ga9138119a904355d245777c4119534061",target:"_blank",rel:"noopener noreferrer"},Ns=s("\u03C3\u03C4\u03B7\u03BD \u03C4\u03B5\u03BA\u03BC\u03B7\u03C1\u03AF\u03C9\u03C3\u03B7 \u03C4\u03B7\u03C2 libmdbx"),Ss=s(" \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03C3\u03B7\u03BC\u03B1\u03C3\u03AF\u03B1 \u03C4\u03C9\u03BD \u03AC\u03BB\u03BB\u03C9\u03BD \u03C0\u03B1\u03C1\u03B1\u03BC\u03AD\u03C4\u03C1\u03C9\u03BD."),Xs=c('<ol start="3"><li><p>\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C4\u03B7\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE\u03C2 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03B7 \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 <code>r</code></p></li><li><p>\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C4\u03B7\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE\u03C2 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03B7 \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 <code>w</code></p></li></ol><p>\u039F\u03B9 \u03C0\u03B1\u03C1\u03AC\u03BC\u03B5\u03C4\u03C1\u03BF\u03B9 3 \u03BA\u03B1\u03B9 4 \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03C0\u03B1\u03C1\u03B1\u03BB\u03B5\u03B9\u03C6\u03B8\u03BF\u03CD\u03BD \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03BF\u03CD\u03BD \u03BF\u03B9 \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B5\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2.</p><h5 id="\u03BC\u03B1\u03BA\u03C1\u03BF\u03C3\u03BA\u03BF\u03C0\u03B9\u03BA\u03B7-\u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03C3\u03B7" tabindex="-1"><a class="header-anchor" href="#\u03BC\u03B1\u03BA\u03C1\u03BF\u03C3\u03BA\u03BF\u03C0\u03B9\u03BA\u03B7-\u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03C3\u03B7" aria-hidden="true">#</a> \u039C\u03B1\u03BA\u03C1\u03BF\u03C3\u03BA\u03BF\u03C0\u03B9\u03BA\u03AE \u03B5\u03C0\u03AD\u03BA\u03C4\u03B1\u03C3\u03B7</h5><p>\u0391\u03BD \u03B8\u03AD\u03BB\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03C4\u03B9 \u03BA\u03AC\u03BD\u03B5\u03B9 \u03B7 \u03BC\u03B1\u03B3\u03B9\u03BA\u03AE \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03B7 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE <code>cargo expand --example 01</code> \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03B7\u03BD \u03B5\u03C0\u03B5\u03BA\u03C4\u03B5\u03AF\u03BD\u03B5\u03C4\u03B5, \u03B7 \u03BF\u03C0\u03BF\u03AF\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03C0\u03C1\u03CE\u03C4\u03B1 \u03BD\u03B1 \u03B5\u03B3\u03BA\u03B1\u03C4\u03B1\u03C3\u03C4\u03B1\u03B8\u03B5\u03AF. <code>cargo install cargo-expand</code></p><p>\u0388\u03BD\u03B1 \u03C3\u03C4\u03B9\u03B3\u03BC\u03B9\u03CC\u03C4\u03C5\u03C0\u03BF \u03BF\u03B8\u03CC\u03BD\u03B7\u03C2 \u03C4\u03BF\u03C5 \u03B5\u03BA\u03C4\u03B5\u03C4\u03B1\u03BC\u03AD\u03BD\u03BF\u03C5 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03C0\u03B1\u03C1\u03BF\u03C5\u03C3\u03B9\u03AC\u03B6\u03B5\u03C4\u03B1\u03B9 \u03C0\u03B1\u03C1\u03B1\u03BA\u03AC\u03C4\u03C9.</p><p><img src="//irmw.gumlet.io/PDzEtT.png" alt="PDzEtT"></p><h5 id="anyhow-\u03BA\u03B1\u03B9-lazy-static" tabindex="-1"><a class="header-anchor" href="#anyhow-\u03BA\u03B1\u03B9-lazy-static" aria-hidden="true">#</a> anyhow \u03BA\u03B1\u03B9 lazy_static</h5><p>\u0391\u03C0\u03CC \u03C4\u03BF \u03B5\u03BA\u03C4\u03B5\u03C4\u03B1\u03BC\u03AD\u03BD\u03BF \u03C3\u03C4\u03B9\u03B3\u03BC\u03B9\u03CC\u03C4\u03C5\u03C0\u03BF \u03BF\u03B8\u03CC\u03BD\u03B7\u03C2, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03CC\u03C4\u03B9 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BD\u03C4\u03B1\u03B9 \u03BF\u03B9 \u03B4\u03B9\u03B5\u03C5\u03B8\u03CD\u03BD\u03C3\u03B5\u03B9\u03C2 <code>lazy_static</code> \u03BA\u03B1\u03B9 <code>anyhow</code>.</p>',8),Rs={href:"https://rustmagazine.github.io/rust_magazine_2021/chapter_2/rust_error_handle.html#thiserror--anyhow",target:"_blank",rel:"noopener noreferrer"},Os=s("anyhow"),Cs=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B7 \u03B2\u03B9\u03B2\u03BB\u03B9\u03BF\u03B8\u03AE\u03BA\u03B7 \u03C7\u03B5\u03B9\u03C1\u03B9\u03C3\u03BC\u03BF\u03CD \u03C3\u03C6\u03B1\u03BB\u03BC\u03AC\u03C4\u03C9\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD rust."),Vs=s("\u0397 "),Us={href:"https://juejin.cn/post/7007336922817232927",target:"_blank",rel:"noopener noreferrer"},Is=s("lazy_static"),As=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03C3\u03C4\u03B1\u03C4\u03B9\u03BA\u03AE \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE \u03BC\u03B5 \u03BA\u03B1\u03B8\u03C5\u03C3\u03C4\u03B5\u03C1\u03B7\u03BC\u03AD\u03BD\u03B7 \u03B1\u03C1\u03C7\u03B9\u03BA\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 "),Ls={href:"https://juejin.cn/post/7007336922817232927",target:"_blank",rel:"noopener noreferrer"},Ps=s("."),Fs=n("p",null,"\u0391\u03C5\u03C4\u03AD\u03C2 \u03BF\u03B9 \u03B4\u03CD\u03BF \u03B2\u03B9\u03B2\u03BB\u03B9\u03BF\u03B8\u03AE\u03BA\u03B5\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BA\u03BF\u03B9\u03BD\u03AD\u03C2 \u03BA\u03B1\u03B9 \u03B4\u03B5\u03BD \u03B8\u03B1 \u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03B8\u03CE \u03C3\u03B5 \u03B1\u03C5\u03C4\u03AD\u03C2.",-1),zs=n("h5",{id:"\u03B7-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B7-mdbx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03B7-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B7-mdbx","aria-hidden":"true"},"#"),s(" \u0397 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE mdbx!")],-1),$s={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html",target:"_blank",rel:"noopener noreferrer"},Ys=n("code",null,"mdbx!",-1),js=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 "),Gs={href:"https://mp.weixin.qq.com/s/YT_HNFDCQ_IyocvBkRNJnA",target:"_blank",rel:"noopener noreferrer"},Hs=s("\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1\u03C2"),Ws=s("."),Ks=c(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0397 \u03C0\u03C1\u03CE\u03C4\u03B7 \u03B3\u03C1\u03B1\u03BC\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C4\u03B7\u03C2 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03C1\u03B9\u03B2\u03AC\u03BB\u03BB\u03BF\u03BD\u03C4\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</p><p>\u0397 \u03B4\u03B5\u03CD\u03C4\u03B5\u03C1\u03B7 \u03B3\u03C1\u03B1\u03BC\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</p><p>\u039C\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03C5\u03BD \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03BC\u03AF\u03B1 \u03B3\u03C1\u03B1\u03BC\u03BC\u03AE \u03B3\u03B9\u03B1 \u03BA\u03AC\u03B8\u03B5</p><h5 id="\u03BD\u03B7\u03BC\u03B1\u03C4\u03B1-\u03BA\u03B1\u03B9-\u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03B5\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03BD\u03B7\u03BC\u03B1\u03C4\u03B1-\u03BA\u03B1\u03B9-\u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03B5\u03C2" aria-hidden="true">#</a> \u039D\u03AE\u03BC\u03B1\u03C4\u03B1 \u03BA\u03B1\u03B9 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2</h5><p>\u039F \u03C0\u03B1\u03C1\u03B1\u03C0\u03AC\u03BD\u03C9 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03B5\u03C0\u03B9\u03B4\u03B5\u03B9\u03BA\u03BD\u03CD\u03B5\u03B9 \u03C4\u03B7\u03BD \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03BC\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AC \u03BD\u03AE\u03BC\u03B1\u03C4\u03B1.</p><p>\u0395\u03AF\u03BD\u03B1\u03B9 \u03C3\u03B7\u03BC\u03B1\u03BD\u03C4\u03B9\u03BA\u03CC \u03BD\u03B1 \u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03B8\u03B5\u03AF \u03CC\u03C4\u03B9 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 <strong>\u03BC\u03CC\u03BD\u03BF \u03BC\u03AF\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03C3\u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03BD\u03AE\u03BC\u03B1 \u03B1\u03BD\u03AC \u03C0\u03AC\u03C3\u03B1 \u03C3\u03C4\u03B9\u03B3\u03BC\u03AE, \u03B5\u03AC\u03BD \u03AD\u03BD\u03B1 \u03BD\u03AE\u03BC\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AD\u03C2 \u03B1\u03BD\u03BF\u03B9\u03C7\u03C4\u03AD\u03C2, \u03C4\u03BF \u03C0\u03C1\u03CC\u03B3\u03C1\u03B1\u03BC\u03BC\u03B1 \u03B8\u03B1 \u03BA\u03B1\u03C4\u03B1\u03C1\u03C1\u03B5\u03CD\u03C3\u03B5\u03B9</strong>.</p><p>\u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2.</p><h5 id="\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B7-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" tabindex="-1"><a class="header-anchor" href="#\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B7-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" aria-hidden="true">#</a> \u0391\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03CE\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</h5><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,10),Js=n("code",null,"set",-1),Qs=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE, "),Zs=n("code",null,"get",-1),na=s(" \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7, \u03BA\u03B1\u03B9 \u03BA\u03AC\u03B8\u03B5 \u03B1\u03BD\u03C4\u03B9\u03BA\u03B5\u03AF\u03BC\u03B5\u03BD\u03BF \u03C0\u03BF\u03C5 \u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF "),sa={href:"https://doc.rust-lang.org/std/convert/trait.AsRef.html",target:"_blank",rel:"noopener noreferrer"},aa=n("code",null,"AsRef<[u8]>",-1),pa=s(" \u03B1\u03BD\u03C4\u03B9\u03BA\u03B5\u03AF\u03BC\u03B5\u03BD\u03BF \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03C3\u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD."),ta=n("p",null,[n("code",null,"get"),s(" \u0391\u03C5\u03C4\u03CC \u03C0\u03BF\u03C5 \u03B2\u03B3\u03B1\u03AF\u03BD\u03B5\u03B9 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03BF "),n("code",null,"Ok(Some(Bin([6])))"),s("\u03C4\u03BF \u03BF\u03C0\u03BF\u03AF\u03BF \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03BC\u03B5\u03C4\u03B1\u03C4\u03C1\u03B1\u03C0\u03B5\u03AF \u03C3\u03B5 "),n("code",null,"&[u8]"),s(".")],-1),oa=n("h3",{id:"\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-2-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-2-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7","aria-hidden":"true"},"#"),s(" \u03A0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 2: \u03A4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE, \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7")],-1),ca=s("\u0391\u03C2 \u03B4\u03BF\u03CD\u03BC\u03B5 \u03C4\u03BF \u03B4\u03B5\u03CD\u03C4\u03B5\u03C1\u03BF \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 "),ea={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},ua=s("examples/02.rs"),la=s(":"),ka=c(`<p>\u03A3\u03B5 \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1, \u03C4\u03BF <code>env_rw!</code> \u03C0\u03B1\u03C1\u03B1\u03BB\u03B5\u03AF\u03C0\u03B5\u03C4\u03B1\u03B9 \u03BA\u03B1\u03B9 \u03C4\u03BF \u03C4\u03C1\u03AF\u03C4\u03BF \u03BA\u03B1\u03B9 \u03C4\u03BF \u03C4\u03AD\u03C4\u03B1\u03C1\u03C4\u03BF \u03CC\u03C1\u03B9\u03C3\u03BC\u03B1 ( <code>r</code>, <code>w</code>) \u03C0\u03B1\u03C1\u03B1\u03BB\u03B5\u03AF\u03C0\u03BF\u03BD\u03C4\u03B1\u03B9.</p><h4 id="\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2-1" tabindex="-1"><a class="header-anchor" href="#\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2-1" aria-hidden="true">#</a> \u039A\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2</h4><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-1" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-1" aria-hidden="true">#</a> \u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/02.mdb

u16::from_le_bytes(Bin([4, 5])) = 1284

-- loop test1
[2] = [3]
[2, 3] = [4, 5]
[8, 1] = [9]
[9] = [10, 12]
[97, 98, 99] = [48, 49, 50]
[114, 109, 119, 46, 108, 105, 110, 107] = [68, 111, 119, 110, 32, 119, 105, 116, 104, 32, 68, 97, 116, 97, 32, 72, 101, 103, 101, 109, 111, 110, 121]
[examples/02.rs:57] test1.del_val([8, 1], [3])? = false
[examples/02.rs:58] test1.get([8, 1])?.unwrap() = Bin(
    [
        9,
    ],
)
[examples/02.rs:59] test1.del_val([8, 1], [9])? = true
[examples/02.rs:60] test1.get([8, 1])? = None
[examples/02.rs:62] test1.del([9])? = true
[examples/02.rs:63] test1.get([9])? = None
[examples/02.rs:64] test1.del([9])? = false

-- loop test2
abc = 012
rmw.link = Down with Data Hegemony

-- loop test3
0 = 6
10 = 5
13 = 32
16 = 32
-15 = 6
-12 = 6
-10 = 6
[examples/02.rs:100] test4.del_val(0, 2)? = true
[examples/02.rs:101] test4.del_val(0, 2)? = false

-- loop test4 rev
16 = 3
16 = 2
16 = 1
13 = 32
10 = 5
10 = 0
0 = 6
dup(16) 1
dup(16) 2
dup(16) 3
</code></pre></div><h4 id="\u03B3\u03C1\u03B7\u03B3\u03BF\u03C1\u03B5\u03C2-\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B5\u03B9\u03C2-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B5\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03B3\u03C1\u03B7\u03B3\u03BF\u03C1\u03B5\u03C2-\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B5\u03B9\u03C2-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B5\u03C2" aria-hidden="true">#</a> \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B5\u03C2 \u03B1\u03BD\u03B1\u03B3\u03BD\u03CE\u03C3\u03B5\u03B9\u03C2 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AD\u03C2</h4><p>\u0391\u03BD \u03B8\u03AD\u03BB\u03BF\u03C5\u03BC\u03B5 \u03B1\u03C0\u03BB\u03CE\u03C2 \u03BD\u03B1 \u03B4\u03B9\u03B1\u03B2\u03AC\u03C3\u03BF\u03C5\u03BC\u03B5 \u03AE \u03BD\u03B1 \u03B3\u03C1\u03AC\u03C8\u03BF\u03C5\u03BC\u03B5 \u03BC\u03B9\u03B1 \u03BC\u03CC\u03BD\u03BF \u03B3\u03C1\u03B1\u03BC\u03BC\u03AE \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD, \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BC\u03B5 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03BF\u03C5\u03BC\u03B5 \u03C4\u03B7 \u03C3\u03C5\u03BD\u03C4\u03B1\u03BA\u03C4\u03B9\u03BA\u03AE \u03B6\u03AC\u03C7\u03B1\u03C1\u03B7 \u03BC\u03B9\u03B1\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2.</p><p>\u0394\u03B9\u03B1\u03B2\u03AC\u03C3\u03C4\u03B5 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1</p><div class="language-text ext-text"><pre class="language-text"><code>r!(Test1.get [2, 3])
</code></pre></div><p>\u0393\u03C1\u03AC\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div>`,11),ia=s("\u038C\u03BB\u03B1 \u03C3\u03B5 \u03BC\u03AF\u03B1 \u03B3\u03C1\u03B1\u03BC\u03BC\u03AE, \u03CC\u03C0\u03C9\u03C2 \u03B3\u03C1\u03AC\u03C6\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF "),ra={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},ma=s("examples/02.rs"),da=s("."),ba=n("h4",{id:"\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD","aria-hidden":"true"},"#"),s(" \u03A4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD")],-1),ya=s("\u03A3\u03C4\u03BF examples/02 "),fa={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},_a=s("."),ga=s(" rs, \u03BF \u03BF\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03AD\u03C7\u03B5\u03B9 \u03C4\u03B7\u03BD \u03B5\u03BE\u03AE\u03C2 \u03BC\u03BF\u03C1\u03C6\u03AE :"),ha=c(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
</code></pre></div><p>\u03CC\u03C0\u03BF\u03C5 <code>key</code> \u03BA\u03B1\u03B9 <code>val</code> \u03BF\u03C1\u03AF\u03B6\u03BF\u03C5\u03BD \u03C4\u03BF\u03C5\u03C2 \u03C4\u03CD\u03C0\u03BF\u03C5\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03AC \u03BA\u03B1\u03B9 \u03C4\u03B9\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B1\u03BD\u03C4\u03AF\u03C3\u03C4\u03BF\u03B9\u03C7\u03B1.</p><p>\u0391\u03BD \u03C0\u03C1\u03BF\u03C3\u03C0\u03B1\u03B8\u03AE\u03C3\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03B3\u03C1\u03AC\u03C8\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03C4\u03CD\u03C0\u03BF \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03B4\u03B5\u03BD \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03B5\u03B9 \u03BC\u03B5 \u03C4\u03BF\u03BD \u03C4\u03CD\u03C0\u03BF \u03C0\u03BF\u03C5 \u03AD\u03C7\u03B5\u03B9 \u03BF\u03C1\u03B9\u03C3\u03C4\u03B5\u03AF, \u03B8\u03B1 \u03B1\u03BD\u03B1\u03C6\u03B5\u03C1\u03B8\u03B5\u03AF \u03AD\u03BD\u03B1 \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1, \u03CC\u03C0\u03C9\u03C2 \u03C6\u03B1\u03AF\u03BD\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF \u03C0\u03B1\u03C1\u03B1\u03BA\u03AC\u03C4\u03C9 \u03C3\u03C4\u03B9\u03B3\u03BC\u03B9\u03CC\u03C4\u03C5\u03C0\u03BF :</p><p><img src="//irmw.gumlet.io/4rFTC6.png" alt=""></p>`,4),wa=s("\u039F \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03BF\u03C2 \u03C4\u03CD\u03C0\u03BF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 "),xa={href:"https://docs.rs/mdbx/latest/mdbx/type/struct.Bin.html",target:"_blank",rel:"noopener noreferrer"},va=n("code",null,"Bin",-1),qa=s(" , \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03BF\u03CD\u03BD \u03BF\u03C0\u03BF\u03B9\u03B1\u03B4\u03AE\u03C0\u03BF\u03C4\u03B5 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03C0\u03BF\u03C5 \u03C5\u03BB\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BD \u03C4\u03BF "),Da=n("code",null,"AsRef<[u8]>",-1),Ea=s("."),Ba=s("\u0395\u03AC\u03BD \u03C4\u03BF \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C3\u03C5\u03BC\u03B2\u03BF\u03BB\u03BF\u03C3\u03B5\u03B9\u03C1\u03AC "),Ta=n("code",null,"utf8",-1),Ma=s(", \u03BF \u03C4\u03CD\u03C0\u03BF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03BF\u03C1\u03B9\u03C3\u03C4\u03B5\u03AF \u03C3\u03B5 "),Na={href:"https://docs.rs/mdbx/latest/mdbx/type/struct.Str.html",target:"_blank",rel:"noopener noreferrer"},Sa=n("code",null,"Str",-1),Xa=s(" ."),Ra=s("\u0397 "),Oa={href:"https://doc.rust-lang.org/std/ops/trait.Deref.html",target:"_blank",rel:"noopener noreferrer"},Ca=s("\u03B1\u03C0\u03BF\u03B4\u03AD\u03C3\u03BC\u03B5\u03C5\u03C3\u03B7 \u03C4\u03BF\u03C5"),Va=s(),Ua=n("code",null,"Str",-1),Ia=s(" \u03B8\u03B1 \u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C8\u03B5\u03B9 \u03AD\u03BD\u03B1 \u03B1\u03BB\u03C6\u03B1\u03C1\u03B9\u03B8\u03BC\u03B7\u03C4\u03B9\u03BA\u03CC, \u03C0\u03B1\u03C1\u03CC\u03BC\u03BF\u03B9\u03BF \u03BC\u03B5 \u03C4\u03BF "),Aa=n("code",null,"let k:&str = &k;",-1),La=s("."),Pa=s("\u0395\u03C0\u03B9\u03C0\u03BB\u03AD\u03BF\u03BD, \u03C4\u03BF "),Fa=n("code",null,"Str",-1),za=s(" \u03B5\u03C6\u03B1\u03C1\u03BC\u03CC\u03B6\u03B5\u03B9 \u03B5\u03C0\u03AF\u03C3\u03B7\u03C2 "),$a={href:"https://doc.rust-lang.org/std/fmt/trait.Display.html",target:"_blank",rel:"noopener noreferrer"},Ya=n("code",null,"std::fmt::Display",-1),ja=s(" , \u03C4\u03BF "),Ga=n("code",null,'println!("{}",k)',-1),Ha=s(" \u03B8\u03B1 \u03B5\u03BE\u03AC\u03B3\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03B1\u03BD\u03B1\u03B3\u03BD\u03CE\u03C3\u03B9\u03BC\u03B7 \u03C3\u03C5\u03BC\u03B2\u03BF\u03BB\u03BF\u03C3\u03B5\u03B9\u03C1\u03AC."),Wa=n("h5",{id:"\u03C0\u03C1\u03BF\u03BA\u03B1\u03B8\u03BF\u03C1\u03B9\u03C3\u03BC\u03B5\u03BD\u03BF\u03B9-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C0\u03C1\u03BF\u03BA\u03B1\u03B8\u03BF\u03C1\u03B9\u03C3\u03BC\u03B5\u03BD\u03BF\u03B9-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD","aria-hidden":"true"},"#"),s(" \u03A0\u03C1\u03BF\u03BA\u03B1\u03B8\u03BF\u03C1\u03B9\u03C3\u03BC\u03AD\u03BD\u03BF\u03B9 \u03C4\u03CD\u03C0\u03BF\u03B9 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD")],-1),Ka=s("\u0395\u03BA\u03C4\u03CC\u03C2 \u03B1\u03C0\u03CC \u03C4\u03B1 "),Ja=n("code",null,"Str",-1),Qa=s(" \u03BA\u03B1\u03B9 "),Za=n("code",null,"Bin",-1),np=s(", \u03C4\u03BF \u03C0\u03B5\u03C1\u03B9\u03C4\u03CD\u03BB\u03B9\u03B3\u03BC\u03B1 \u03B4\u03B9\u03B1\u03B8\u03AD\u03C4\u03B5\u03B9 \u03B5\u03C0\u03AF\u03C3\u03B7\u03C2 \u03C5\u03C0\u03BF\u03C3\u03C4\u03AE\u03C1\u03B9\u03BE\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B3\u03B9\u03B1 "),sp={href:"https://docs.rs/mdbx/latest/src/mdbx/type.rs.html#48",target:"_blank",rel:"noopener noreferrer"},ap=s("usize, u128, u64, u32, u16, u8, isize, i128, i64, i32, i16, i8, f32, f64"),pp=s("."),tp=n("h4",{id:"\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD","aria-hidden":"true"},"#"),s(" \u03A3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD")],-1),op=s("\u039C\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B5\u03AF\u03C4\u03B5 \u03C4\u03B9\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03B1 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03C3\u03C4\u03BF "),cp={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},ep=s("examples/02.rs"),up=s(" \u03C3\u03C4\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 "),lp=n("code",null,"Test4",-1),kp=s(". "),ip=n("code",null,"flag DUPSORT",-1),rp=s("\u0397 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD libmdbx \u03AD\u03C7\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03C3\u03B5\u03B9\u03C1\u03AC \u03B1\u03C0\u03CC \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 ( "),mp={href:"https://erthink.github.io/libmdbx/group__c__dbi.html#gafe3bddb297b3ab0d828a487c5726f76a",target:"_blank",rel:"noopener noreferrer"},dp=n("code",null,"MDBX_db_flags_t",-1),bp=s(" ) \u03C0\u03BF\u03C5 \u03BC\u03C0\u03BF\u03C1\u03BF\u03CD\u03BD \u03BD\u03B1 \u03BF\u03C1\u03B9\u03C3\u03C4\u03BF\u03CD\u03BD."),yp=c('<ul><li>\u03A4\u03BF REVERSEKEY \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03B1\u03BD\u03C4\u03AF\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7 \u03C3\u03CD\u03B3\u03BA\u03C1\u03B9\u03C3\u03B7 \u03C3\u03C5\u03BC\u03B2\u03BF\u03BB\u03BF\u03C3\u03B5\u03B9\u03C1\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03AC. (\u03C7\u03C1\u03AE\u03C3\u03B9\u03BC\u03BF \u03CC\u03C4\u03B1\u03BD \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BD\u03C4\u03B1\u03B9 \u03BC\u03B9\u03BA\u03C1\u03BF\u03AF \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C0\u03BF\u03B9\u03B7\u03BC\u03AD\u03BD\u03BF\u03B9 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03AF \u03C9\u03C2 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03AC)</li><li>\u03A4\u03BF DUPSORT \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03B7\u03BC\u03AD\u03BD\u03B1 \u03B1\u03BD\u03C4\u03AF\u03B3\u03C1\u03B1\u03C6\u03B1, \u03B4\u03B7\u03BB\u03B1\u03B4\u03AE \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03B9 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B3\u03B9\u03B1 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF.</li><li>INTEGERKEY \u039C\u03B7\u03C4\u03C1\u03B9\u03BA\u03CC \u03B1\u03C1\u03B9\u03B8\u03BC\u03B7\u03C4\u03B9\u03BA\u03CC \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03C3\u03B5 \u03B4\u03B9\u03AC\u03C4\u03B1\u03BE\u03B7 byte uint32_t \u03AE uint64_t. \u03A4\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03AC \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03AD\u03C7\u03BF\u03C5\u03BD \u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03BA\u03B1\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B5\u03C5\u03B8\u03C5\u03B3\u03C1\u03B1\u03BC\u03BC\u03B9\u03C3\u03BC\u03AD\u03BD\u03B1 \u03CC\u03C4\u03B1\u03BD \u03C0\u03B5\u03C1\u03BD\u03BF\u03CD\u03BD \u03C9\u03C2 \u03BF\u03C1\u03AF\u03C3\u03BC\u03B1\u03C4\u03B1.</li><li>DUPFIXED \u03A4\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C4\u03C9\u03BD \u03C4\u03B9\u03BC\u03CE\u03BD \u03C4\u03C9\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03B5\u03AC\u03BD \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF\u03C4\u03B1\u03B9 DUPSORT (\u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03B3\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03BA\u03B1\u03C4\u03B1\u03BC\u03AD\u03C4\u03C1\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03C4\u03C9\u03BD \u03C4\u03B9\u03BC\u03CE\u03BD).</li><li>\u039F\u03B9 DUPSORT \u03BA\u03B1\u03B9 DUPFIXED \u03B1\u03C0\u03B1\u03B9\u03C4\u03BF\u03CD\u03BD\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD INTEGERDUP- \u03BF\u03B9 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BA\u03AD\u03C1\u03B1\u03B9\u03BF\u03B9 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03AF (\u03C0\u03B1\u03C1\u03CC\u03BC\u03BF\u03B9\u03B5\u03C2 \u03BC\u03B5 \u03C4\u03B7\u03BD INTEGERKEY). \u039F\u03B9 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03AD\u03C7\u03BF\u03C5\u03BD \u03CC\u03BB\u03B5\u03C2 \u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03BA\u03B1\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B5\u03C5\u03B8\u03C5\u03B3\u03C1\u03B1\u03BC\u03BC\u03B9\u03C3\u03BC\u03AD\u03BD\u03B5\u03C2 \u03CC\u03C4\u03B1\u03BD \u03C0\u03B5\u03C1\u03BD\u03BF\u03CD\u03BD \u03C9\u03C2 \u03C0\u03B1\u03C1\u03AC\u03BC\u03B5\u03C4\u03C1\u03BF\u03B9.</li><li>\u03A4\u03BF REVERSEDUP \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF DUPSORT- \u03B7 \u03B1\u03BD\u03C4\u03AF\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7 \u03C3\u03CD\u03B3\u03BA\u03C1\u03B9\u03C3\u03B7 \u03C3\u03C5\u03BC\u03B2\u03BF\u03BB\u03BF\u03C3\u03B5\u03B9\u03C1\u03CE\u03BD \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03B9\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD.</li><li>\u0397 CREATE \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03B5\u03AF \u03C4\u03B7 \u0392\u0394 \u03B1\u03BD \u03B4\u03B5\u03BD \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 (\u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C0\u03CC \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE).</li><li>DB_ACCEDE \u0391\u03BD\u03BF\u03AF\u03B3\u03B5\u03B9 \u03BC\u03B9\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03C5\u03C3\u03B1 \u03C5\u03C0\u03BF-\u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03AE\u03B8\u03B7\u03BA\u03B5 \u03BC\u03B5 \u03C4\u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03B7\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B1\u03C2 unknown.<br> \u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B1 DB_ACCEDE \u03C0\u03C1\u03BF\u03BF\u03C1\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03C4\u03BF \u03AC\u03BD\u03BF\u03B9\u03B3\u03BC\u03B1 \u03C5\u03C6\u03B9\u03C3\u03C4\u03AC\u03BC\u03B5\u03BD\u03C9\u03BD \u03C5\u03C0\u03BF-\u03B2\u03AC\u03C3\u03B5\u03C9\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03AD\u03C7\u03BF\u03C5\u03BD \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03B7\u03B8\u03B5\u03AF \u03BC\u03B5 \u03AC\u03B3\u03BD\u03C9\u03C3\u03C4\u03B5\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 (REVERSEKEY, DUPSORT, INTEGERKEY, DUPFIXED, INTEGERDUP \u03BA\u03B1\u03B9 REVERSEDUP).<br> \u03A3\u03B5 \u03B1\u03C5\u03C4\u03AE \u03C4\u03B7\u03BD \u03C0\u03B5\u03C1\u03AF\u03C0\u03C4\u03C9\u03C3\u03B7, \u03B7 \u03C5\u03C0\u03BF\u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B4\u03B5\u03BD \u03B8\u03B1 \u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C8\u03B5\u03B9 \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1 INCOMPATIBLE, \u03B1\u03BB\u03BB\u03AC \u03B8\u03B1 \u03B1\u03BD\u03BF\u03AF\u03BE\u03B5\u03B9 \u03BC\u03B5 \u03C4\u03B9\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03C0\u03BF\u03C5 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03B8\u03B7\u03BA\u03B1\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03AF\u03B1 \u03C4\u03B7\u03C2 \u03BA\u03B1\u03B9 \u03B7 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 \u03BD\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B4\u03B9\u03BF\u03C1\u03AF\u03C3\u03B5\u03B9 \u03C4\u03B9\u03C2 \u03C0\u03C1\u03B1\u03B3\u03BC\u03B1\u03C4\u03B9\u03BA\u03AD\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03BC\u03B5 \u03C4\u03B7\u03BD mdbx_dbi_flags().</li></ul><h5 id="dupsort-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03B9-\u03C3\u03B5-\u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03BF\u03C4\u03B5\u03C1\u03B5\u03C2-\u03B1\u03C0\u03BF-\u03BC\u03B9\u03B1-\u03C4\u03B9\u03BC\u03B5\u03C2" tabindex="-1"><a class="header-anchor" href="#dupsort-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03B9-\u03C3\u03B5-\u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03BF\u03C4\u03B5\u03C1\u03B5\u03C2-\u03B1\u03C0\u03BF-\u03BC\u03B9\u03B1-\u03C4\u03B9\u03BC\u03B5\u03C2" aria-hidden="true">#</a> DUPSORT : \u0388\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03C4\u03B9\u03BC\u03AD\u03C2</h5><p><code>DUPSORT</code>\u03C3\u03B7\u03BC\u03B1\u03AF\u03BD\u03B5\u03B9 \u03CC\u03C4\u03B9 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03C4\u03B9\u03BC\u03AD\u03C2.</p><p>\u0391\u03BD \u03B8\u03AD\u03BB\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03BF\u03C1\u03AF\u03C3\u03B5\u03C4\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2, \u03B3\u03C1\u03AC\u03C8\u03C4\u03B5 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 <code>flag DUPSORT | DUPFIXED</code></p><h5 id="dup-key-iterator-\u03C0\u03BF\u03C5-\u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03B5\u03C6\u03B5\u03B9-\u03BF\u03BB\u03B5\u03C2-\u03C4\u03B9\u03C2-\u03C4\u03B9\u03BC\u03B5\u03C2-\u03C0\u03BF\u03C5-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03BF\u03C5\u03BD-\u03C3\u03B5-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9" tabindex="-1"><a class="header-anchor" href="#dup-key-iterator-\u03C0\u03BF\u03C5-\u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03B5\u03C6\u03B5\u03B9-\u03BF\u03BB\u03B5\u03C2-\u03C4\u03B9\u03C2-\u03C4\u03B9\u03BC\u03B5\u03C2-\u03C0\u03BF\u03C5-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03BF\u03C5\u03BD-\u03C3\u03B5-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9" aria-hidden="true">#</a> <code>.dup(key)</code> iterator \u03C0\u03BF\u03C5 \u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 \u03CC\u03BB\u03B5\u03C2 \u03C4\u03B9\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03C0\u03BF\u03C5 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03BF\u03CD\u03BD \u03C3\u03B5 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF</h5><p>\u0397 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B1 \u03B1\u03C5\u03C4\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B9\u03B1\u03B8\u03AD\u03C3\u03B9\u03BC\u03B7 \u03BC\u03CC\u03BD\u03BF \u03B3\u03B9\u03B1 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BC\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BD\u03B4\u03B5\u03B9\u03BE\u03B7 <code>DUPSORT</code>, \u03CC\u03C0\u03BF\u03C5 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03CC \u03BC\u03AF\u03B1 \u03C4\u03B9\u03BC\u03AD\u03C2.</p><p>\u0393\u03B9\u03B1 \u03C4\u03B9\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD <code>DUPSORT</code>, \u03C4\u03BF <code>get</code> \u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 \u03BC\u03CC\u03BD\u03BF \u03C4\u03B7\u03BD \u03C0\u03C1\u03CE\u03C4\u03B7 \u03C4\u03B9\u03BC\u03AE \u03B3\u03B9\u03B1 \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF. \u0393\u03B9\u03B1 \u03BD\u03B1 \u03BB\u03AC\u03B2\u03B5\u03C4\u03B5 \u03CC\u03BB\u03B5\u03C2 \u03C4\u03B9\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2, \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03C4\u03B5 \u03C4\u03BF <code>dup</code>.</p><h5 id="\u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03B5\u03BD\u03B5\u03C2-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C0\u03BF\u03C5-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03C4\u03C9\u03BD\u03C4\u03B1\u03B9-\u03B1\u03C5\u03C4\u03BF\u03BC\u03B1\u03C4\u03B1" tabindex="-1"><a class="header-anchor" href="#\u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03B5\u03BD\u03B5\u03C2-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C0\u03BF\u03C5-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03C4\u03C9\u03BD\u03C4\u03B1\u03B9-\u03B1\u03C5\u03C4\u03BF\u03BC\u03B1\u03C4\u03B1" aria-hidden="true">#</a> \u03A0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B5\u03C2 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03C4\u03CE\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1</h5>',8),fp=s("\u038C\u03C4\u03B1\u03BD \u03BF \u03C4\u03CD\u03C0\u03BF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 "),_p=n("code",null,"u32",-1),gp=s(" / "),hp=n("code",null,"u64",-1),wp=s(" / "),xp=n("code",null,"usize",-1),vp=s(", \u03B7 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B1 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1. "),qp={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html#105",target:"_blank",rel:"noopener noreferrer"},Dp=n("code",null,"INTEGERKEY",-1),Ep=s(" ."),Bp=s("\u03A3\u03B5 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03BC\u03B9\u03BA\u03C1\u03BF\u03CD \u03AC\u03BA\u03C1\u03BF\u03C5, \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1 \u03AC\u03BB\u03BB\u03BF\u03B9 \u03B1\u03C1\u03B9\u03B8\u03BC\u03B7\u03C4\u03B9\u03BA\u03BF\u03AF \u03C4\u03CD\u03C0\u03BF\u03B9 "),Tp={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html#108",target:"_blank",rel:"noopener noreferrer"},Mp=n("code",null,"REVERSEKEY",-1),Np=s(" \u0397 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B1 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1 \u03CC\u03C4\u03B1\u03BD \u03BF \u03C4\u03CD\u03C0\u03BF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 / / ."),Sp=c('<h4 id="\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" tabindex="-1"><a class="header-anchor" href="#\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" aria-hidden="true">#</a> \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</h4><h5 id="del-key-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B5\u03BD\u03BF\u03C2-\u03C0\u03BB\u03B7\u03BA\u03C4\u03C1\u03BF\u03C5" tabindex="-1"><a class="header-anchor" href="#del-key-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B5\u03BD\u03BF\u03C2-\u03C0\u03BB\u03B7\u03BA\u03C4\u03C1\u03BF\u03C5" aria-hidden="true">#</a> <code>.del(key)</code> \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B5\u03BD\u03CC\u03C2 \u03C0\u03BB\u03AE\u03BA\u03C4\u03C1\u03BF\u03C5</h5><p><code>.del(val)</code> \u0394\u03B9\u03B1\u03B3\u03C1\u03AC\u03C6\u03B5\u03B9 \u03C4\u03B7\u03BD \u03C4\u03B9\u03BC\u03AE \u03C0\u03BF\u03C5 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03BD\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF.</p><p>\u0395\u03AC\u03BD \u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03AD\u03C7\u03B5\u03B9 \u03C4\u03B7 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B1 <code>DUPSORT</code>, \u03CC\u03BB\u03B5\u03C2 \u03BF\u03B9 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03BA\u03AC\u03C4\u03C9 \u03B1\u03C0\u03CC \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF \u03BA\u03BB\u03B5\u03B9\u03B4\u03AF \u03B8\u03B1 \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03BF\u03CD\u03BD.</p><p>\u0395\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 <code>true</code>\u03B5\u03AC\u03BD \u03AD\u03C7\u03BF\u03C5\u03BD \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03BA\u03B1\u03B9 <code>false</code>\u03B5\u03AC\u03BD \u03CC\u03C7\u03B9.</p><h5 id="del-val-key-val-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B1\u03BA\u03C1\u03B9\u03B2\u03BF\u03C5\u03C2-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B9\u03B1\u03C2" tabindex="-1"><a class="header-anchor" href="#del-val-key-val-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B1\u03BA\u03C1\u03B9\u03B2\u03BF\u03C5\u03C2-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B9\u03B1\u03C2" aria-hidden="true">#</a> <code>.del_val(key,val)</code> \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B1\u03BA\u03C1\u03B9\u03B2\u03BF\u03CD\u03C2 \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03AF\u03B1\u03C2</h5><p><code>.del_val(key,val)</code> \u0394\u03B9\u03B1\u03B3\u03C1\u03AC\u03C6\u03B5\u03B9 \u03B6\u03B5\u03CD\u03B3\u03B7 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03CE\u03BD-\u03C4\u03B9\u03BC\u03CE\u03BD \u03C0\u03BF\u03C5 \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03BF\u03C5\u03BD \u03B1\u03BA\u03C1\u03B9\u03B2\u03CE\u03C2 \u03BC\u03B5 \u03C4\u03B9\u03C2 \u03C0\u03B1\u03C1\u03B1\u03BC\u03AD\u03C4\u03C1\u03BF\u03C5\u03C2 \u03B5\u03B9\u03C3\u03CC\u03B4\u03BF\u03C5.</p><p>\u0395\u03C0\u03B9\u03C3\u03C4\u03C1\u03AD\u03C6\u03B5\u03B9 <code>true</code>\u03B5\u03AC\u03BD \u03AD\u03C7\u03BF\u03C5\u03BD \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03BA\u03B1\u03B9 <code>false</code>\u03B5\u03AC\u03BD \u03CC\u03C7\u03B9.</p><h4 id="\u03B4\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03B7" tabindex="-1"><a class="header-anchor" href="#\u03B4\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03B7" aria-hidden="true">#</a> \u0394\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03AE</h4><h5 id="\u03B4\u03B9\u03B1\u03B4\u03BF\u03C7\u03B9\u03BA\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7" tabindex="-1"><a class="header-anchor" href="#\u03B4\u03B9\u03B1\u03B4\u03BF\u03C7\u03B9\u03BA\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7" aria-hidden="true">#</a> \u03B4\u03B9\u03B1\u03B4\u03BF\u03C7\u03B9\u03BA\u03AE \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7</h5>',10),Xp=s("\u039B\u03CC\u03B3\u03C9 \u03C4\u03B7\u03C2 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2 \u03C4\u03BF\u03C5 "),Rp={href:"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html",target:"_blank",rel:"noopener noreferrer"},Op=n("code",null,"std::iter::IntoIterator",-1),Cp=s(" . \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03B4\u03B9\u03B1\u03C3\u03C7\u03AF\u03C3\u03B5\u03C4\u03B5 \u03B1\u03C0\u03B5\u03C5\u03B8\u03B5\u03AF\u03B1\u03C2 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 :"),Vp=n("p",null,[n("code",null,"for (k, v) in test1")],-1),Up=n("h5",{id:"rev-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7-\u03C3\u03B5\u03B9\u03C1\u03B1\u03C2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rev-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7-\u03C3\u03B5\u03B9\u03C1\u03B1\u03C2","aria-hidden":"true"},"#"),s(),n("code",null,".rev()"),s(" \u0391\u03BD\u03C4\u03AF\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7 \u03B4\u03B9\u03AC\u03C3\u03C7\u03B9\u03C3\u03B7 \u03C3\u03B5\u03B9\u03C1\u03AC\u03C2")],-1),Ip=n("p",null,[n("code",null,"for (k, v) in test4.rev()")],-1),Ap=n("h5",{id:"\u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03B7\u03C3\u03B7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03B7\u03C3\u03B7","aria-hidden":"true"},"#"),s(" \u03A4\u03B1\u03BE\u03B9\u03BD\u03CC\u03BC\u03B7\u03C3\u03B7")],-1),Lp=s("\u03A4\u03B1 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03AC \u03C4\u03B7\u03C2 libmdbx \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03B7\u03BC\u03AD\u03BD\u03B1 "),Pp={href:"https://zh.wikipedia.org/wiki/%E5%AD%97%E5%85%B8%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"},Fp=s("\u03BA\u03B1\u03C4\u03AC \u03C3\u03B5\u03B9\u03C1\u03AC \u03BB\u03B5\u03BE\u03B9\u03BA\u03BF\u03CD"),zp=s("."),$p=c(`<ul><li><p>\u0393\u03B9\u03B1 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD\u03C2 \u03C7\u03C9\u03C1\u03AF\u03C2 \u03C0\u03C1\u03CC\u03C3\u03B7\u03BC\u03BF</p><p>\u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03BF\u03CD\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C0\u03CC \u03C4\u03BF \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03C0\u03C1\u03BF\u03C2 \u03C4\u03BF \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF, \u03B5\u03C0\u03B5\u03B9\u03B4\u03AE \u03BF\u03B9 \u03C3\u03B7\u03BC\u03B1\u03AF\u03B5\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C5\u03C4\u03CC\u03BC\u03B1\u03C4\u03B1 ( <code>u32</code>/ <code>u64</code>/ <code>usize</code> \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF <code>INTEGERKEY</code>, \u03B5\u03BD\u03CE \u03AC\u03BB\u03BB\u03B5\u03C2 \u03C0\u03C1\u03BF\u03C3\u03C4\u03AF\u03B8\u03B5\u03BD\u03C4\u03B1\u03B9 \u03C3\u03C4\u03BF <code>REVERSEKEY</code> \u03B1\u03BD\u03AC\u03BB\u03BF\u03B3\u03B1 \u03BC\u03B5 \u03C4\u03BF\u03BD \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03BC\u03B7\u03C7\u03B1\u03BD\u03AE\u03C2).</p></li><li><p>\u0393\u03B9\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B7\u03BC\u03B1\u03C3\u03BC\u03AD\u03BD\u03BF\u03C5\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD\u03C2</p><p>\u03B7 \u03C3\u03B5\u03B9\u03C1\u03AC \u03B5\u03AF\u03BD\u03B1\u03B9: \u03C0\u03C1\u03CE\u03C4\u03B1 \u03C4\u03BF 0, \u03BC\u03B5\u03C4\u03AC \u03CC\u03BB\u03BF\u03B9 \u03BF\u03B9 \u03B8\u03B5\u03C4\u03B9\u03BA\u03BF\u03AF \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03AF \u03B1\u03C0\u03CC \u03C4\u03BF\u03BD \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03C0\u03C1\u03BF\u03C2 \u03C4\u03BF\u03BD \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF, \u03BC\u03B5\u03C4\u03AC \u03CC\u03BB\u03BF\u03B9 \u03BF\u03B9 \u03B1\u03C1\u03BD\u03B7\u03C4\u03B9\u03BA\u03BF\u03AF \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03AF \u03B1\u03C0\u03CC \u03C4\u03BF\u03BD \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03C0\u03C1\u03BF\u03C2 \u03C4\u03BF\u03BD \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF.</p></li></ul><h3 id="\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C0\u03C4\u03B5\u03C2-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03BF\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C0\u03C4\u03B5\u03C2-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03BF\u03C2" aria-hidden="true">#</a> \u0395\u03C0\u03B1\u03BD\u03B1\u03BB\u03AE\u03C0\u03C4\u03B5\u03C2 \u03B4\u03B9\u03B1\u03C3\u03C4\u03AE\u03BC\u03B1\u03C4\u03BF\u03C2</h3><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-\u03C4\u03BF\u03C5" tabindex="-1"><a class="header-anchor" href="#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-\u03C4\u03BF\u03C5" aria-hidden="true">#</a> \u0395\u03BA\u03C4\u03B5\u03BB\u03AD\u03C3\u03C4\u03B5 \u03C4\u03B7\u03BD \u03AD\u03BE\u03BF\u03B4\u03BF \u03C4\u03BF\u03C5</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/range.mdb

&gt; Test0

# test0.range([1]..)
(Bin([1]), Bin([1, 2]))
(Bin([1, 1]), Bin([1, 3]))
(Bin([1, 2]), Bin([1, 3]))
(Bin([2]), Bin([2, 3]))
(Bin([3]), Bin([]))

# test0.range([1, 1]..=[2])
(Bin([1, 1]), Bin([1, 3]))
(Bin([1, 2]), Bin([1, 3]))
(Bin([2]), Bin([2, 3]))
-- all
(2, 4)
(2, 9)
(3, 0)
(3, 8)
(5, 3)
(5, 8)
(9, 1)
(9, 2)
(9, 7)

# test1.range(1..3)
(2, 4)
(2, 9)

# test1.range(5..2)
(5, 8)
(5, 3)
(3, 8)
(3, 0)

# test1.range(1..=3)
(2, 4)
(2, 9)
(3, 0)
(3, 8)

# test1.range(..3)
(2, 4)
(2, 9)

# test1.range(3..)
(3, 0)
(3, 8)
(5, 3)
(5, 8)
(9, 1)
(9, 2)
(9, 7)

# test1.rev_range(..1)
(9, 7)
(9, 2)
(9, 1)
(5, 8)
(5, 3)
(3, 8)
(3, 0)
(2, 9)
(2, 4)

# test1.rev_range(..=1)
(9, 7)
(9, 2)
(9, 1)
(5, 8)
(5, 3)
(3, 8)
(3, 0)
(2, 9)
(2, 4)

&gt; Test2

# test2.range(1..3)
(1, 5)
(2, 4)

# test2.range(1..=3)
(1, 5)
(2, 4)

# test2.range(..3)
(0, 0)
(1, 5)
(2, 4)

# test2.range(2..)
(2, 4)
(9, 1)

# test2.rev_range(..1)
(9, 1)
(2, 4)

# test2.rev_range(2..)
(2, 4)
(1, 5)
(0, 0)

# test2.rev_range(..=1)
(9, 1)
(2, 4)
(1, 5)
</code></pre></div><h4 id="range-begin-end-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1-\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C8\u03B7\u03C2" tabindex="-1"><a class="header-anchor" href="#range-begin-end-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1-\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C8\u03B7\u03C2" aria-hidden="true">#</a> <code>.range(begin..end)</code> \u0394\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03B5\u03C0\u03B1\u03BD\u03AC\u03BB\u03B7\u03C8\u03B7\u03C2</h4><p>\u0393\u03B9\u03B1 \u03C4\u03BF\u03C5\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD\u03C2, \u03AD\u03BD\u03B1 \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03BD\u03B1 \u03B1\u03C1\u03B9\u03B8\u03BC\u03B7\u03C4\u03B9\u03BA\u03CC \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1.</p><p>\u0393\u03B9\u03B1 \u03C4\u03BF \u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03CC \u03C3\u03CD\u03C3\u03C4\u03B7\u03BC\u03B1, \u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03BA\u03B1\u03C4\u03B1\u03C3\u03BA\u03B5\u03C5\u03B1\u03C3\u03C4\u03B5\u03AF, \u03C0.\u03C7.</p><div class="language-text ext-text"><pre class="language-text"><code>let begin : &amp;[u8] = &amp;[1,1];
for (k,v) in test0.range(begin..=&amp;[2]) {}
</code></pre></div><p>\u0395\u03AC\u03BD \u03C4\u03BF <code>begin</code> \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03C4\u03BF <code>end</code>, \u03B8\u03B1 \u03B3\u03AF\u03BD\u03B5\u03B9 \u03B5\u03C0\u03B1\u03BD\u03AC\u03BB\u03B7\u03C8\u03B7 \u03C0\u03C1\u03BF\u03C2 \u03C4\u03B1 \u03C0\u03AF\u03C3\u03C9.</p><p>\u0393\u03B9\u03B1 \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1, \u03C4\u03BF <code>test1.range(5..2)</code> \u03B8\u03B1 \u03B2\u03B3\u03AC\u03BB\u03B5\u03B9 \u03C4\u03B1 \u03B5\u03BE\u03AE\u03C2 :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre></div>`,12),Yp=s("\u0394\u03B5\u03BD \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9 \u03B7 \u03B4\u03B9\u03B1\u03BB\u03B5\u03B9\u03BC\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B5\u03C0\u03B1\u03BD\u03AC\u03BB\u03B7\u03C8\u03B7 "),jp={href:"https://doc.rust-lang.org/std/ops/struct.RangeFull.html",target:"_blank",rel:"noopener noreferrer"},Gp=n("code",null,"RangeFull",-1),Hp=s(" , \u03B4\u03B7\u03BB. \u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03BF\u03C5 "),Wp=n("code",null,"..",-1),Kp=s("\u03B4\u03B5\u03BD \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9, \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03C4\u03B5 \u03B1\u03BD\u03C4' \u03B1\u03C5\u03C4\u03BF\u03CD \u03C4\u03B7\u03BD \u03C0\u03C1\u03BF\u03B1\u03BD\u03B1\u03C6\u03B5\u03C1\u03B8\u03B5\u03AF\u03C3\u03B1 "),Jp=n("a",{href:"#%E9%81%8D%E5%8E%86"},"\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03C1\u03BF\u03C6\u03AE",-1),Qp=s("."),Zp=c(`<h4 id="rev-range-\u03B1\u03BD\u03C4\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03B5\u03BD\u03B1-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03B1" tabindex="-1"><a class="header-anchor" href="#rev-range-\u03B1\u03BD\u03C4\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03B5\u03BD\u03B1-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03B1" aria-hidden="true">#</a> <code>.rev_range</code> \u0391\u03BD\u03C4\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03AD\u03BD\u03B1 \u03B4\u03B9\u03B1\u03C3\u03C4\u03AE\u03BC\u03B1\u03C4\u03B1</h4><p>\u0391\u03BD \u03B8\u03AD\u03BB\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03BB\u03AC\u03B2\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03B1\u03BD\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03AD\u03BD\u03BF \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03C0\u03BF\u03C5 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03AE \u03AF\u03C3\u03BF \u03B1\u03C0\u03CC \u03BC\u03B9\u03B1 \u03C4\u03B9\u03BC\u03AE, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03BA\u03AC\u03BD\u03B5\u03C4\u03B5 \u03C4\u03BF \u03B5\u03BE\u03AE\u03C2</p><div class="language-text ext-text"><pre class="language-text"><code>test2.rev_range(2..)
</code></pre></div><p>\u0397 \u03AD\u03BE\u03BF\u03B4\u03BF\u03C2 \u03B8\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9</p><div class="language-text ext-text"><pre class="language-text"><code>(2, 4)
(1, 5)
(0, 0)
</code></pre></div><p>\u0388\u03BD\u03B1 \u03B1\u03C0\u03CC \u03C4\u03B1 <code>begin</code> \u03AE <code>end</code> \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03BF\u03C1\u03B9\u03C3\u03C4\u03B5\u03AF \u03B3\u03B9\u03B1 \u03C4\u03BF \u03B1\u03BD\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03AD\u03BD\u03BF \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1, \u03B4\u03B9\u03CC\u03C4\u03B9 \u03B1\u03BD \u03BF\u03C1\u03B9\u03C3\u03C4\u03BF\u03CD\u03BD \u03BA\u03B1\u03B9 \u03C4\u03B1 \u03B4\u03CD\u03BF, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03C0\u03AC\u03BD\u03C4\u03B1 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF <code>range(end..begin)</code> \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03C4\u03CD\u03C7\u03B5\u03C4\u03B5 \u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03B1\u03C0\u03BF\u03C4\u03AD\u03BB\u03B5\u03C3\u03BC\u03B1.</p><h3 id="\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03B3\u03B7-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" tabindex="-1"><a class="header-anchor" href="#\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03B3\u03B7-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD" aria-hidden="true">#</a> \u03A0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03C4\u03CD\u03C0\u03C9\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</h3>`,7),nt=s("\u039F \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1\u03C2 \u03B5\u03C0\u03AF\u03B4\u03B5\u03B9\u03BE\u03B7\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B9\u03B1\u03B8\u03AD\u03C3\u03B9\u03BC\u03BF\u03C2 \u03C3\u03C4\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 "),st={href:"https://github.com/rmw-lib/mdbx-example/blob/master/01/src/main.rs",target:"_blank",rel:"noopener noreferrer"},at=s("github.com/rmw-lib/mdbx-example/01"),pt=c(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span><span class="token class-name">City</span><span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test</span>
    key <span class="token keyword">u16</span>
    val <span class="token class-name">City</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">&quot;BeiJing&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">11640</span><span class="token punctuation">,</span> <span class="token number">3990</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
  test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0397 \u03AD\u03BE\u03BF\u03B4\u03BF\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2</p><div class="language-text ext-text"><pre class="language-text"><code>Some(City { name: &quot;BeiJing&quot;, lnglat: (11640, 3990) })
</code></pre></div>`,3),tt=s("\u03A3\u03C4\u03BF \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03AD\u03BD\u03BF\u03C5 \u03C4\u03CD\u03C0\u03BF\u03C5, \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BC\u03B5 "),ot={href:"https://github.com/koute/speedy",target:"_blank",rel:"noopener noreferrer"},ct=n("code",null,"speedy",-1),et=s(" \u03BD\u03B1 \u03BA\u03AC\u03BD\u03B5\u03B9 \u03C4\u03B7 \u03C3\u03B5\u03B9\u03C1\u03BF\u03B8\u03AD\u03C4\u03B7\u03C3\u03B7 "),ut={href:"https://github.com/djkoloski/rust_serialization_benchmark",target:"_blank",rel:"noopener noreferrer"},lt=s("( "),kt=n("code",null,"speedy",-1),it=s(" \u03B5\u03C0\u03B1\u03BD\u03B5\u03BE\u03AD\u03C4\u03B1\u03C3\u03B7 \u03B5\u03C0\u03B9\u03B4\u03CC\u03C3\u03B5\u03C9\u03BD"),rt=s(" ) "),mt={href:"https://github.com/djkoloski/rust_serialization_benchmark",target:"_blank",rel:"noopener noreferrer"},dt=s("."),bt=s("\u0395\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03AD\u03BD\u03BF\u03C5 \u03C4\u03CD\u03C0\u03BF\u03C5 "),yt={href:"https://docs.rs/mdbx/latest/mdbx/type/trait.FromMdbx.html",target:"_blank",rel:"noopener noreferrer"},ft=n("code",null,"FromMdbx",-1),_t=s(" \u03BA\u03B1\u03B9 "),gt={href:"https://docs.rs/mdbx/latest/mdbx/type/trait.ToAsRef.html",target:"_blank",rel:"noopener noreferrer"},ht=n("code",null,"ToAsRef",-1),wt=s(" \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 \u03BD\u03B1 \u03B1\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 "),xt=n("code",null,"mdbx",-1),vt=s("."),qt=s("\u0395\u03AC\u03BD \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF\u03C4\u03B5 \u03BC\u03B9\u03B1 \u03C3\u03C5\u03B3\u03BA\u03B5\u03BA\u03C1\u03B9\u03BC\u03AD\u03BD\u03B7 \u03B2\u03B9\u03B2\u03BB\u03B9\u03BF\u03B8\u03AE\u03BA\u03B7 \u03C3\u03B5\u03B9\u03C1\u03B9\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2, \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03B5\u03C0\u03AF\u03C3\u03B7\u03C2 \u03BD\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03CC\u03C3\u03B5\u03C4\u03B5 \u03C4\u03B9\u03C2 "),Dt={href:"https://blog.logrocket.com/macros-in-rust-a-tutorial-with-examples/",target:"_blank",rel:"noopener noreferrer"},Et=s("\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AD\u03C2"),Bt=s(" \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CE\u03BD \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03B7 \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1."),Tt=n("h4",{id:"\u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03BC\u03B5-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B5\u03C2-\u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03C9\u03BD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03BC\u03B5-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B5\u03C2-\u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03C9\u03BD","aria-hidden":"true"},"#"),s(" \u0391\u03C0\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03AD\u03BD\u03C9\u03BD \u03C4\u03CD\u03C0\u03C9\u03BD \u03BC\u03B5 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AD\u03C2 \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CE\u03BD")],-1),Mt=s("\u0397 \u03C5\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03BC\u03B9\u03B1\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2 \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CE\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03CC\u03C3\u03BF \u03B1\u03C0\u03BB\u03AE \u03CC\u03C3\u03BF "),Nt={href:"https://crates.io/crates/mdbx_speedy",target:"_blank",rel:"noopener noreferrer"},St=n("code",null,"mdbx_speedy",-1),Xt=s(" \u039F \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 \u03C4\u03B7\u03C2 \u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03AE\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B5\u03BE\u03AE\u03C2 :"),Rt=c(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span><span class="token class-name">City</span><span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test</span>
    key <span class="token keyword">u16</span>
    val <span class="token class-name">City</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">&quot;BeiJing&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">11640</span><span class="token punctuation">,</span> <span class="token number">3990</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
  test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">proc_macro</span><span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">syn</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[macro_use]</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">quote</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">proc_macro<span class="token punctuation">::</span></span><span class="token class-name">TokenStream</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[proc_macro_derive(MdbxSpeedy)]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mdbx_speedy</span><span class="token punctuation">(</span>ts<span class="token punctuation">:</span> <span class="token class-name">TokenStream</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">TokenStream</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ast<span class="token punctuation">:</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token class-name">DeriveInput</span> <span class="token operator">=</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token function">parse</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token operator">&amp;</span>ast<span class="token punctuation">.</span>ident<span class="token punctuation">;</span>
  <span class="token macro property">quote!</span> <span class="token punctuation">{</span>
    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span>#name<span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Ot=s("\u039E\u03B5\u03BA\u03B9\u03BD\u03AE\u03C3\u03C4\u03B5 \u03BC\u03B5 \u03C4\u03BF "),Ct=n("code",null,"cargo add mdbx-speedy",-1),Vt=s("\u03C3\u03C4\u03BF \u03B4\u03B9\u03BA\u03CC \u03C3\u03B1\u03C2 \u03AD\u03C1\u03B3\u03BF \u03BA\u03B1\u03B9 \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03CC\u03C3\u03B5\u03C4\u03B5 \u03B3\u03C1\u03AE\u03B3\u03BF\u03C1\u03B1 \u03C4\u03BF\u03BD \u03C4\u03CD\u03C0\u03BF (\u03B4\u03B5\u03AF\u03C4\u03B5 "),Ut={href:"https://github.com/rmw-lib/mdbx-example/blob/master/02/src/main.rs",target:"_blank",rel:"noopener noreferrer"},It=s("github.com/rmw-lib/mdbx-example/02"),At=s(" \u03B3\u03B9\u03B1 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1 \u03B5\u03C0\u03AF\u03B4\u03B5\u03B9\u03BE\u03B7\u03C2) "),Lt={href:"https://github.com/rmw-lib/mdbx-example/blob/master/02/src/main.rs",target:"_blank",rel:"noopener noreferrer"},Pt=s("."),Ft=c(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0395\u03BE\u03B1\u03B3\u03C9\u03B3\u03AE \u03C4\u03BF\u03C5 \u03B1\u03C1\u03B9\u03B8\u03BC\u03BF\u03CD \u03AD\u03BA\u03B4\u03BF\u03C3\u03B7\u03C2 \u03C4\u03B7\u03C2 libmdbx</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03C5\u03BD\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03AE \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
  <span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
  <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
    sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  
  <span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
      <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
      sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u03A3\u03B5 1/65536 \u03C4\u03BF\u03C5 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03BF\u03BB\u03AD\u03C0\u03C4\u03BF\u03C5</span>
      sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
      max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
        <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
        <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u038C\u03BD\u03BF\u03BC\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03AE\u03C2 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD Env</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u0394\u03BF\u03BA\u03B9\u03BC\u03AE \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u039F\u03BD\u03CC\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5\u03C4\u03B1\u03B2\u03BB\u03B7\u03C4\u03CE\u03BD \u03B3\u03B9\u03B1 \u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD ENV</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B3\u03C1\u03B1\u03C6\u03AE</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0393\u03C1\u03AE\u03B3\u03BF\u03C1\u03B7 \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B5\u03C2 \u03C3\u03B5 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BD \u03AF\u03B4\u03B9\u03B1 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u0397 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B8\u03B1 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF \u03C4\u03AD\u03BB\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C0\u03B5\u03B4\u03AF\u03BF\u03C5 \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03AE\u03C2</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span><span class="token class-name">City</span><span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test</span>
    key <span class="token keyword">u16</span>
    val <span class="token class-name">City</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">&quot;BeiJing&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">11640</span><span class="token punctuation">,</span> <span class="token number">3990</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
  test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">proc_macro</span><span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">syn</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[macro_use]</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">quote</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">proc_macro<span class="token punctuation">::</span></span><span class="token class-name">TokenStream</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[proc_macro_derive(MdbxSpeedy)]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mdbx_speedy</span><span class="token punctuation">(</span>ts<span class="token punctuation">:</span> <span class="token class-name">TokenStream</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">TokenStream</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ast<span class="token punctuation">:</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token class-name">DeriveInput</span> <span class="token operator">=</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token function">parse</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token operator">&amp;</span>ast<span class="token punctuation">.</span>ident<span class="token punctuation">;</span>
  <span class="token macro property">quote!</span> <span class="token punctuation">{</span>
    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span>#name<span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx_speedy<span class="token punctuation">::</span></span><span class="token class-name">MdbxSpeedy</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable, MdbxSpeedy)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),zt=s("\u03A6\u03C5\u03C3\u03B9\u03BA\u03AC, \u03B5\u03BE\u03B1\u03BA\u03BF\u03BB\u03BF\u03C5\u03B8\u03B5\u03AF \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B5\u03BD\u03BF\u03C7\u03BB\u03B7\u03C4\u03B9\u03BA\u03CC \u03BD\u03B1 \u03B3\u03C1\u03AC\u03C6\u03B5\u03C4\u03B5 \u03C4\u03BF "),$t=n("code",null,"#[derive(PartialEq, Debug, Readable, Writable, MdbxSpeedy)]",-1),Yt=s(" \u03B5\u03C0\u03B1\u03BD\u03B5\u03B9\u03BB\u03B7\u03BC\u03BC\u03AD\u03BD\u03B1, \u03BF\u03C0\u03CC\u03C4\u03B5 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF\u03C4\u03B5 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF "),jt={href:"https://docs.rs/derive-alias/0.1.0/derive_alias",target:"_blank",rel:"noopener noreferrer"},Gt=n("code",null,"derive_alias",-1),Ht=s(" \u03B3\u03B9\u03B1 \u03C0\u03B5\u03C1\u03B1\u03B9\u03C4\u03AD\u03C1\u03C9 \u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 \u03BA\u03CE\u03B4\u03B9\u03BA\u03B1."),Wt=c('<h2 id="\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B7-\u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03B1-\u03BC\u03B5-\u03C4\u03B7-\u03C7\u03C1\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B7-\u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03B1-\u03BC\u03B5-\u03C4\u03B7-\u03C7\u03C1\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2" aria-hidden="true">#</a> \u03A3\u03B7\u03BC\u03B5\u03AF\u03C9\u03C3\u03B7 \u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03AC \u03BC\u03B5 \u03C4\u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03B7\u03C2</h2><h3 id="\u03C4\u03BF-\u03BC\u03B7\u03BA\u03BF\u03C2-\u03C4\u03BF\u03C5-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03C5" tabindex="-1"><a class="header-anchor" href="#\u03C4\u03BF-\u03BC\u03B7\u03BA\u03BF\u03C2-\u03C4\u03BF\u03C5-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03C5" aria-hidden="true">#</a> \u03A4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03CD</h3><ul><li>\u0395\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF 0, \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u2248 \xBD \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C3\u03B5\u03BB\u03AF\u03B4\u03B1\u03C2 (\u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C3\u03B5\u03BB\u03AF\u03B4\u03B1\u03C2 4\u039A \u03C4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03CD \u03B5\u03AF\u03BD\u03B1\u03B9 2022 bytes), \u03BF\u03C1\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9 \u03BA\u03B1\u03C4\u03AC \u03C4\u03B7\u03BD \u03B1\u03C1\u03C7\u03B9\u03BA\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7 \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD <code>pagesize</code> \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03C1\u03C5\u03B8\u03BC\u03B9\u03C3\u03C4\u03B5\u03AF \u03C3\u03B5 \u03CC\u03C7\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC <code>65536</code>\u03BA\u03B1\u03B9 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03CD\u03BD\u03B1\u03BC\u03B7 \u03C4\u03BF\u03C5 2.</li></ul><h2 id="\u03C5\u03C0\u03BF\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B5\u03B9\u03C2" tabindex="-1"><a class="header-anchor" href="#\u03C5\u03C0\u03BF\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B5\u03B9\u03C2" aria-hidden="true">#</a> \u03A5\u03C0\u03BF\u03C3\u03B7\u03BC\u03B5\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2</h2><p>\u0391\u03BD\u03B1\u03C6\u03AD\u03C1\u03BF\u03C5\u03BD \u03C4\u03B1 \u03C0\u03BB\u03B5\u03BF\u03BD\u03B5\u03BA\u03C4\u03AE\u03BC\u03B1\u03C4\u03B1 \u03C4\u03B7\u03C2 \u03BC\u03B5\u03C4\u03AC\u03B2\u03B1\u03C3\u03B7\u03C2 \u03B1\u03C0\u03CC \u03C4\u03B7\u03BD LMDB \u03C3\u03C4\u03B7\u03BD MDBX.</p>',5),Kt=n("p",null,"\u0397 Erigon \u03BE\u03B5\u03BA\u03AF\u03BD\u03B7\u03C3\u03B5 \u03BC\u03B5 \u03AD\u03BD\u03B1 backend \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD BoltDB, \u03C3\u03C4\u03B7 \u03C3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1 \u03C0\u03C1\u03CC\u03C3\u03B8\u03B5\u03C3\u03B5 \u03C5\u03C0\u03BF\u03C3\u03C4\u03AE\u03C1\u03B9\u03BE\u03B7 \u03B3\u03B9\u03B1 BadgerDB \u03BA\u03B1\u03B9 \u03C4\u03B5\u03BB\u03B9\u03BA\u03AC \u03BC\u03B5\u03C4\u03B1\u03C6\u03AD\u03C1\u03B8\u03B7\u03BA\u03B5 \u03C0\u03BB\u03AE\u03C1\u03C9\u03C2 \u03C3\u03B5 LMDB.\u03A3\u03B5 \u03BA\u03AC\u03C0\u03BF\u03B9\u03BF \u03C3\u03B7\u03BC\u03B5\u03AF\u03BF \u03B1\u03BD\u03C4\u03B9\u03BC\u03B5\u03C4\u03C9\u03C0\u03AF\u03C3\u03B1\u03BC\u03B5 \u03C0\u03C1\u03BF\u03B2\u03BB\u03AE\u03BC\u03B1\u03C4\u03B1 \u03C3\u03C4\u03B1\u03B8\u03B5\u03C1\u03CC\u03C4\u03B7\u03C4\u03B1\u03C2 \u03C0\u03BF\u03C5 \u03C0\u03C1\u03BF\u03BA\u03BB\u03AE\u03B8\u03B7\u03BA\u03B1\u03BD \u03B1\u03C0\u03CC \u03C4\u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03B7\u03C2 LMDB \u03BA\u03B1\u03B9 \u03C4\u03B1 \u03BF\u03C0\u03BF\u03AF\u03B1 \u03B4\u03B5\u03BD \u03B5\u03AF\u03C7\u03B1\u03BD \u03C0\u03C1\u03BF\u03B2\u03BB\u03B5\u03C6\u03B8\u03B5\u03AF \u03B1\u03C0\u03CC \u03C4\u03BF\u03C5\u03C2 \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03BF\u03CD\u03C2 \u03C4\u03B7\u03C2. \u0391\u03C0\u03CC \u03C4\u03CC\u03C4\u03B5 \u03B5\u03BE\u03B5\u03C4\u03AC\u03B6\u03BF\u03C5\u03BC\u03B5 \u03AD\u03BD\u03B1 \u03BA\u03B1\u03BB\u03AC \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03B9\u03B6\u03CC\u03BC\u03B5\u03BD\u03BF \u03C0\u03B1\u03C1\u03AC\u03B3\u03C9\u03B3\u03BF \u03C4\u03B7\u03C2 LMDB \u03C0\u03BF\u03C5 \u03BF\u03BD\u03BF\u03BC\u03AC\u03B6\u03B5\u03C4\u03B1\u03B9 MDBX \u03BA\u03B1\u03B9 \u03B5\u03BB\u03C0\u03AF\u03B6\u03BF\u03C5\u03BC\u03B5 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03BF\u03C5\u03BC\u03B5 \u03C4\u03B9\u03C2 \u03B2\u03B5\u03BB\u03C4\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C4\u03B1\u03B8\u03B5\u03C1\u03CC\u03C4\u03B7\u03C4\u03B1\u03C2 \u03BA\u03B1\u03B9 \u03B5\u03BD\u03B4\u03B5\u03C7\u03BF\u03BC\u03AD\u03BD\u03C9\u03C2 \u03BD\u03B1 \u03C3\u03C5\u03BD\u03B5\u03C1\u03B3\u03B1\u03C3\u03C4\u03BF\u03CD\u03BC\u03B5 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF \u03C3\u03C4\u03BF \u03BC\u03AD\u03BB\u03BB\u03BF\u03BD.\u0397 \u03B5\u03BD\u03C3\u03C9\u03BC\u03AC\u03C4\u03C9\u03C3\u03B7 \u03C4\u03BF\u03C5 MDBX \u03AD\u03C7\u03B5\u03B9 \u03C0\u03BB\u03AD\u03BF\u03BD \u03BF\u03BB\u03BF\u03BA\u03BB\u03B7\u03C1\u03C9\u03B8\u03B5\u03AF \u03BA\u03B1\u03B9 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B1\u03B9\u03C1\u03CC\u03C2 \u03B3\u03B9\u03B1 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B4\u03BF\u03BA\u03B9\u03BC\u03AD\u03C2 \u03BA\u03B1\u03B9 \u03C4\u03B5\u03BA\u03BC\u03B7\u03C1\u03AF\u03C9\u03C3\u03B7.",-1),Jt=n("p",null,"\u039F\u03C6\u03AD\u03BB\u03B7 \u03B1\u03C0\u03CC \u03C4\u03B7 \u03BC\u03B5\u03C4\u03AC\u03B2\u03B1\u03C3\u03B7 \u03B1\u03C0\u03CC \u03C4\u03B7\u03BD LMDB \u03C3\u03C4\u03B7\u03BD MDBX.",-1),Qt=n("li",null,[n("p",null,'\u0397 \u03B1\u03BD\u03AC\u03C0\u03C4\u03C5\u03BE\u03B7 \u03C4\u03BF\u03C5 "\u03C7\u03CE\u03C1\u03BF\u03C5 (\u03B3\u03B5\u03C9\u03BC\u03B5\u03C4\u03C1\u03AF\u03B1)" \u03C4\u03C9\u03BD \u03B1\u03C1\u03C7\u03B5\u03AF\u03C9\u03BD \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03B5\u03AF \u03C3\u03C9\u03C3\u03C4\u03AC. \u0391\u03C5\u03C4\u03CC \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C3\u03B7\u03BC\u03B1\u03BD\u03C4\u03B9\u03BA\u03CC, \u03B5\u03B9\u03B4\u03B9\u03BA\u03AC \u03C3\u03C4\u03B1 Windows. \u03A3\u03C4\u03B7\u03BD LMDB \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03BA\u03B1\u03B8\u03BF\u03C1\u03AF\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C7\u03AC\u03C1\u03C4\u03B7 \u03BC\u03BD\u03AE\u03BC\u03B7\u03C2 \u03BC\u03AF\u03B1 \u03C6\u03BF\u03C1\u03AC \u03B5\u03BA \u03C4\u03C9\u03BD \u03C0\u03C1\u03BF\u03C4\u03AD\u03C1\u03C9\u03BD (\u03B5\u03C0\u03AF \u03C4\u03BF\u03C5 \u03C0\u03B1\u03C1\u03CC\u03BD\u03C4\u03BF\u03C2 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BC\u03B5 2Tb \u03B1\u03C0\u03CC \u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE) \u03BA\u03B1\u03B9 \u03B1\u03BD \u03C4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BC\u03B5\u03B3\u03B1\u03BB\u03CE\u03C3\u03B5\u03B9 \u03C0\u03AD\u03C1\u03B1 \u03B1\u03C0\u03CC \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF \u03CC\u03C1\u03B9\u03BF, \u03B7 \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03C0\u03B1\u03BD\u03B5\u03BA\u03BA\u03B9\u03BD\u03AE\u03C3\u03B5\u03B9. \u03A3\u03C4\u03B1 Windows, \u03BF \u03BF\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2 \u03C4\u03BF\u03C5 \u03BC\u03B5\u03B3\u03AD\u03B8\u03BF\u03C5\u03C2 \u03C4\u03BF\u03C5 \u03C7\u03AC\u03C1\u03C4\u03B7 \u03BC\u03BD\u03AE\u03BC\u03B7\u03C2 \u03C3\u03B5 2 TB \u03B8\u03B1 \u03AD\u03BA\u03B1\u03BD\u03B5 \u03C4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B5\u03BE\u03B1\u03C1\u03C7\u03AE\u03C2 \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF \u03BA\u03B1\u03C4\u03AC 2 TB, \u03C0\u03C1\u03AC\u03B3\u03BC\u03B1 \u03C0\u03BF\u03C5 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03B2\u03BF\u03BB\u03B9\u03BA\u03CC. \u03A3\u03C4\u03BF MDBX, \u03C4\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C7\u03AC\u03C1\u03C4\u03B7 \u03BC\u03BD\u03AE\u03BC\u03B7\u03C2 \u03B1\u03C5\u03BE\u03AC\u03BD\u03B5\u03C4\u03B1\u03B9 \u03C3\u03B5 \u03B2\u03AE\u03BC\u03B1\u03C4\u03B1 \u03C4\u03C9\u03BD 2 Gb. \u0391\u03C5\u03C4\u03CC \u03C3\u03B7\u03BC\u03B1\u03AF\u03BD\u03B5\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C4\u03B1\u03C3\u03B9\u03B1\u03BA\u03AE \u03B5\u03C0\u03B1\u03BD\u03B1\u03C0\u03C1\u03BF\u03C3\u03B4\u03B9\u03BF\u03C1\u03B9\u03C3\u03BC\u03CC, \u03B1\u03BB\u03BB\u03AC \u03AD\u03C7\u03B5\u03B9 \u03C9\u03C2 \u03B1\u03C0\u03BF\u03C4\u03AD\u03BB\u03B5\u03C3\u03BC\u03B1 \u03BA\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03B7 \u03B5\u03BC\u03C0\u03B5\u03B9\u03C1\u03AF\u03B1 \u03B3\u03B9\u03B1 \u03C4\u03BF\u03BD \u03C7\u03C1\u03AE\u03C3\u03C4\u03B7.')],-1),Zt=n("li",null,[n("p",null,[s("\u03A4\u03BF MDBX \u03B4\u03B9\u03B1\u03B8\u03AD\u03C4\u03B5\u03B9 \u03B1\u03C5\u03C3\u03C4\u03B7\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF\u03C5\u03C2 \u03B5\u03BB\u03AD\u03B3\u03C7\u03BF\u03C5\u03C2 \u03B3\u03B9\u03B1 \u03C4\u03B7\u03BD \u03C4\u03B1\u03C5\u03C4\u03CC\u03C7\u03C1\u03BF\u03BD\u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03C4\u03B7\u03C2 \u03B5\u03C0\u03B5\u03BE\u03B5\u03C1\u03B3\u03B1\u03C3\u03AF\u03B1\u03C2 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03CE\u03BD \u03BA\u03B1\u03B9 \u03C4\u03B7\u03BD \u03B5\u03C0\u03B9\u03BA\u03AC\u03BB\u03C5\u03C8\u03B7 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03CE\u03BD \u03B1\u03BD\u03AC\u03B3\u03BD\u03C9\u03C3\u03B7\u03C2 \u03BA\u03B1\u03B9 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE\u03C2 \u03C3\u03C4\u03BF \u03AF\u03B4\u03B9\u03BF \u03BD\u03AE\u03BC\u03B1 \u03B5\u03BA\u03C4\u03AD\u03BB\u03B5\u03C3\u03B7\u03C2. \u0391\u03C5\u03C4\u03CC \u03BC\u03B1\u03C2 \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03BD\u03C4\u03BF\u03C0\u03AF\u03C3\u03BF\u03C5\u03BC\u03B5 \u03BF\u03C1\u03B9\u03C3\u03BC\u03AD\u03BD\u03B1 \u03BC\u03B7 \u03C0\u03C1\u03BF\u03C6\u03B1\u03BD\u03AE \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1\u03C4\u03B1 \u03BA\u03B1\u03B9 \u03BA\u03B1\u03B8\u03B9\u03C3\u03C4\u03AC \u03C4\u03B7 \u03C3\u03C5\u03BC\u03C0\u03B5\u03C1\u03B9\u03C6\u03BF\u03C1\u03AC \u03C0\u03B9\u03BF \u03C0\u03C1\u03BF\u03B2\u03BB\u03AD\u03C8\u03B9\u03BC\u03B7."),n("br"),s(" \u03A3\u03B5 \u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC 5 \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1 (\u03B1\u03C0\u03CC \u03C4\u03CC\u03C4\u03B5 \u03C0\u03BF\u03C5 \u03B4\u03B9\u03B1\u03C7\u03C9\u03C1\u03AF\u03C3\u03C4\u03B7\u03BA\u03B5 \u03B1\u03C0\u03CC \u03C4\u03B7\u03BD LMDB), \u03C4\u03BF MDBX \u03AD\u03C7\u03B5\u03B9 \u03C3\u03C5\u03C3\u03C3\u03C9\u03C1\u03B5\u03CD\u03C3\u03B5\u03B9 \u03AD\u03BD\u03B1 \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC \u03B4\u03B9\u03BF\u03C1\u03B8\u03CE\u03C3\u03B5\u03C9\u03BD \u03B1\u03C3\u03C6\u03B1\u03BB\u03B5\u03AF\u03B1\u03C2 \u03BA\u03B1\u03B9 \u03B4\u03B9\u03BF\u03C1\u03B8\u03CE\u03C3\u03B5\u03C9\u03BD heisenbug \u03C0\u03BF\u03C5, \u03B1\u03C0' \u03CC\u03C3\u03BF \u03B3\u03BD\u03C9\u03C1\u03AF\u03B6\u03BF\u03C5\u03BC\u03B5, \u03B5\u03BE\u03B1\u03BA\u03BF\u03BB\u03BF\u03C5\u03B8\u03BF\u03CD\u03BD \u03BD\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03C5\u03BD \u03C3\u03C4\u03B7\u03BD LMDB. \u039F\u03C1\u03B9\u03C3\u03BC\u03AD\u03BD\u03B1 \u03B1\u03C0\u03CC \u03B1\u03C5\u03C4\u03AC \u03B1\u03BD\u03B1\u03BA\u03B1\u03BB\u03CD\u03C6\u03B8\u03B7\u03BA\u03B1\u03BD \u03BA\u03B1\u03C4\u03AC \u03C4\u03B7 \u03B4\u03B9\u03AC\u03C1\u03BA\u03B5\u03B9\u03B1 \u03C4\u03C9\u03BD \u03B4\u03BF\u03BA\u03B9\u03BC\u03CE\u03BD \u03BC\u03B1\u03C2, \u03BA\u03B1\u03B9 \u03BF\u03B9 \u03C3\u03C5\u03BD\u03C4\u03B7\u03C1\u03B7\u03C4\u03AD\u03C2 \u03C4\u03BF\u03C5 MDBX \u03C4\u03B1 \u03C0\u03AE\u03C1\u03B1\u03BD \u03C3\u03BF\u03B2\u03B1\u03C1\u03AC \u03C5\u03C0\u03CC\u03C8\u03B7 \u03C4\u03BF\u03C5\u03C2 \u03BA\u03B1\u03B9 \u03C4\u03B1 \u03B4\u03B9\u03CC\u03C1\u03B8\u03C9\u03C3\u03B1\u03BD \u03B1\u03BC\u03AD\u03C3\u03C9\u03C2.")])],-1),no=s('\u038C\u03C4\u03B1\u03BD \u03C0\u03C1\u03CC\u03BA\u03B5\u03B9\u03C4\u03B1\u03B9 \u03B3\u03B9\u03B1 \u03B2\u03AC\u03C3\u03B5\u03B9\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03C0\u03BF\u03C5 \u03C4\u03C1\u03BF\u03C0\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BD \u03B4\u03B9\u03B1\u03C1\u03BA\u03CE\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1, \u03B4\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03BF\u03CD\u03BD \u03B1\u03C1\u03BA\u03B5\u03C4\u03CC \u03B1\u03BD\u03B1\u03BA\u03C4\u03AE\u03C3\u03B9\u03BC\u03BF \u03C7\u03CE\u03C1\u03BF (\u03B5\u03C0\u03AF\u03C3\u03B7\u03C2 \u03B3\u03BD\u03C9\u03C3\u03C4\u03CC \u03C9\u03C2 "freelist" \u03C3\u03C4\u03B7\u03BD \u03BF\u03C1\u03BF\u03BB\u03BF\u03B3\u03AF\u03B1 \u03C4\u03B7\u03C2 LMDB). \u03A7\u03C1\u03B5\u03B9\u03AC\u03C3\u03C4\u03B7\u03BA\u03B5 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03B4\u03B9\u03BF\u03C1\u03B8\u03CE\u03C3\u03BF\u03C5\u03BC\u03B5 \u03C4\u03BF LMDB \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B4\u03B9\u03BF\u03C1\u03B8\u03CE\u03C3\u03BF\u03C5\u03BC\u03B5 \u03C4\u03B9\u03C2 \u03C0\u03B9\u03BF \u03C3\u03BF\u03B2\u03B1\u03C1\u03AD\u03C2 \u03B5\u03BB\u03BB\u03B5\u03AF\u03C8\u03B5\u03B9\u03C2 \u03C3\u03C4\u03BF \u03C7\u03B5\u03B9\u03C1\u03B9\u03C3\u03BC\u03CC \u03C4\u03BF\u03C5 \u03B1\u03BD\u03B1\u03BA\u03C4\u03AE\u03C3\u03B9\u03BC\u03BF\u03C5 \u03C7\u03CE\u03C1\u03BF\u03C5 '),so={href:"https://github.com/ledgerwatch/erigon/wiki/LMDB-freelist-illustrated-guide",target:"_blank",rel:"noopener noreferrer"},ao=s("(\u03B1\u03BD\u03AC\u03BB\u03C5\u03C3\u03B7)"),po=s(". \u03A4\u03BF MDBX \u03AD\u03C7\u03B5\u03B9 \u03B4\u03CE\u03C3\u03B5\u03B9 "),to={href:"https://github.com/ledgerwatch/erigon/wiki/LMDB-freelist-illustrated-guide%EF%BC%89%E3%80%82MDBX%E5%AF%B9%E5%8F%AF%E5%9B%9E%E6%94%B6%E7%A9%BA%E9%97%B4%E7%9A%84%E6%9C%89%E6%95%88%E5%A4%84%E7%90%86%E8%BF%9B%E8%A1%8C%E4%BA%86%E7%89%B9%E5%88%AB%E7%9A%84%E5%85%B3%E6%B3%A8%EF%BC%8C%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E8%BF%98%E4%B8%8D%E9%9C%80%E8%A6%81%E6%89%93%E8%A1%A5%E4%B8%81%E3%80%82",target:"_blank",rel:"noopener noreferrer"},oo=s("\u03B9\u03B4\u03B9\u03B1\u03AF\u03C4\u03B5\u03C1\u03B7 \u03C0\u03C1\u03BF\u03C3\u03BF\u03C7\u03AE \u03C3\u03C4\u03BF\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03B5\u03C3\u03BC\u03B1\u03C4\u03B9\u03BA\u03CC \u03C7\u03B5\u03B9\u03C1\u03B9\u03C3\u03BC\u03CC \u03C4\u03BF\u03C5 \u03B1\u03BD\u03B1\u03BA\u03C4\u03AE\u03C3\u03B9\u03BC\u03BF\u03C5 \u03C7\u03CE\u03C1\u03BF\u03C5 \u03BA\u03B1\u03B9, \u03BC\u03AD\u03C7\u03C1\u03B9 \u03C3\u03C4\u03B9\u03B3\u03BC\u03AE\u03C2, \u03B4\u03B5\u03BD \u03AD\u03C7\u03B5\u03B9 \u03C7\u03C1\u03B5\u03B9\u03B1\u03C3\u03C4\u03B5\u03AF \u03BD\u03B1 \u03B5\u03C0\u03B9\u03B4\u03B9\u03BF\u03C1\u03B8\u03C9\u03B8\u03B5\u03AF"),co=s("."),eo=n("li",null,[n("p",null,"\u0392\u03AC\u03C3\u03B5\u03B9 \u03C4\u03C9\u03BD \u03B4\u03BF\u03BA\u03B9\u03BC\u03CE\u03BD \u03BC\u03B1\u03C2, \u03C4\u03BF MDBX \u03B5\u03AF\u03C7\u03B5 \u03B5\u03BB\u03B1\u03C6\u03C1\u03CE\u03C2 \u03BA\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B5\u03C0\u03B9\u03B4\u03CC\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C4\u03BF\u03C5\u03C2 \u03C6\u03CC\u03C1\u03C4\u03BF\u03C5\u03C2 \u03B5\u03C1\u03B3\u03B1\u03C3\u03AF\u03B1\u03C2 \u03BC\u03B1\u03C2.")],-1),uo=n("li",null,[n("p",null,'\u03A4\u03BF MDBX \u03B1\u03C0\u03BF\u03BA\u03B1\u03BB\u03CD\u03C0\u03C4\u03B5\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B1 \u03B5\u03C3\u03C9\u03C4\u03B5\u03C1\u03B9\u03BA\u03AC \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03C4\u03B7\u03BB\u03B5\u03BC\u03B5\u03C4\u03C1\u03AF\u03B1\u03C2 - \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03BC\u03B5\u03C4\u03C1\u03AE\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03AC \u03BC\u03B5 \u03C4\u03BF \u03C4\u03B9 \u03C3\u03C5\u03BC\u03B2\u03B1\u03AF\u03BD\u03B5\u03B9 \u03C3\u03C4\u03BF \u03B5\u03C3\u03C9\u03C4\u03B5\u03C1\u03B9\u03BA\u03CC \u03C4\u03B7\u03C2 \u03B2\u03AC\u03C3\u03B7\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD. \u039A\u03B1\u03B9 \u03AD\u03C7\u03BF\u03C5\u03BC\u03B5 \u03B1\u03C5\u03C4\u03AC \u03C4\u03B1 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1 \u03C3\u03C4\u03BF Grafana - \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BB\u03B1\u03BC\u03B2\u03AC\u03BD\u03BF\u03C5\u03BC\u03B5 \u03BA\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03B5\u03C2 \u03B1\u03C0\u03BF\u03C6\u03AC\u03C3\u03B5\u03B9\u03C2 \u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03AC \u03BC\u03B5 \u03C4\u03BF \u03C3\u03C7\u03B5\u03B4\u03B9\u03B1\u03C3\u03BC\u03CC \u03B5\u03C6\u03B1\u03C1\u03BC\u03BF\u03B3\u03CE\u03BD. \u0393\u03B9\u03B1 \u03C0\u03B1\u03C1\u03AC\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1, \u03BC\u03B5\u03C4\u03AC \u03C4\u03B7\u03BD \u03C0\u03BB\u03AE\u03C1\u03B7 \u03BC\u03B5\u03C4\u03AC\u03B2\u03B1\u03C3\u03B7 \u03C3\u03C4\u03BF MDBX (\u03BA\u03B1\u03C4\u03B1\u03C1\u03B3\u03CE\u03BD\u03C4\u03B1\u03C2 \u03C4\u03B7\u03BD \u03C5\u03C0\u03BF\u03C3\u03C4\u03AE\u03C1\u03B9\u03BE\u03B7 \u03C4\u03B7\u03C2 LMDB), \u03B8\u03B1 \u03B5\u03C6\u03B1\u03C1\u03BC\u03CC\u03C3\u03BF\u03C5\u03BC\u03B5 \u03BC\u03B9\u03B1 \u03C0\u03BF\u03BB\u03B9\u03C4\u03B9\u03BA\u03AE "\u03B4\u03AD\u03C3\u03BC\u03B5\u03C5\u03C3\u03B7\u03C2 \u03BC\u03B9\u03C3\u03BF\u03B3\u03B5\u03BC\u03AC\u03C4\u03B7\u03C2 \u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE\u03C2" \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B1\u03C0\u03BF\u03C6\u03CD\u03B3\u03BF\u03C5\u03BC\u03B5 \u03C4\u03B9\u03C2 \u03B5\u03C0\u03B1\u03C6\u03AD\u03C2 \u03C5\u03C0\u03B5\u03C1\u03C7\u03B5\u03AF\u03BB\u03B9\u03C3\u03B7\u03C2/\u03B1\u03C0\u03BF\u03C3\u03C5\u03BC\u03C0\u03AF\u03B5\u03C3\u03B7\u03C2 \u03C4\u03BF\u03C5 \u03B4\u03AF\u03C3\u03BA\u03BF\u03C5. \u0391\u03C5\u03C4\u03CC \u03B8\u03B1 \u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03B9 \u03C0\u03B5\u03C1\u03B1\u03B9\u03C4\u03AD\u03C1\u03C9 \u03C4\u03BF\u03BD \u03BA\u03CE\u03B4\u03B9\u03BA\u03AC \u03BC\u03B1\u03C2 \u03C7\u03C9\u03C1\u03AF\u03C2 \u03BD\u03B1 \u03B5\u03C0\u03B7\u03C1\u03B5\u03AC\u03C3\u03B5\u03B9 \u03C4\u03B7\u03BD \u03B1\u03C0\u03CC\u03B4\u03BF\u03C3\u03B7.')],-1),lo=n("li",null,[n("p",null,'\u03A4\u03BF MDBX \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03B7 \u03BB\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B1 "\u0391\u03C0\u03BF\u03BA\u03BB\u03B5\u03B9\u03C3\u03C4\u03B9\u03BA\u03CC \u03AC\u03BD\u03BF\u03B9\u03B3\u03BC\u03B1" - \u03C4\u03B7 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03BF\u03CD\u03BC\u03B5 \u03B3\u03B9\u03B1 \u03BC\u03B5\u03C4\u03B1\u03BD\u03B1\u03C3\u03C4\u03B5\u03CD\u03C3\u03B5\u03B9\u03C2 \u03B2\u03AC\u03C3\u03B5\u03C9\u03BD \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03B1\u03C0\u03BF\u03C4\u03C1\u03AD\u03C8\u03BF\u03C5\u03BC\u03B5 \u03C4\u03B7\u03BD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7 \u03AC\u03BB\u03BB\u03C9\u03BD \u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03C4\u03CE\u03BD \u03C3\u03C4\u03B7 \u03B2\u03AC\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD \u03BA\u03B1\u03C4\u03AC \u03C4\u03B7 \u03B4\u03B9\u03AC\u03C1\u03BA\u03B5\u03B9\u03B1 \u03C4\u03B7\u03C2 \u03B4\u03B9\u03B1\u03B4\u03B9\u03BA\u03B1\u03C3\u03AF\u03B1\u03C2 \u03BC\u03B5\u03C4\u03AC\u03B2\u03B1\u03C3\u03B7\u03C2.')],-1),ko=n("hr",{class:"footnotes-sep"},null,-1),io={class:"footnotes"},ro={class:"footnotes-list"},mo={id:"fn1",class:"footnote-item"},bo={href:"https://github.com/ledgerwatch/erigon/wiki/Criteria-for-transitioning-from-Alpha-to-Beta#switch-from-lmdb-to-mdbx",target:"_blank",rel:"noopener noreferrer"},yo=s("\u03A4\u03BF Erigon (\u03BF \u03C0\u03B5\u03BB\u03AC\u03C4\u03B7\u03C2 Ethernet \u03B5\u03C0\u03CC\u03BC\u03B5\u03BD\u03B7\u03C2 \u03B3\u03B5\u03BD\u03B9\u03AC\u03C2) \u03AC\u03BB\u03BB\u03B1\u03BE\u03B5 \u03C0\u03C1\u03CC\u03C3\u03C6\u03B1\u03C4\u03B1 \u03B1\u03C0\u03CC LMDB \u03C3\u03B5 MDBX."),fo=s(),_o=n("a",{href:"#fnref1",class:"footnote-backref"},"\u21A9\uFE0E",-1);function go(ho,wo){const p=e("ExternalLinkIcon"),t=e("RouterLink");return l(),k(i,null,[m,n("p",null,[d,b,y,n("a",f,[_,a(p)]),g]),h,w,n("nav",x,[n("ul",null,[n("li",null,[a(t,{to:"#\u03B1\u03C0\u03BF\u03C3\u03C0\u03B1\u03C3\u03BC\u03B1\u03C4\u03B1"},{default:o(()=>[v]),_:1})]),n("li",null,[a(t,{to:"#\u03C4\u03B9-\u03B5\u03B9\u03BD\u03B1\u03B9-\u03B7-libmdbx"},{default:o(()=>[q]),_:1})]),n("li",null,[a(t,{to:"#\u03C3\u03B5\u03BC\u03B9\u03BD\u03B1\u03C1\u03B9\u03B1"},{default:o(()=>[D]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03C0\u03C9\u03C2-\u03BD\u03B1-\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03B5\u03C4\u03B5-\u03C4\u03BF-\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1"},{default:o(()=>[E]),_:1})]),n("li",null,[a(t,{to:"#\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-1-\u03B3\u03C1\u03B1\u03C6\u03BF\u03BD\u03C4\u03B1\u03C2-set-key-val-\u03BA\u03B1\u03B9-\u03B4\u03B9\u03B1\u03B2\u03B1\u03B6\u03BF\u03BD\u03C4\u03B1\u03C2-get-key"},{default:o(()=>[B]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2"},{default:o(()=>[T]),_:1})]),n("li",null,[a(t,{to:"#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF"},{default:o(()=>[M]),_:1})]),n("li",null,[a(t,{to:"#\u03C0\u03B5\u03C1\u03B9\u03B3\u03C1\u03B1\u03C6\u03B7-\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C5"},{default:o(()=>[N]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#env-rw-\u03BF\u03C1\u03B9\u03C3\u03BC\u03BF\u03C2-\u03C4\u03B7\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[S]),_:1})]),n("li",null,[a(t,{to:"#\u03BC\u03B1\u03BA\u03C1\u03BF\u03C3\u03BA\u03BF\u03C0\u03B9\u03BA\u03B7-\u03B5\u03C0\u03B5\u03BA\u03C4\u03B1\u03C3\u03B7"},{default:o(()=>[X]),_:1})]),n("li",null,[a(t,{to:"#anyhow-\u03BA\u03B1\u03B9-lazy-static"},{default:o(()=>[R]),_:1})]),n("li",null,[a(t,{to:"#\u03B7-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B7-mdbx"},{default:o(()=>[O]),_:1})]),n("li",null,[a(t,{to:"#\u03BD\u03B7\u03BC\u03B1\u03C4\u03B1-\u03BA\u03B1\u03B9-\u03C3\u03C5\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03B5\u03C2"},{default:o(()=>[C]),_:1})]),n("li",null,[a(t,{to:"#\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B7-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03C5\u03B1\u03B4\u03B9\u03BA\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[V]),_:1})])])])])]),n("li",null,[a(t,{to:"#\u03C0\u03B1\u03C1\u03B1\u03B4\u03B5\u03B9\u03B3\u03BC\u03B1-2-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7"},{default:o(()=>[U]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03C2-1"},{default:o(()=>[I]),_:1})]),n("li",null,[a(t,{to:"#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-1"},{default:o(()=>[A]),_:1})]),n("li",null,[a(t,{to:"#\u03B3\u03C1\u03B7\u03B3\u03BF\u03C1\u03B5\u03C2-\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C3\u03B5\u03B9\u03C2-\u03BA\u03B1\u03B9-\u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03B5\u03C2"},{default:o(()=>[L]),_:1})]),n("li",null,[a(t,{to:"#\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[P]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03C0\u03C1\u03BF\u03BA\u03B1\u03B8\u03BF\u03C1\u03B9\u03C3\u03BC\u03B5\u03BD\u03BF\u03B9-\u03C4\u03C5\u03C0\u03BF\u03B9-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[F]),_:1})])])]),n("li",null,[a(t,{to:"#\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[z]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#dupsort-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03B9-\u03C3\u03B5-\u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03BF\u03C4\u03B5\u03C1\u03B5\u03C2-\u03B1\u03C0\u03BF-\u03BC\u03B9\u03B1-\u03C4\u03B9\u03BC\u03B5\u03C2"},{default:o(()=>[$]),_:1})]),n("li",null,[a(t,{to:"#dup-key-iterator-\u03C0\u03BF\u03C5-\u03B5\u03C0\u03B9\u03C3\u03C4\u03C1\u03B5\u03C6\u03B5\u03B9-\u03BF\u03BB\u03B5\u03C2-\u03C4\u03B9\u03C2-\u03C4\u03B9\u03BC\u03B5\u03C2-\u03C0\u03BF\u03C5-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03BF\u03C5\u03BD-\u03C3\u03B5-\u03B5\u03BD\u03B1-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9"},{default:o(()=>[Y]),_:1})]),n("li",null,[a(t,{to:"#\u03C0\u03C1\u03BF\u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03B5\u03BD\u03B5\u03C2-\u03C3\u03B7\u03BC\u03B1\u03B9\u03B5\u03C2-\u03B2\u03B1\u03C3\u03B7\u03C2-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C0\u03BF\u03C5-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03C4\u03C9\u03BD\u03C4\u03B1\u03B9-\u03B1\u03C5\u03C4\u03BF\u03BC\u03B1\u03C4\u03B1"},{default:o(()=>[j]),_:1})])])]),n("li",null,[a(t,{to:"#\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[G]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#del-key-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B5\u03BD\u03BF\u03C2-\u03C0\u03BB\u03B7\u03BA\u03C4\u03C1\u03BF\u03C5"},{default:o(()=>[H]),_:1})]),n("li",null,[a(t,{to:"#del-val-key-val-\u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B7-\u03B1\u03BA\u03C1\u03B9\u03B2\u03BF\u03C5\u03C2-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B9\u03B1\u03C2"},{default:o(()=>[W]),_:1})])])]),n("li",null,[a(t,{to:"#\u03B4\u03B9\u03B1\u03B4\u03C1\u03BF\u03BC\u03B7"},{default:o(()=>[K]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03B4\u03B9\u03B1\u03B4\u03BF\u03C7\u03B9\u03BA\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7"},{default:o(()=>[J]),_:1})]),n("li",null,[a(t,{to:"#rev-\u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03C1\u03BF\u03C6\u03B7-\u03B4\u03B9\u03B1\u03C3\u03C7\u03B9\u03C3\u03B7-\u03C3\u03B5\u03B9\u03C1\u03B1\u03C2"},{default:o(()=>[Q]),_:1})]),n("li",null,[a(t,{to:"#\u03C4\u03B1\u03BE\u03B9\u03BD\u03BF\u03BC\u03B7\u03C3\u03B7"},{default:o(()=>[Z]),_:1})])])])])]),n("li",null,[a(t,{to:"#\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C0\u03C4\u03B5\u03C2-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03BF\u03C2"},{default:o(()=>[nn]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03B5\u03BA\u03C4\u03B5\u03BB\u03B5\u03C3\u03C4\u03B5-\u03C4\u03B7\u03BD-\u03B5\u03BE\u03BF\u03B4\u03BF-\u03C4\u03BF\u03C5"},{default:o(()=>[sn]),_:1})]),n("li",null,[a(t,{to:"#range-begin-end-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1-\u03B5\u03C0\u03B1\u03BD\u03B1\u03BB\u03B7\u03C8\u03B7\u03C2"},{default:o(()=>[an]),_:1})]),n("li",null,[a(t,{to:"#rev-range-\u03B1\u03BD\u03C4\u03B5\u03C3\u03C4\u03C1\u03B1\u03BC\u03BC\u03B5\u03BD\u03B1-\u03B4\u03B9\u03B1\u03C3\u03C4\u03B7\u03BC\u03B1\u03C4\u03B1"},{default:o(()=>[pn]),_:1})])])]),n("li",null,[a(t,{to:"#\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03B3\u03B7-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03B4\u03B5\u03B4\u03BF\u03BC\u03B5\u03BD\u03C9\u03BD"},{default:o(()=>[tn]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03B1\u03C0\u03BB\u03BF\u03C0\u03BF\u03B9\u03B7\u03C3\u03B7-\u03C0\u03C1\u03BF\u03C3\u03B1\u03C1\u03BC\u03BF\u03C3\u03BC\u03B5\u03BD\u03C9\u03BD-\u03C4\u03C5\u03C0\u03C9\u03BD-\u03BC\u03B5-\u03BC\u03B1\u03BA\u03C1\u03BF\u03B5\u03BD\u03C4\u03BF\u03BB\u03B5\u03C2-\u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03B7\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03C9\u03BD"},{default:o(()=>[on]),_:1})])])])])]),n("li",null,[a(t,{to:"#\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B7-\u03C3\u03C7\u03B5\u03C4\u03B9\u03BA\u03B1-\u03BC\u03B5-\u03C4\u03B7-\u03C7\u03C1\u03B7\u03C3\u03B7-\u03C4\u03B7\u03C2"},{default:o(()=>[cn]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u03C4\u03BF-\u03BC\u03B7\u03BA\u03BF\u03C2-\u03C4\u03BF\u03C5-\u03BA\u03BB\u03B5\u03B9\u03B4\u03B9\u03BF\u03C5"},{default:o(()=>[en]),_:1})])])]),n("li",null,[a(t,{to:"#\u03C5\u03C0\u03BF\u03C3\u03B7\u03BC\u03B5\u03B9\u03C9\u03C3\u03B5\u03B9\u03C2"},{default:o(()=>[un]),_:1})])])]),ln,kn,n("p",null,[rn,n("a",mn,[dn,a(p)]),bn]),yn,n("p",null,[fn,n("a",_n,[gn,a(p)]),hn,n("a",wn,[xn,a(p)])]),vn,qn,n("p",null,[Dn,En,Bn,n("a",Tn,[Mn,a(p)]),Nn,Sn,Xn,n("a",Rn,[On,a(p)]),Cn]),Vn,n("p",null,[Un,n("a",In,[An,a(p)]),Ln,n("a",Pn,[Fn,a(p)]),zn]),n("p",null,[$n,n("a",Yn,[jn,a(p)]),Gn]),n("p",null,[Hn,n("a",Wn,[Kn,a(p)]),Jn]),n("p",null,[n("a",Qn,[Zn,a(p)]),ns]),n("p",null,[ss,n("a",as,[ps,a(p)]),ts]),os,n("p",null,[cs,n("a",es,[us,a(p)]),ls,ks,is]),rs,n("p",null,[ms,n("a",ds,[bs,a(p)])]),ys,n("ol",null,[fs,n("li",null,[n("p",null,[_s,n("a",gs,[hs,a(p)]),ws])])]),xs,n("p",null,[vs,qs,n("a",Ds,[Es,a(p)]),Bs]),n("p",null,[Ts,n("a",Ms,[Ns,a(p)]),Ss]),Xs,n("p",null,[n("a",Rs,[Os,a(p)]),Cs]),n("p",null,[Vs,n("a",Us,[Is,a(p)]),As,n("a",Ls,[Ps,a(p)])]),Fs,zs,n("p",null,[n("a",$s,[Ys,a(p)]),js,n("a",Gs,[Hs,a(p)]),Ws]),Ks,n("p",null,[Js,Qs,Zs,na,n("a",sa,[aa,a(p)]),pa]),ta,oa,n("p",null,[ca,n("a",ea,[ua,a(p)]),la]),ka,n("p",null,[ia,n("a",ra,[ma,a(p)]),da]),ba,n("p",null,[ya,n("a",fa,[_a,a(p)]),ga]),ha,n("p",null,[wa,n("a",xa,[va,a(p)]),qa,Da,Ea]),n("p",null,[Ba,Ta,Ma,n("a",Na,[Sa,a(p)]),Xa]),n("p",null,[Ra,n("a",Oa,[Ca,a(p)]),Va,Ua,Ia,Aa,La]),n("p",null,[Pa,Fa,za,n("a",$a,[Ya,a(p)]),ja,Ga,Ha]),Wa,n("p",null,[Ka,Ja,Qa,Za,np,n("a",sp,[ap,a(p)]),pp]),tp,n("p",null,[op,n("a",cp,[ep,a(p)]),up,lp,kp,ip]),n("p",null,[rp,n("a",mp,[dp,a(p)]),bp]),yp,n("p",null,[fp,_p,gp,hp,wp,xp,vp,n("a",qp,[Dp,a(p)]),Ep]),n("p",null,[Bp,n("a",Tp,[Mp,a(p)]),Np]),Sp,n("p",null,[Xp,n("a",Rp,[Op,a(p)]),Cp]),Vp,Up,Ip,Ap,n("p",null,[Lp,n("a",Pp,[Fp,a(p)]),zp]),$p,n("p",null,[Yp,n("a",jp,[Gp,a(p)]),Hp,Wp,Kp,Jp,Qp]),Zp,n("p",null,[nt,n("a",st,[at,a(p)])]),pt,n("p",null,[tt,n("a",ot,[ct,a(p)]),et,n("a",ut,[lt,kt,it,a(p)]),rt,n("a",mt,[dt,a(p)])]),n("p",null,[bt,n("a",yt,[ft,a(p)]),_t,n("a",gt,[ht,a(p)]),wt,xt,vt]),n("p",null,[qt,n("a",Dt,[Et,a(p)]),Bt]),Tt,n("p",null,[Mt,n("a",Nt,[St,a(p)]),Xt]),Rt,n("p",null,[Ot,Ct,Vt,n("a",Ut,[It,a(p)]),At,n("a",Lt,[Pt,a(p)])]),Ft,n("p",null,[zt,$t,Yt,n("a",jt,[Gt,a(p)]),Ht]),Wt,n("blockquote",null,[Kt,Jt,n("ol",null,[Qt,Zt,n("li",null,[n("p",null,[no,n("a",so,[ao,a(p)]),po,n("a",to,[oo,a(p)]),co])]),eo,uo,lo])]),ko,n("section",io,[n("ol",ro,[n("li",mo,[n("p",null,[n("a",bo,[yo,a(p)]),fo,_o])])])])],64)}var vo=u(r,[["render",go],["__file","2021-12-21-mdbx.html.vue"]]);export{vo as default};
