import{_ as l,r as c,o as u,c as i,a as n,b as a,w as o,F as k,d as s,e}from"./app.f05fb683.js";const r={},d=n("h1",{id:"libmdbx-\u7684-rust-\u5C01\u88C5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#libmdbx-\u7684-rust-\u5C01\u88C5","aria-hidden":"true"},"#"),s(" libmdbx \u7684 rust \u5C01\u88C5")],-1),_={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},h=s("libmdbx"),m=s(" \u6570\u636E\u5E93\u7684 "),b=n("code",null,"rust",-1),g=s(" \u5C01\u88C5\u3002"),f=n("hr",null,null,-1),y=n("p",null,"\u76EE\u5F55 :",-1),x={class:"table-of-contents"},w=s("\u5F15\u5B50"),v=s("libmdbx \u662F\u4EC0\u4E48\uFF1F"),E=s("\u4F7F\u7528\u6559\u7A0B"),B=s("\u5982\u4F55\u8FD0\u884C\u793A\u4F8B"),D=s("\u793A\u4F8B 1 : \u5199 set(key,val) \u548C \u8BFB .get(key)"),q=s("\u4EE3\u7801"),T=s("\u8FD0\u884C\u8F93\u51FA"),M=s("\u4EE3\u7801\u8BF4\u660E"),R=s("env_rw! \u5B9A\u4E49\u6570\u636E\u5E93"),S=s("\u5B8F\u5C55\u5F00"),X=s("anyhow \u548C lazy_static"),C=s("\u5B8F mdbx!"),A=s("\u7EBF\u7A0B\u4E0E\u4E8B\u52A1"),N=s("\u8BFB\u5199\u4E8C\u8FDB\u5236\u6570\u636E"),P=s("\u793A\u4F8B 2 : \u6570\u636E\u7C7B\u578B\u3001\u6570\u636E\u5E93\u6807\u5FD7 \u3001\u5220\u9664\u3001\u904D\u5386"),O=s("\u4EE3\u7801"),U=s("\u8FD0\u884C\u8F93\u51FA"),I=s("\u5FEB\u6377\u8BFB\u5199"),L=s("\u6570\u636E\u7C7B\u578B"),F=s("\u9884\u7F6E\u6570\u636E\u7C7B\u578B"),z=s("\u6570\u636E\u5E93\u6807\u5FD7"),V=s("DUPSORT : \u4E00\u4E2A\u952E\u5BF9\u5E94\u591A\u4E2A\u503C"),Y=s(".dup(key) \u8FD4\u56DE\u67D0\u952E\u6240\u6709\u5BF9\u5E94\u7684\u503C\u7684\u8FED\u4EE3\u5668"),$=s("\u9ED8\u8BA4\u81EA\u52A8\u8FFD\u52A0\u7684\u6570\u636E\u5E93\u6807\u5FD7"),G=s("\u5220\u9664\u6570\u636E"),K=s(".del(key) \u5220\u9664\u952E"),W=s(".del_val(key,val) \u7CBE\u786E\u5339\u914D\u7684\u5220\u9664"),j=s("\u904D\u5386"),H=s("\u987A\u5E8F\u904D\u5386"),J=s(".rev() \u5012\u5E8F\u904D\u5386"),Q=s("\u6392\u5E8F\u65B9\u5F0F"),Z=s("\u533A\u95F4\u8FED\u4EE3\u5668"),nn=s("\u8FD0\u884C\u8F93\u51FA"),sn=s(".range(begin..end) \u533A\u95F4\u8FED\u4EE3"),an=s(".rev_range \u5012\u5E8F\u533A\u95F4"),tn=s("\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B"),pn=s("\u7528\u5C5E\u6027\u5F0F\u5B8F\u7B80\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B"),on=s("\u4F7F\u7528\u6CE8\u610F"),en=s("\u952E\u7684\u957F\u5EA6"),cn=s("\u811A\u6CE8"),ln=n("hr",null,null,-1),un=n("h2",{id:"\u5F15\u5B50",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F15\u5B50","aria-hidden":"true"},"#"),s(" \u5F15\u5B50")],-1),kn=s("\u5728\u5199\u300E"),rn={href:"https://rmw.link",target:"_blank",rel:"noopener noreferrer"},dn=s("\u4EBA\u6C11\u7F51\u7EDC"),_n=s("\u300F\u7684\u65F6\u5019\uFF0C\u611F\u89C9\u81EA\u5DF1\u9700\u8981\u4E00\u4E2A\u5D4C\u5165\u5F0F\u6570\u636E\u5E93\u3002"),hn=n("p",null,[s("\u56E0\u4E3A\u6D89\u53CA\u5230\u7F51\u7EDC\u541E\u5410\u7684\u8BB0\u5F55\uFF0C\u8BFB\u5199\u9891\u7E41\uFF0C"),n("code",null,"sqlite3"),s(" \u592A\u9AD8\u7EA7\u6027\u80FD\u582A\u5FE7\u3002")],-1),mn=s("\u6240\u4EE5\u7528\u66F4\u5E95\u5C42\u7684\u952E\u503C\u6570\u636E\u5E93\u66F4\u4E3A\u5408\u9002\uFF08"),bn={href:"https://discourse.world/h/2020/06/05/Shine-and-poverty-key-value-database-LMDB-in-applications-for-iOS",target:"_blank",rel:"noopener noreferrer"},gn=s("lmdb \u6BD4 sqlite \u5FEB 10 \u500D"),fn=s("\uFF09\u3002"),yn=n("p",null,[n("img",{src:"//irmw.gumlet.io/yxZV8x.jpg",alt:""})],-1),xn=n("p",null,[s("\u6700\u7EC8\uFF0C\u6211\u9009\u62E9\u4E86 "),n("code",null,"lmdb"),s(" \u7684\u9B54\u6539\u7248 \u2014\u2014 "),n("code",null,"mdbx"),s(" \u3002")],-1),wn=s("\u76EE\u524D\uFF0C\u73B0\u6709\u7684 "),vn=n("code",null,"mdbx",-1),En=s(" \u7684 "),Bn=n("code",null,"rust",-1),Dn=s(" \u5C01\u88C5 "),qn={href:"https://github.com/vorot93/mdbx-rs/issues/1",target:"_blank",rel:"noopener noreferrer"},Tn=s("mdbx-rs(mdbx-sys)\u4E0D\u652F\u6301 windows"),Mn=s("\uFF0C\u4E8E\u662F\u6211\u81EA\u5DF1\u52A8\u624B\u5C01\u88C5\u4E00\u4E2A\u652F\u6301 windows \u7684\u7248\u672C\u3002"),Rn=e(`<p>\u652F\u6301\u5B58\u50A8\u81EA\u5B9A\u4E49 rust \u7C7B\u578B\u3002 \u652F\u6301\u591A\u7EBF\u7A0B\u8BBF\u95EE\u3002</p><p>\u53EF\u4EE5\u4E00\u4E2A\u6A21\u5757\u4E2D\u7528 <code>lazy_static</code> \u5B9A\u4E49\u597D\u6570\u636E\u5E93\uFF0C\u7136\u540E\u7528\u7B80\u5355\u5F15\u5165\u5E76\u4F7F\u7528\uFF0C\u6BD4\u5982:</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span>get id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="libmdbx-\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#libmdbx-\u662F\u4EC0\u4E48" aria-hidden="true">#</a> libmdbx \u662F\u4EC0\u4E48\uFF1F</h2>`,4),Sn={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},Xn=s("mdbx"),Cn=s(" \u662F\u57FA\u4E8E lmdb \u4E8C\u6B21\u5F00\u53D1\u7684\u6570\u636E\u5E93 \uFF0C\u4F5C\u8005\u662F\u4FC4\u7F57\u65AF\u4EBA "),An={href:"https://vk.com/erthink",target:"_blank",rel:"noopener noreferrer"},Nn=s("\u041B\u0435\u043E\u043D\u0438\u0434 \u042E\u0440\u044C\u0435\u0432 (Leonid Yuriev)"),Pn=s("\u3002"),On={href:"https://en.wikipedia.org/wiki/Lightning_Memory-Mapped_Database",target:"_blank",rel:"noopener noreferrer"},Un=s("lmdb"),In=s(" \u662F\u4E00\u4E2A\u8D85\u7EA7\u5FEB\u7684\u5D4C\u5165\u5F0F\u952E\u503C\u6570\u636E\u5E93\u3002"),Ln=s("\u5168\u6587\u641C\u7D22\u5F15\u64CE "),Fn={href:"https://docs.meilisearch.com/reference/under_the_hood/storage.html#measured-disk-usage",target:"_blank",rel:"noopener noreferrer"},zn=s("MeiliSearch"),Vn=s(" \u5C31\u662F\u57FA\u4E8E lmdb \u5F00\u53D1\u7684\u3002"),Yn={href:"https://docs.nvidia.com/deeplearning/dali/user-guide/docs/examples/general/data_loading/dataloading_lmdb.html",target:"_blank",rel:"noopener noreferrer"},$n=s("\u6DF1\u5EA6\u5B66\u4E60\u6846\u67B6 caffe \u4E5F\u7528 lmdb \u4F5C\u4E3A\u6570\u636E\u5B58\u50A8"),Gn=s("\u3002"),Kn={href:"https://github.com/erthink/libmdbx#added-features",target:"_blank",rel:"noopener noreferrer"},Wn=s("mdbx \u5728\u5D4C\u5165\u5F0F\u6027\u80FD\u6D4B\u8BD5\u57FA\u51C6 ioarena \u4E2D lmdb \u8FD8\u8981\u5FEB 30%"),jn=s(" \u3002"),Hn=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-1.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-3.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-4.png",alt:""}),n("br"),n("img",{src:"https://raw.githubusercontent.com/wiki/erthink/libmdbx/img/perf-slide-5.png",alt:""})],-1),Jn=s("\u4E0E\u6B64\u540C\u65F6\uFF0C"),Qn={href:"https://github.com/erthink/libmdbx#improvements-beyond-lmdb",target:"_blank",rel:"noopener noreferrer"},Zn=s("mdbx \u6539\u8FDB\u4E86\u4E0D\u5C11 lmdb \u7684\u7F3A\u61BE"),ns=s("\uFF0C\u56E0\u6B64 Erigon\uFF08\u4E0B\u4E00\u4EE3\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF\uFF09\u6700\u8FD1\u4ECE LMDB \u5207\u6362\u5230\u4E86 MDBX "),ss=n("sup",{class:"footnote-ref"},[n("a",{href:"#fn1",id:"fnref1"},"[1]")],-1),as=s(" \u3002"),ts=e(`<h2 id="\u4F7F\u7528\u6559\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6559\u7A0B" aria-hidden="true">#</a> \u4F7F\u7528\u6559\u7A0B</h2><h3 id="\u5982\u4F55\u8FD0\u884C\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u8FD0\u884C\u793A\u4F8B" aria-hidden="true">#</a> \u5982\u4F55\u8FD0\u884C\u793A\u4F8B</h3><p>\u9996\u5148\u514B\u9686\u4EE3\u7801\u5E93 <code>git clone git@github.com:rmw-lib/mdbx.git --depth=1 &amp;&amp; cd mdbx</code></p><p>\u7136\u540E\u8FD0\u884C <code>cargo run --example 01</code> \uFF0C\u5C31\u8FD0\u884C\u4E86 <code>examples/01.rs</code></p><p>\u5982\u679C\u662F\u81EA\u5DF1\u7684\u9879\u76EE\uFF0C\u8BF7\u5148\u8FD0\u884C :</p><div class="language-bash ext-sh"><pre class="language-bash"><code>cargo <span class="token function">install</span> cargo-edit
cargo <span class="token function">add</span> mdbx lazy_static ctor <span class="token function">paste</span>
</code></pre></div><h3 id="\u793A\u4F8B-1-\u5199-set-key-val-\u548C-\u8BFB-get-key" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-1-\u5199-set-key-val-\u548C-\u8BFB-get-key" aria-hidden="true">#</a> \u793A\u4F8B 1 : \u5199 <code>set(key,val)</code> \u548C \u8BFB <code>.get(key)</code></h3>`,7),ps=s("\u6211\u4EEC\u5148\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50 "),os={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/01.rs",target:"_blank",rel:"noopener noreferrer"},es=s("examples/01.rs"),cs=e(`<h4 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h4><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span>
  <span class="token constant">MDBX</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r<span class="token punctuation">,</span>
  w
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u6570\u636E\u5E93 Env \u7684\u53D8\u91CF\u540D</span>
  <span class="token class-name">Test</span> <span class="token comment">// \u6570\u636E\u5E93 Test</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8F93\u51FAlibmdbx\u7684\u7248\u672C\u53F7</span>
  <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
      <span class="token string">&quot;mdbx version https://github.com/erthink/libmdbx/releases/tag/v{}.{}.{}&quot;</span><span class="token punctuation">,</span>
      mdbx_version<span class="token punctuation">.</span>major<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>minor<span class="token punctuation">,</span> mdbx_version<span class="token punctuation">.</span>release
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u591A\u7EBF\u7A0B\u8BFB\u5199</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u8FD0\u884C\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u8F93\u51FA" aria-hidden="true">#</a> \u8FD0\u884C\u8F93\u51FA</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/01.mdb
mdbx version https://github.com/erthink/libmdbx/releases/tag/v0.11.2
test1 get Ok(Some(Bin([6])))
[6]
</code></pre></div><h4 id="\u4EE3\u7801\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u8BF4\u660E" aria-hidden="true">#</a> \u4EE3\u7801\u8BF4\u660E</h4><h5 id="env-rw-\u5B9A\u4E49\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#env-rw-\u5B9A\u4E49\u6570\u636E\u5E93" aria-hidden="true">#</a> <code>env_rw!</code> \u5B9A\u4E49\u6570\u636E\u5E93</h5><p>\u4EE3\u7801\u4E00\u5F00\u59CB\u4F7F\u7528\u4E86\u4E00\u4E2A\u5B8F env_rw\uFF0C\u8FD9\u4E2A\u5B8F\u6709 4 \u4E2A\u53C2\u6570\u3002</p>`,7),ls=n("li",null,[n("p",null,"\u6570\u636E\u5E93\u73AF\u5883\u7684\u53D8\u91CF\u540D")],-1),us=s("\u8FD4\u56DE\u4E00\u4E2A \u5BF9\u8C61\uFF0C"),is={href:"https://docs.rs/mdbx/latest/src/mdbx/env.rs.html#27-35",target:"_blank",rel:"noopener noreferrer"},ks=s("mdbx:: env:: Config"),rs=s(" \u3002"),ds=e(`<p>\u6211\u4EEC\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u56E0\u4E3A <code>Env</code> \u5B9E\u73B0\u4E86 <code>From&lt;Into&lt;PathBuf&gt;&gt;</code>\uFF0C\u6240\u4EE5\u6570\u636E\u5E93\u8DEF\u5F84 <code>into()</code> \u5373\u53EF\uFF0C\u9ED8\u8BA4\u914D\u7F6E\u5982\u4E0B\u3002</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Config</span> <span class="token punctuation">{</span>
  path<span class="token punctuation">:</span> <span class="token class-name">PathBuf</span><span class="token punctuation">,</span>
  mode<span class="token punctuation">:</span> <span class="token namespace">ffi<span class="token punctuation">::</span></span>mdbx_mode_t<span class="token punctuation">,</span>
  flag<span class="token punctuation">:</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">,</span>
  sync_period<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  sync_bytes<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  max_db<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
  pagesize<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token macro property">lazy_static!</span> <span class="token punctuation">{</span>
  <span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token constant">ENV_CONFIG_DEFAULT</span><span class="token punctuation">:</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">:</span><span class="token class-name">PathBuf</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token number">0o600</span><span class="token punctuation">,</span>
    <span class="token comment">//https://github.com/erthink/libmdbx/issues/248</span>
    sync_period <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span> <span class="token comment">// \u4EE5 1/65536 \u79D2\u4E3A\u5355\u4F4D</span>
    sync_bytes <span class="token punctuation">:</span> <span class="token number">65536</span><span class="token punctuation">,</span>
    max_db <span class="token punctuation">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
    flag <span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_EXCLUSIVE</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_LIFORECLAIM</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_COALESCE</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOMEMINIT</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_NOSUBDIR</span>
      <span class="token operator">|</span> <span class="token namespace">flag<span class="token punctuation">::</span></span><span class="token constant">ENV</span><span class="token punctuation">::</span><span class="token constant">MDBX_SAFE_NOSYNC</span>
      <span class="token comment">// | flag::ENV::MDBX_SYNC_DURABLE</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    pagesize<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),_s=n("code",null,"max_db",-1),hs=s(" \u662F\u6700\u5927\u7684\u6570\u636E\u5E93\u4E2A\u6570\uFF0C"),ms={href:"https://github.com/erthink/libmdbx",target:"_blank",rel:"noopener noreferrer"},bs=s("\u6700\u591A 32765 \u4E2A\u6570\u636E\u5E93"),gs=s("\uFF0C\u8FD9\u4E2A\u8BBE\u7F6E\u53EF\u4EE5\u5728\u6BCF\u6B21\u6253\u5F00\u6570\u636E\u5E93\u65F6\u91CD\u8BBE\uFF0C\u8BBE\u7F6E\u592A\u5927\u4F1A\u5F71\u54CD\u6027\u80FD\uFF0C\u6309\u9700\u8BBE\u7F6E\u5373\u53EF\u3002"),fs=s("\u5176\u4ED6\u53C2\u6570\u542B\u4E49\u53C2\u89C1 "),ys={href:"https://erthink.github.io/libmdbx/group__c__opening.html#ga9138119a904355d245777c4119534061",target:"_blank",rel:"noopener noreferrer"},xs=s("libmdbx \u7684\u6587\u6863"),ws=s(" \u3002"),vs=n("li",null,[n("p",null,[s("\u6570\u636E\u5E93\u8BFB\u4E8B\u52A1\u5B8F\u7684\u540D\u79F0\uFF0C\u9ED8\u8BA4\u503C\u4E3A "),n("code",null,"r")])],-1),Es=n("li",null,[n("p",null,[s("\u6570\u636E\u5E93\u5199\u4E8B\u52A1\u5B8F\u7684\u540D\u79F0\uFF0C\u9ED8\u8BA4\u503C\u4E3A "),n("code",null,"w")])],-1),Bs=e('<p>\u5176\u4E2D 3\u30014 \u53C2\u6570\u53EF\u4EE5\u7701\u7565\u4F7F\u7528\u9ED8\u8BA4\u503C\u3002</p><h5 id="\u5B8F\u5C55\u5F00" tabindex="-1"><a class="header-anchor" href="#\u5B8F\u5C55\u5F00" aria-hidden="true">#</a> \u5B8F\u5C55\u5F00</h5><p>\u5982\u679C\u60F3\u770B\u770B\u5B8F\u9B54\u6CD5\u5230\u5E95\u5E72\u4E86\u4EC0\u4E48\uFF0C\u53EF\u4EE5\u7528 <code>cargo expand --example 01</code> \u5B8F\u5C55\u5F00\uFF0C\u6B64\u6307\u4EE4\u9700\u8981\u5148\u5B89\u88C5 <code>cargo install cargo-expand</code></p><p>\u5C55\u5F00\u540E\u7684\u4EE3\u7801\u622A\u56FE\u5982\u4E0B\uFF1A</p><p><img src="//irmw.gumlet.io/PDzEtT.png" alt="PDzEtT"></p><h5 id="anyhow-\u548C-lazy-static" tabindex="-1"><a class="header-anchor" href="#anyhow-\u548C-lazy-static" aria-hidden="true">#</a> anyhow \u548C lazy_static</h5><p>\u4ECE\u5C55\u5F00\u540E\u7684\u622A\u56FE\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u4F7F\u7528\u4E86 <code>lazy_static</code> \u548C <code>anyhow</code>\u3002</p>',7),Ds={href:"https://rustmagazine.github.io/rust_magazine_2021/chapter_2/rust_error_handle.html#thiserror--anyhow",target:"_blank",rel:"noopener noreferrer"},qs=s("anyhow"),Ts=s(" \u662F rust \u7684\u9519\u8BEF\u5904\u7406\u5E93\u3002"),Ms={href:"https://juejin.cn/post/7007336922817232927",target:"_blank",rel:"noopener noreferrer"},Rs=s("lazy_static"),Ss=s(" \u662F\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u9759\u6001\u53D8\u91CF\u3002"),Xs=n("p",null,"\u8FD9\u4E24\u4E2A\u5E93\u5F88\u5E38\u89C1\uFF0C\u6211\u4E0D\u8D58\u8A00\u3002",-1),Cs=n("h5",{id:"\u5B8F-mdbx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B8F-mdbx","aria-hidden":"true"},"#"),s(" \u5B8F mdbx!")],-1),As={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html",target:"_blank",rel:"noopener noreferrer"},Ns=n("code",null,"mdbx!",-1),Ps=s(" \u662F\u4E00\u4E2A "),Os={href:"https://mp.weixin.qq.com/s/YT_HNFDCQ_IyocvBkRNJnA",target:"_blank",rel:"noopener noreferrer"},Us=s("\u8FC7\u7A0B\u5B8F"),Is=s("\u3002"),Ls=e(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
 <span class="token constant">MDBX</span> <span class="token comment">// \u6570\u636E\u5E93 Env \u7684\u53D8\u91CF\u540D</span>
 <span class="token class-name">Test</span> <span class="token comment">// \u6570\u636E\u5E93 Test</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7B2C\u4E00\u884C\u53C2\u6570\u662F\u6570\u636E\u5E93\u73AF\u5883\u7684\u53D8\u91CF\u540D</p><p>\u7B2C\u4E8C\u884C\u662F\u6570\u636E\u5E93\u7684\u540D\u79F0</p><p>\u6570\u636E\u5E93\u53EF\u6709\u591A\u4E2A\uFF0C\u6BCF\u4E2A\u4E00\u884C</p><h5 id="\u7EBF\u7A0B\u4E0E\u4E8B\u52A1" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u4E0E\u4E8B\u52A1" aria-hidden="true">#</a> \u7EBF\u7A0B\u4E0E\u4E8B\u52A1</h5><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u6F14\u793A\u4E86\u591A\u7EBF\u7A0B\u8BFB\u5199\u3002</p><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C<strong>\u540C\u4E00\u7EBF\u7A0B\u540C\u4E00\u65F6\u95F4\u53EA\u80FD\u6709\u4E00\u4E2A\u4E8B\u52A1\uFF0C\u5982\u679C\u67D0\u7EBF\u7A0B\u6253\u5F00\u4E86\u591A\u4E2A\u4E8B\u52A1\u4F1A\u7A0B\u5E8F\u4F1A\u5D29\u6E83</strong>\u3002</p><p>\u4E8B\u52A1\u4F1A\u5728\u4F5C\u7528\u57DF\u7ED3\u675F\u65F6\u63D0\u4EA4\u3002</p><h5 id="\u8BFB\u5199\u4E8C\u8FDB\u5236\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u5199\u4E8C\u8FDB\u5236\u6570\u636E" aria-hidden="true">#</a> \u8BFB\u5199\u4E8C\u8FDB\u5236\u6570\u636E</h5><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;test1 get {:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">{</span>
 <span class="token class-name">Some</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t<span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>val<span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,10),Fs=n("code",null,"set",-1),zs=s(" \u662F\u5199\uFF0C"),Vs=n("code",null,"get",-1),Ys=s(" \u662F\u8BFB\uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86 "),$s={href:"https://doc.rust-lang.org/std/convert/trait.AsRef.html",target:"_blank",rel:"noopener noreferrer"},Gs=n("code",null,"AsRef<[u8]>",-1),Ks=s(" \u7684\u5BF9\u8C61\u90FD\u53EF\u4EE5\u5199\u5165\u6570\u636E\u5E93\u3002"),Ws=n("p",null,[n("code",null,"get"),s(" \u51FA\u6765\u7684\u4E1C\u897F\u662F "),n("code",null,"Ok(Some(Bin([6])))"),s("\uFF0C\u53EF\u4EE5\u8F6C\u4E3A "),n("code",null,"&[u8]"),s("\u3002")],-1),js=n("h3",{id:"\u793A\u4F8B-2-\u6570\u636E\u7C7B\u578B\u3001\u6570\u636E\u5E93\u6807\u5FD7-\u3001\u5220\u9664\u3001\u904D\u5386",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u793A\u4F8B-2-\u6570\u636E\u7C7B\u578B\u3001\u6570\u636E\u5E93\u6807\u5FD7-\u3001\u5220\u9664\u3001\u904D\u5386","aria-hidden":"true"},"#"),s(" \u793A\u4F8B 2 : \u6570\u636E\u7C7B\u578B\u3001\u6570\u636E\u5E93\u6807\u5FD7 \u3001\u5220\u9664\u3001\u904D\u5386")],-1),Hs=s("\u6211\u4EEC\u6765\u770B\u7B2C\u4E8C\u4E2A\u4F8B\u5B50 "),Js={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},Qs=s("examples/02.rs"),Zs=s(" :"),na=e(`<p>\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<code>env_rw!</code> \u7701\u7565\u4E86\uFF0C\u7B2C\u4E09\u3001\u7B2C\u56DB\u4E2A\u53C2\u6570\uFF08<code>r</code>, <code>w</code>\uFF09\u3002</p><h4 id="\u4EE3\u7801-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801-1" aria-hidden="true">#</a> \u4EE3\u7801</h4><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span> <span class="token comment">// \u6570\u636E\u5E93ENV\u7684\u53D8\u91CF\u540D</span>
  <span class="token class-name">Test1</span>
  <span class="token class-name">Test2</span>
    key <span class="token class-name">Str</span>
    val <span class="token class-name">Str</span>
  <span class="token class-name">Test3</span>
    key <span class="token keyword">i32</span>
    val <span class="token keyword">u64</span>
  <span class="token class-name">Test4</span>
    key <span class="token keyword">u64</span>
    val <span class="token keyword">u16</span>
    flag <span class="token constant">DUPSORT</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5FEB\u6377\u5199\u5165</span>
  <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5FEB\u6377\u8BFB\u53D6</span>
  <span class="token keyword">match</span> <span class="token macro property">r!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>get <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;\\nu16::from_le_bytes({:?}) = {}&quot;</span><span class="token punctuation">,</span>
        r<span class="token punctuation">,</span>
        <span class="token keyword">u16</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728\u540C\u4E00\u4E2A\u4E8B\u52A1\u4E2D\u5BF9\u591A\u4E2A\u6570\u636E\u5E93\u8FDB\u884C\u591A\u4E2A\u64CD\u4F5C</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>

    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test1<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;rmw.link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down with Data Hegemony&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token string">&quot;012&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test2 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} = {}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test3 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test3</span><span class="token punctuation">;</span>

    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test3 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> test4 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test4</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>test4<span class="token punctuation">.</span><span class="token function">del_val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n-- loop test4 rev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?} = {:?}&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> test4<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;dup(16) {:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4E8B\u52A1\u4F1A\u5728\u4F5C\u7528\u57DF\u7684\u7ED3\u5C3E\u63D0\u4EA4</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u8FD0\u884C\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u8F93\u51FA-1" aria-hidden="true">#</a> \u8FD0\u884C\u8F93\u51FA</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/02.mdb

u16::from_le_bytes(Bin([4, 5])) = 1284

-- loop test1
[2] = [3]
[2, 3] = [4, 5]
[8, 1] = [9]
[9] = [10, 12]
[97, 98, 99] = [48, 49, 50]
[114, 109, 119, 46, 108, 105, 110, 107] = [68, 111, 119, 110, 32, 119, 105, 116, 104, 32, 68, 97, 116, 97, 32, 72, 101, 103, 101, 109, 111, 110, 121]
[examples/02.rs:57] test1.del_val([8, 1], [3])? = false
[examples/02.rs:58] test1.get([8, 1])?.unwrap() = Bin(
    [
        9,
    ],
)
[examples/02.rs:59] test1.del_val([8, 1], [9])? = true
[examples/02.rs:60] test1.get([8, 1])? = None
[examples/02.rs:62] test1.del([9])? = true
[examples/02.rs:63] test1.get([9])? = None
[examples/02.rs:64] test1.del([9])? = false

-- loop test2
abc = 012
rmw.link = Down with Data Hegemony

-- loop test3
0 = 6
10 = 5
13 = 32
16 = 32
-15 = 6
-12 = 6
-10 = 6
[examples/02.rs:100] test4.del_val(0, 2)? = true
[examples/02.rs:101] test4.del_val(0, 2)? = false

-- loop test4 rev
16 = 3
16 = 2
16 = 1
13 = 32
10 = 5
10 = 0
0 = 6
dup(16) 1
dup(16) 2
dup(16) 3
</code></pre></div><h4 id="\u5FEB\u6377\u8BFB\u5199" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u6377\u8BFB\u5199" aria-hidden="true">#</a> \u5FEB\u6377\u8BFB\u5199</h4><p>\u82E5\u53EA\u662F\u60F3\u7B80\u5355\u7684\u8BFB\u53D6\u6216\u5199\u5165\u5355\u884C\u6570\u636E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u5B8F\u7684\u8BED\u6CD5\u7CD6\u3002</p><p>\u8BFB\u6570\u636E</p><div class="language-text ext-text"><pre class="language-text"><code>r!(Test1.get [2, 3])
</code></pre></div><p>\u5199\u6570\u636E</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token class-name">Test1</span><span class="token punctuation">.</span>set <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div>`,11),sa=s("\u90FD\u4E00\u884C\u641E\u5B9A\uFF0C \u6B63\u5982 "),aa={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},ta=s("examples/02.rs"),pa=s(" \u5199\u7684\u90A3\u6837\u3002"),oa=n("h4",{id:"\u6570\u636E\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u636E\u7C7B\u578B","aria-hidden":"true"},"#"),s(" \u6570\u636E\u7C7B\u578B")],-1),ea=s("\u5728 "),ca={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},la=s("examples/02.rs"),ua=s(" \u4E2D\uFF0C\u6570\u636E\u5E93\u5B9A\u4E49\u662F\u8FD9\u6837\u7684 :"),ia=e(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token class-name">Test2</span>
  key <span class="token class-name">Str</span>
  val <span class="token class-name">Str</span>
<span class="token class-name">Test3</span>
  key <span class="token keyword">i32</span>
  val <span class="token keyword">u64</span>
<span class="token class-name">Test4</span>
  key <span class="token keyword">u64</span>
  val <span class="token keyword">u16</span>
  flag <span class="token constant">DUPSORT</span>
</code></pre></div><p>\u5176\u4E2D <code>key</code> \u548C <code>val</code> \u5206\u522B\u5B9A\u4E49\u4E86\u952E\u548C\u503C\u7684\u6570\u636E\u7C7B\u578B\u3002</p><p>\u5982\u679C\u8BD5\u56FE\u5199\u5165\u7684\u6570\u636E\u7C7B\u578B\u548C\u5B9A\u4E49\u7684\u4E0D\u5339\u914D\uFF0C\u4F1A\u62A5\u9519\uFF0C\u622A\u56FE\u5982\u4E0B :</p><p><img src="//irmw.gumlet.io/4rFTC6.png" alt=""></p>`,4),ka=s("\u9ED8\u8BA4\u7684\u6570\u636E\u7C7B\u578B\u662F "),ra={href:"https://docs.rs/mdbx/latest/mdbx/type/struct.Bin.html",target:"_blank",rel:"noopener noreferrer"},da=n("code",null,"Bin",-1),_a=s(" \uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86 "),ha=n("code",null,"AsRef<[u8]>",-1),ma=s(" \u7684\u6570\u636E\u90FD\u53EF\u4EE5\u5199\u5165\u3002"),ba=s("\u5982\u679C\u952E\u6216\u503C\u662F "),ga=n("code",null,"utf8",-1),fa=s(" \u5B57\u7B26\u4E32\uFF0C\u53EF\u8BBE\u7F6E\u6570\u636E\u7C7B\u578B\u4E3A "),ya={href:"https://docs.rs/mdbx/latest/mdbx/type/struct.Str.html",target:"_blank",rel:"noopener noreferrer"},xa=n("code",null,"Str",-1),wa=s(" \u3002"),va=s("\u5BF9 "),Ea=n("code",null,"Str",-1),Ba=s(),Da={href:"https://doc.rust-lang.org/std/ops/trait.Deref.html",target:"_blank",rel:"noopener noreferrer"},qa=s("\u89E3\u5F15\u7528"),Ta=s(" \u4F1A\u8FD4\u56DE\u5B57\u7B26\u4E32\uFF0C\u7C7B\u4F3C "),Ma=n("code",null,"let k:&str = &k;",-1),Ra=s("\u3002"),Sa=s("\u6B64\u5916\uFF0C"),Xa=n("code",null,"Str",-1),Ca=s(" \u8FD8\u5B9E\u73B0\u4E86 "),Aa={href:"https://doc.rust-lang.org/std/fmt/trait.Display.html",target:"_blank",rel:"noopener noreferrer"},Na=n("code",null,"std::fmt::Display",-1),Pa=s("\uFF0C"),Oa=n("code",null,'println!("{}",k)',-1),Ua=s(" \u65F6\u5C06\u8F93\u51FA\u53EF\u8BFB\u7684\u5B57\u7B26\u4E32\u3002"),Ia=n("h5",{id:"\u9884\u7F6E\u6570\u636E\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9884\u7F6E\u6570\u636E\u7C7B\u578B","aria-hidden":"true"},"#"),s(" \u9884\u7F6E\u6570\u636E\u7C7B\u578B")],-1),La=s("\u9664\u4E86 "),Fa=n("code",null,"Str",-1),za=s(" \u548C "),Va=n("code",null,"Bin",-1),Ya=s(" \uFF0C\u5C01\u88C5\u8FD8\u81EA\u5E26\u4E86\u5BF9 "),$a={href:"https://docs.rs/mdbx/latest/src/mdbx/type.rs.html#48",target:"_blank",rel:"noopener noreferrer"},Ga=s("usize, u128, u64, u32, u16, u8, isize, i128, i64, i32, i16, i8, f32, f64"),Ka=s(" \u7684\u6570\u636E\u652F\u6301\u3002"),Wa=n("h4",{id:"\u6570\u636E\u5E93\u6807\u5FD7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u636E\u5E93\u6807\u5FD7","aria-hidden":"true"},"#"),s(" \u6570\u636E\u5E93\u6807\u5FD7")],-1),ja=s("\u53EF\u4EE5\u770B\u5230 "),Ha={href:"https://github.com/rmw-lib/mdbx/blob/master/examples/02.rs",target:"_blank",rel:"noopener noreferrer"},Ja=s("examples/02.rs"),Qa=s(" \u4E2D "),Za=n("code",null,"Test4",-1),nt=s(" \u6570\u636E\u52A0\u4E0A\u4E86\u6570\u636E\u5E93\u6807\u5FD7 "),st=n("code",null,"flag DUPSORT",-1),at=s("libmdbx \u6570\u636E\u5E93\u6709\u5F88\u591A\u6807\u5FD7( "),tt={href:"https://erthink.github.io/libmdbx/group__c__dbi.html#gafe3bddb297b3ab0d828a487c5726f76a",target:"_blank",rel:"noopener noreferrer"},pt=n("code",null,"MDBX_db_flags_t",-1),ot=s(" ) \u53EF\u4EE5\u8BBE\u7F6E\u3002"),et=e('<ul><li>REVERSEKEY \u5BF9\u952E\u4F7F\u7528\u53CD\u5411\u5B57\u7B26\u4E32\u6BD4\u8F83\u3002\uFF08\u5F53\u4F7F\u7528\u5C0F\u7AEF\u7F16\u7801\u6570\u5B57\u4F5C\u4E3A\u952E\u7684\u65F6\u5019\u5F88\u6709\u7528\uFF09</li><li>DUPSORT \u4F7F\u7528\u6392\u5E8F\u7684\u91CD\u590D\u9879\uFF0C\u5373\u5141\u8BB8\u4E00\u4E2A\u952E\u6709\u591A\u4E2A\u503C\u3002</li><li>INTEGERKEY \u672C\u673A\u5B57\u8282\u987A\u5E8F\u7684\u6570\u5B57\u952E uint32_t \u6216 uint64_t\u3002\u952E\u7684\u5927\u5C0F\u5FC5\u987B\u76F8\u540C\uFF0C\u5E76\u4E14\u5728\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u65F6\u5FC5\u987B\u5BF9\u9F50\u3002</li><li>DUPFIXED \u4F7F\u7528 DUPSORT \u7684\u60C5\u51B5\u4E0B\uFF0C\u6570\u636E\u503C\u7684\u5927\u5C0F\u5FC5\u987B\u76F8\u540C\uFF08\u53EF\u4EE5\u5FEB\u901F\u7EDF\u8BA1\u503C\u7684\u4E2A\u6570\uFF09\u3002</li><li>INTEGERDUP \u9700\u4F7F\u7528 DUPSORT \u548C DUPFIXED\uFF1B\u503C\u662F\u6574\u6570\uFF08\u7C7B\u4F3C INTEGERKEY\uFF09\u3002\u6570\u636E\u503C\u5FC5\u987B\u5168\u90E8\u5177\u6709\u76F8\u540C\u7684\u5927\u5C0F\uFF0C\u5E76\u4E14\u5728\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u65F6\u5FC5\u987B\u5BF9\u9F50\u3002</li><li>REVERSEDUP \u4F7F\u7528 DUPSORT\uFF1B\u5BF9\u6570\u636E\u503C\u4F7F\u7528\u53CD\u5411\u5B57\u7B26\u4E32\u6BD4\u8F83\u3002</li><li>CREATE \u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u521B\u5EFA DB \uFF08\u9ED8\u8BA4\u5DF2\u52A0\u4E0A\uFF09\u3002</li><li>DB_ACCEDE \u6253\u5F00\u4F7F\u7528\u672A\u77E5\u6807\u5FD7\u521B\u5EFA\u7684\u73B0\u6709\u5B50\u6570\u636E\u5E93\u3002<br> \u8BE5 DB_ACCEDE \u6807\u5FD7\u65E8\u5728\u6253\u5F00\u4F7F\u7528\u672A\u77E5\u6807\u5FD7\uFF08REVERSEKEY\u3001DUPSORT\u3001INTEGERKEY\u3001DUPFIXED\u3001INTEGERDUP \u548C REVERSEDUP\uFF09\u521B\u5EFA\u7684\u73B0\u6709\u5B50\u6570\u636E\u5E93\u3002<br> \u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5B50\u6570\u636E\u5E93\u4E0D\u4F1A\u8FD4\u56DE INCOMPATIBLE \u9519\u8BEF\uFF0C\u800C\u662F\u4F7F\u7528\u521B\u5EFA\u5B83\u7684\u6807\u5FD7\u6253\u5F00\uFF0C\u7136\u540E\u5E94\u7528\u7A0B\u5E8F\u53EF\u4EE5\u901A\u8FC7 mdbx_dbi_flags()\u786E\u5B9A\u5B9E\u9645\u6807\u5FD7\u3002</li></ul><h5 id="dupsort-\u4E00\u4E2A\u952E\u5BF9\u5E94\u591A\u4E2A\u503C" tabindex="-1"><a class="header-anchor" href="#dupsort-\u4E00\u4E2A\u952E\u5BF9\u5E94\u591A\u4E2A\u503C" aria-hidden="true">#</a> DUPSORT : \u4E00\u4E2A\u952E\u5BF9\u5E94\u591A\u4E2A\u503C</h5><p><code>DUPSORT</code>\uFF0C\u610F\u5473\u7740\u4E00\u4E2A\u952E\u53EF\u4EE5\u5BF9\u5E94\u591A\u4E2A\u503C\u3002</p><p>\u5982\u679C\u8981\u8BBE\u7F6E\u591A\u4E2A\u6807\u5FD7\uFF0C\u5199\u6CD5\u5982 <code>flag DUPSORT | DUPFIXED</code></p><h5 id="dup-key-\u8FD4\u56DE\u67D0\u952E\u6240\u6709\u5BF9\u5E94\u7684\u503C\u7684\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#dup-key-\u8FD4\u56DE\u67D0\u952E\u6240\u6709\u5BF9\u5E94\u7684\u503C\u7684\u8FED\u4EE3\u5668" aria-hidden="true">#</a> <code>.dup(key)</code> \u8FD4\u56DE\u67D0\u952E\u6240\u6709\u5BF9\u5E94\u7684\u503C\u7684\u8FED\u4EE3\u5668</h5><p>\u53EA\u6709\u6807\u8BB0\u4E86 <code>DUPSORT</code> \u4E00\u4E2A\u952E\u53EF\u4EE5\u5BF9\u5E94\u591A\u4E2A\u503C\u7684\u6570\u636E\u5E93\uFF0C\u624D\u6709\u8FD9\u4E2A\u51FD\u6570\u3002</p><p>\u5BF9\u4E8E <code>DUPSORT</code> \u6570\u636E\u5E93\uFF0C<code>get</code> \u53EA\u8FD4\u56DE\u6B64\u952E\u7684\u7B2C\u4E00\u4E2A\u503C\u3002\u60F3\u83B7\u53D6\u6240\u6709\u503C\uFF0C\u8BF7\u7528 <code>dup</code>\u3002</p><h5 id="\u9ED8\u8BA4\u81EA\u52A8\u8FFD\u52A0\u7684\u6570\u636E\u5E93\u6807\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u81EA\u52A8\u8FFD\u52A0\u7684\u6570\u636E\u5E93\u6807\u5FD7" aria-hidden="true">#</a> \u9ED8\u8BA4\u81EA\u52A8\u8FFD\u52A0\u7684\u6570\u636E\u5E93\u6807\u5FD7</h5>',8),ct=s("\u5F53\u6570\u636E\u7C7B\u578B\u4E3A "),lt=n("code",null,"u32",-1),ut=s(" / "),it=n("code",null,"u64",-1),kt=s(" / "),rt=n("code",null,"usize",-1),dt=s(" \u7684\u65F6\u5019\uFF0C \u4F1A\u81EA\u52A8\u52A0\u4E0A\u6570\u636E\u5E93\u6807\u5FD7 "),_t={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html#105",target:"_blank",rel:"noopener noreferrer"},ht=n("code",null,"INTEGERKEY",-1),mt=s("\u3002"),bt=s("\u5728\u5C0F\u7AEF\u7F16\u7801\u7684\u673A\u5668\u4E0A\uFF0C\u5176\u4ED6\u6570\u5B57\u7C7B\u578B\u4F1A\u81EA\u52A8\u52A0\u4E0A "),gt={href:"https://docs.rs/mdbx-proc/latest/src/mdbx_proc/lib.rs.html#108",target:"_blank",rel:"noopener noreferrer"},ft=n("code",null,"REVERSEKEY",-1),yt=s("\u3002"),xt=e('<h4 id="\u5220\u9664\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6570\u636E" aria-hidden="true">#</a> \u5220\u9664\u6570\u636E</h4><h5 id="del-key-\u5220\u9664\u952E" tabindex="-1"><a class="header-anchor" href="#del-key-\u5220\u9664\u952E" aria-hidden="true">#</a> <code>.del(key)</code> \u5220\u9664\u952E</h5><p><code>.del(val)</code> \u4F1A\u5220\u9664\u67D0\u4E2A\u952E\u5BF9\u5E94\u7684\u503C\u3002</p><p>\u5982\u679C\u6570\u636E\u5E93\u6709\u6807\u5FD7 <code>DUPSORT</code>\uFF0C\u5C06\u4F1A\u5220\u9664\u8FD9\u4E2A\u952E\u4E0B\u7684\u6240\u6709\u503C\u3002</p><p>\u5982\u679C\u6709\u6570\u636E\u88AB\u5220\u9664\u7684\u65F6\u5019\u8FD4\u56DE <code>true</code>\uFF0C\u53CD\u4E4B\u8FD4\u56DE <code>false</code>\u3002</p><h5 id="del-val-key-val-\u7CBE\u786E\u5339\u914D\u7684\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#del-val-key-val-\u7CBE\u786E\u5339\u914D\u7684\u5220\u9664" aria-hidden="true">#</a> <code>.del_val(key,val)</code> \u7CBE\u786E\u5339\u914D\u7684\u5220\u9664</h5><p><code>.del_val(key,val)</code> \u4F1A\u5220\u9664\u548C\u8F93\u5165\u53C2\u6570\u5B8C\u5168\u4E00\u81F4\u952E\u503C\u5BF9\u3002</p><p>\u5982\u679C\u6709\u6570\u636E\u88AB\u5220\u9664\u7684\u65F6\u5019\u8FD4\u56DE <code>true</code>\uFF0C\u53CD\u4E4B\u8FD4\u56DE <code>false</code>\u3002</p><h4 id="\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386" aria-hidden="true">#</a> \u904D\u5386</h4><h5 id="\u987A\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u987A\u5E8F\u904D\u5386</h5>',10),wt=s("\u56E0\u4E3A\u5B9E\u73B0\u4E86 "),vt={href:"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html",target:"_blank",rel:"noopener noreferrer"},Et=n("code",null,"std::iter::IntoIterator",-1),Bt=s(" \uFF0C\u53EF\u4EE5\u76F4\u63A5\u5982\u4E0B\u904D\u5386 :"),Dt=n("p",null,[n("code",null,"for (k, v) in test1")],-1),qt=n("h5",{id:"rev-\u5012\u5E8F\u904D\u5386",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rev-\u5012\u5E8F\u904D\u5386","aria-hidden":"true"},"#"),s(),n("code",null,".rev()"),s(" \u5012\u5E8F\u904D\u5386")],-1),Tt=n("p",null,[n("code",null,"for (k, v) in test4.rev()")],-1),Mt=n("h5",{id:"\u6392\u5E8F\u65B9\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6392\u5E8F\u65B9\u5F0F","aria-hidden":"true"},"#"),s(" \u6392\u5E8F\u65B9\u5F0F")],-1),Rt=s("libmdbx \u7684\u952E\u503C\u90FD\u662F\u6309 "),St={href:"https://zh.wikipedia.org/wiki/%E5%AD%97%E5%85%B8%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"},Xt=s("\u5B57\u5178\u5E8F"),Ct=s(" \u6392\u5217\u7684\u3002"),At=e(`<ul><li><p>\u5BF9\u4E8E\u65E0\u7B26\u53F7\u6570\u5B57</p><p>\u56E0\u4E3A\u81EA\u52A8\u52A0\u4E0A\u4E86\u6570\u636E\u5E93\u6807\u5FD7\uFF08 <code>u32</code>/<code>u64</code>/<code>usize</code> \u4F1A\u52A0\u4E0A <code>INTEGERKEY</code>\uFF0C\u5176\u4ED6\u6839\u636E\u673A\u5668\u7F16\u7801\u81EA\u52A8\u5224\u65AD\u662F\u5426\u52A0\u4E0A <code>REVERSEKEY</code> \uFF09 \uFF0C\u4F1A\u6309\u6570\u5B57\u4ECE\u5C0F\u5230\u5927\u7684\u987A\u5E8F\u6392\u5217\u3002</p></li><li><p>\u5BF9\u4E8E\u6709\u7B26\u53F7\u6570\u5B57</p><p>\u987A\u5E8F\u662F\uFF1A0 \u5728\u7B2C\u4E00\u4E2A\uFF0C\u7136\u540E\u4ECE\u5C0F\u5230\u5927\u904D\u5386\u6240\u6709\u6B63\u6570\uFF0C\u7136\u540E\u4ECE\u5C0F\u5230\u5927\u904D\u5386\u6240\u6709\u8D1F\u6570\u3002</p></li></ul><h3 id="\u533A\u95F4\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u533A\u95F4\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u533A\u95F4\u8FED\u4EE3\u5668</h3><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mdbx file path {}&quot;</span><span class="token punctuation">,</span> db_path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test0</span>
  <span class="token class-name">Test1</span>
    key <span class="token keyword">u16</span>
    val <span class="token keyword">u64</span>
    flag <span class="token constant">DUPSORT</span>
  <span class="token class-name">Test2</span>
    key <span class="token keyword">u32</span>
    val <span class="token keyword">u64</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range_rev <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.rev_range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range_rev</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">macro_rules!</span> range <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">ident</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">:</span><span class="token fragment-specifier punctuation">expr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n# {}.range({:?})&quot;</span><span class="token punctuation">,</span> <span class="token macro property">stringify!</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable">$var</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test0 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test0</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test0<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> begin<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test0<span class="token punctuation">,</span> begin<span class="token punctuation">..=</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> test1 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test1</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;-- all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> test1 <span class="token punctuation">{</span>
      <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test1<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&gt; Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token constant">MDBX</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> test2 <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test2</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    test2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">range_rev!</span><span class="token punctuation">(</span>test2<span class="token punctuation">,</span> <span class="token punctuation">..=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u8FD0\u884C\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u8F93\u51FA-2" aria-hidden="true">#</a> \u8FD0\u884C\u8F93\u51FA</h4><div class="language-text ext-text"><pre class="language-text"><code>mdbx file path /Users/z/rmw/mdbx/target/debug/examples/range.mdb

&gt; Test0

# test0.range([1]..)
(Bin([1]), Bin([1, 2]))
(Bin([1, 1]), Bin([1, 3]))
(Bin([1, 2]), Bin([1, 3]))
(Bin([2]), Bin([2, 3]))
(Bin([3]), Bin([]))

# test0.range([1, 1]..=[2])
(Bin([1, 1]), Bin([1, 3]))
(Bin([1, 2]), Bin([1, 3]))
(Bin([2]), Bin([2, 3]))
-- all
(2, 4)
(2, 9)
(3, 0)
(3, 8)
(5, 3)
(5, 8)
(9, 1)
(9, 2)
(9, 7)

# test1.range(1..3)
(2, 4)
(2, 9)

# test1.range(5..2)
(5, 8)
(5, 3)
(3, 8)
(3, 0)

# test1.range(1..=3)
(2, 4)
(2, 9)
(3, 0)
(3, 8)

# test1.range(..3)
(2, 4)
(2, 9)

# test1.range(3..)
(3, 0)
(3, 8)
(5, 3)
(5, 8)
(9, 1)
(9, 2)
(9, 7)

# test1.rev_range(..1)
(9, 7)
(9, 2)
(9, 1)
(5, 8)
(5, 3)
(3, 8)
(3, 0)
(2, 9)
(2, 4)

# test1.rev_range(..=1)
(9, 7)
(9, 2)
(9, 1)
(5, 8)
(5, 3)
(3, 8)
(3, 0)
(2, 9)
(2, 4)

&gt; Test2

# test2.range(1..3)
(1, 5)
(2, 4)

# test2.range(1..=3)
(1, 5)
(2, 4)

# test2.range(..3)
(0, 0)
(1, 5)
(2, 4)

# test2.range(2..)
(2, 4)
(9, 1)

# test2.rev_range(..1)
(9, 1)
(2, 4)

# test2.rev_range(2..)
(2, 4)
(1, 5)
(0, 0)

# test2.rev_range(..=1)
(9, 1)
(2, 4)
(1, 5)
</code></pre></div><h4 id="range-begin-end-\u533A\u95F4\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#range-begin-end-\u533A\u95F4\u8FED\u4EE3" aria-hidden="true">#</a> <code>.range(begin..end)</code> \u533A\u95F4\u8FED\u4EE3</h4><p>\u5BF9\u4E8E\u6570\u5B57\u6765\u8BF4\uFF0C\u533A\u95F4\u5C31\u662F\u6570\u5B57\u533A\u95F4\u3002</p><p>\u5BF9\u4E8E\u4E8C\u8FDB\u5236\u6765\u8BF4\uFF0C\u4E00\u6837\u53EF\u4EE5\u6784\u5EFA\u533A\u95F4\uFF0C\u5982\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>let begin : &amp;[u8] = &amp;[1,1];
for (k,v) in test0.range(begin..=&amp;[2]) {}
</code></pre></div><p>\u5982\u679C <code>begin</code> \u5927\u4E8E <code>end</code>\uFF0C\u5C06\u4F1A\u5012\u5E8F\u8FED\u4EE3\u3002</p><p>\u6BD4\u5982 <code>test1.range(5..2)</code> \u8F93\u51FA\u5982\u4E0B :</p><div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre></div>`,12),Nt=s("\u533A\u95F4\u8FED\u4EE3\u4E0D\u652F\u6301 "),Pt={href:"https://doc.rust-lang.org/std/ops/struct.RangeFull.html",target:"_blank",rel:"noopener noreferrer"},Ot=n("code",null,"RangeFull",-1),Ut=s("\uFF0C\u4E5F\u5C31\u662F\u4E0D\u652F\u6301\u7528 "),It=n("code",null,"..",-1),Lt=s("\uFF0C\u8BF7\u6539\u7528\u4E0A\u6587\u63D0\u5230\u7684 "),Ft=n("a",{href:"#%E9%81%8D%E5%8E%86"},"\u904D\u5386",-1),zt=s(" \u3002"),Vt=e(`<h4 id="rev-range-\u5012\u5E8F\u533A\u95F4" tabindex="-1"><a class="header-anchor" href="#rev-range-\u5012\u5E8F\u533A\u95F4" aria-hidden="true">#</a> <code>.rev_range</code> \u5012\u5E8F\u533A\u95F4</h4><p>\u5982\u679C\u60F3\u83B7\u53D6\u5C0F\u4E8E\u7B49\u4E8E\u67D0\u4E2A\u503C\u7684\u5012\u5E8F\u533A\u95F4\uFF0C\u53EF\u4EE5\u8FD9\u6837</p><div class="language-text ext-text"><pre class="language-text"><code>test2.rev_range(2..)
</code></pre></div><p>\u5C06\u8F93\u51FA</p><div class="language-text ext-text"><pre class="language-text"><code>(2, 4)
(1, 5)
(0, 0)
</code></pre></div><p>\u5012\u5E8F\u533A\u95F4\u7684 <code>begin</code> \u6216 <code>end</code> \u5FC5\u987B\u6709\u4E00\u4E2A\u4E0D\u8BBE\u7F6E\uFF1B\u56E0\u4E3A\u5982\u679C\u540C\u65F6\u8BBE\u7F6E\uFF0C\u4F60\u603B\u662F\u53EF\u4EE5\u7528 <code>range(end..begin)</code> \u6765\u5B9E\u73B0\u540C\u6837\u7684\u6548\u679C\u3002</p><h3 id="\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B</h3>`,7),Yt=s("\u6F14\u793A\u4EE3\u7801\u89C1 "),$t={href:"https://github.com/rmw-lib/mdbx-example/blob/master/01/src/main.rs",target:"_blank",rel:"noopener noreferrer"},Gt=s("github.com/rmw-lib/mdbx-example/01"),Kt=e(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
    <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span><span class="token class-name">City</span><span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token macro property">env_rw!</span><span class="token punctuation">(</span><span class="token constant">MDBX</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> db_path <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>env<span class="token punctuation">::</span></span><span class="token function">current_exe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">set_extension</span><span class="token punctuation">(</span><span class="token string">&quot;mdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db_path<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">mdbx!</span> <span class="token punctuation">{</span>
  <span class="token constant">MDBX</span>
  <span class="token class-name">Test</span>
    key <span class="token keyword">u16</span>
    val <span class="token class-name">City</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">&quot;BeiJing&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">11640</span><span class="token punctuation">,</span> <span class="token number">3990</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token macro property">w!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> test <span class="token operator">=</span> tx <span class="token operator">|</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>
  test<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\u5982\u4E0B</p><div class="language-text ext-text"><pre class="language-text"><code>Some(City { name: &quot;BeiJing&quot;, lnglat: (11640, 3990) })
</code></pre></div>`,3),Wt=s("\u5728\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528 "),jt={href:"https://github.com/koute/speedy",target:"_blank",rel:"noopener noreferrer"},Ht=n("code",null,"speedy",-1),Jt=s(" \u505A\u5E8F\u5217\u5316\uFF08"),Qt={href:"https://github.com/djkoloski/rust_serialization_benchmark",target:"_blank",rel:"noopener noreferrer"},Zt=n("code",null,"speedy",-1),np=s(" \u6027\u80FD\u8BC4\u6D4B"),sp=s("\uFF09\u3002"),ap=s("\u81EA\u5B9A\u4E49\u7C7B\u578B\u5B9E\u73B0 "),tp={href:"https://docs.rs/mdbx/latest/mdbx/type/trait.FromMdbx.html",target:"_blank",rel:"noopener noreferrer"},pp=n("code",null,"FromMdbx",-1),op=s(" \u548C "),ep={href:"https://docs.rs/mdbx/latest/mdbx/type/trait.ToAsRef.html",target:"_blank",rel:"noopener noreferrer"},cp=n("code",null,"ToAsRef",-1),lp=s(" \u540E\u5C31\u53EF\u4EE5\u88AB\u5B58\u5165 "),up=n("code",null,"mdbx",-1),ip=s(" \u4E86\u3002"),kp=s("\u5982\u679C\u4F60\u4F7F\u7528\u67D0\u79CD\u7279\u5B9A\u7684\u5E8F\u5217\u5316\u5E93\uFF0C\u8FD8\u53EF\u4EE5\u81EA\u5B9A\u4E49 "),rp={href:"https://blog.logrocket.com/macros-in-rust-a-tutorial-with-examples/",target:"_blank",rel:"noopener noreferrer"},dp=s("\u5C5E\u6027\u5F0F\u5B8F"),_p=s(" \u6765\u7B80\u5316\u6574\u4E2A\u6D41\u7A0B\u3002"),hp=n("h4",{id:"\u7528\u5C5E\u6027\u5F0F\u5B8F\u7B80\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7528\u5C5E\u6027\u5F0F\u5B8F\u7B80\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B","aria-hidden":"true"},"#"),s(" \u7528\u5C5E\u6027\u5F0F\u5B8F\u7B80\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B")],-1),mp=s("\u5B9E\u73B0\u4E00\u4E2A\u5C5E\u6027\u5B8F\u5F88\u7B80\u5355\uFF0C\u6BD4\u5982 "),bp={href:"https://crates.io/crates/mdbx_speedy",target:"_blank",rel:"noopener noreferrer"},gp=n("code",null,"mdbx_speedy",-1),fp=s(" \u5C5E\u6027\u5F0F\u5B8F\u4EE3\u7801\u5982\u4E0B :"),yp=e(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">proc_macro</span><span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">syn</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[macro_use]</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">quote</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">proc_macro<span class="token punctuation">::</span></span><span class="token class-name">TokenStream</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[proc_macro_derive(MdbxSpeedy)]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mdbx_speedy</span><span class="token punctuation">(</span>ts<span class="token punctuation">:</span> <span class="token class-name">TokenStream</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">TokenStream</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ast<span class="token punctuation">:</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token class-name">DeriveInput</span> <span class="token operator">=</span> <span class="token namespace">syn<span class="token punctuation">::</span></span><span class="token function">parse</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token operator">&amp;</span>ast<span class="token punctuation">.</span>ident<span class="token punctuation">;</span>
  <span class="token macro property">quote!</span> <span class="token punctuation">{</span>
    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">FromMdbx</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">from_mdbx</span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">PtrTx</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">MDBX_val</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">read_from_buffer</span><span class="token punctuation">(</span><span class="token macro property">val_bytes!</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">impl</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token class-name">ToAsRef</span><span class="token operator">&lt;</span>#name<span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span> <span class="token keyword">for</span> #name <span class="token punctuation">{</span>
      <span class="token keyword">fn</span> <span class="token function-definition function">to_as_ref</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">write_to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),xp=s("\u5728\u81EA\u5DF1\u7684\u9879\u76EE\u4E2D\u5148 "),wp=n("code",null,"cargo add mdbx-speedy",-1),vp=s("\uFF0C \u7136\u540E\u5C31\u53EF\u4EE5\u5FEB\u901F\u81EA\u5B9A\u4E49\u7C7B\u578B\u4E86 ( \u6F14\u793A\u4EE3\u7801\u89C1 "),Ep={href:"https://github.com/rmw-lib/mdbx-example/blob/master/02/src/main.rs",target:"_blank",rel:"noopener noreferrer"},Bp=s("github.com/rmw-lib/mdbx-example/02"),Dp=s(" )\u3002"),qp=e(`<div class="language-rust ext-rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anyhow<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mdbx_speedy<span class="token punctuation">::</span></span><span class="token class-name">MdbxSpeedy</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">speedy<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Readable</span><span class="token punctuation">,</span> <span class="token class-name">Writable</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(PartialEq, Debug, Readable, Writable, MdbxSpeedy)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">City</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
  lnglat<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Tp=s("\u5F53\u7136\u91CD\u590D\u5199 "),Mp=n("code",null,"#[derive(PartialEq, Debug, Readable, Writable, MdbxSpeedy)]",-1),Rp=s(" \u8FD8\u662F\u5F88\u70E6\u4EBA\uFF0C\u53EF\u4EE5\u7528 "),Sp={href:"https://docs.rs/derive-alias/0.1.0/derive_alias",target:"_blank",rel:"noopener noreferrer"},Xp=n("code",null,"derive_alias",-1),Cp=s(" \u8FDB\u4E00\u6B65\u7B80\u5316\u4EE3\u7801\u3002"),Ap=e('<h2 id="\u4F7F\u7528\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6CE8\u610F" aria-hidden="true">#</a> \u4F7F\u7528\u6CE8\u610F</h2><h3 id="\u952E\u7684\u957F\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u952E\u7684\u957F\u5EA6" aria-hidden="true">#</a> \u952E\u7684\u957F\u5EA6</h3><ul><li>\u6700\u5C0F 0\uFF0C\u6700\u5927\u2248\xBD\u9875\u5927\u5C0F\uFF08\u9ED8\u8BA4 4K \u9875\u952E\u6700\u5927\u5927\u5C0F\u4E3A 2022 \u5B57\u8282\uFF09\uFF0C\u521D\u59CB\u5316\u6570\u636E\u5E93\u65F6\u8BBE\u7F6E <code>pagesize</code> \u53EF\u4EE5\u914D\u7F6E\uFF0C\u4E0D\u8D85\u8FC7 <code>65536</code>\uFF0C\u9700\u8981\u662F 2 \u7684\u5E42\u500D\u6570\u3002</li></ul><h2 id="\u811A\u6CE8" tabindex="-1"><a class="header-anchor" href="#\u811A\u6CE8" aria-hidden="true">#</a> \u811A\u6CE8</h2><p>\u4ED6\u4EEC\u5217\u4E3E\u4E86\u4ECE LMDB \u8FC7\u6E21\u5230 MDBX \u7684\u597D\u5904\uFF1A</p>',5),Np=n("p",null,"Erigon \u5F00\u59CB\u4F7F\u7528 BoltDB \u6570\u636E\u5E93\u540E\u7AEF\uFF0C\u7136\u540E\u589E\u52A0\u4E86\u5BF9 BadgerDB \u7684\u652F\u6301\uFF0C\u6700\u540E\u5B8C\u5168\u8FC1\u79FB\u5230 LMDB\u3002\u5728\u67D0\u4E9B\u65F6\u5019\uFF0C\u6211\u4EEC\u9047\u5230\u4E86\u7A33\u5B9A\u6027\u95EE\u9898\uFF0C\u8FD9\u4E9B\u95EE\u9898\u662F\u7531\u6211\u4EEC\u5BF9 LMDB \u7684\u4F7F\u7528\u5F15\u8D77\u7684\uFF0C\u800C\u8FD9\u4E9B\u95EE\u9898\u662F\u521B\u9020\u8005\u6CA1\u6709\u9884\u6599\u5230\u7684\u3002\u4ECE\u90A3\u65F6\u8D77\uFF0C\u6211\u4EEC\u4E00\u76F4\u5728\u5173\u6CE8\u4E00\u4E2A\u652F\u6301\u826F\u597D\u7684 LMDB \u7684\u884D\u751F\u4EA7\u54C1\uFF0C\u79F0\u4E3A MDBX\uFF0C\u5E76\u5E0C\u671B\u4F7F\u7528\u4ED6\u4EEC\u7684\u7A33\u5B9A\u6027\u6539\u8FDB\uFF0C\u5E76\u6709\u53EF\u80FD\u5728\u672A\u6765\u8FDB\u884C\u66F4\u591A\u7684\u5408\u4F5C\u3002MDBX \u7684\u6574\u5408\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u73B0\u5728\u662F\u65F6\u5019\u8FDB\u884C\u66F4\u591A\u7684\u6D4B\u8BD5\u548C\u8BB0\u5F55\u4E86\u3002",-1),Pp=n("p",null,"\u4ECE LMDB \u8FC7\u6E21\u5230 MDBX \u7684\u597D\u5904\uFF1A",-1),Op=n("li",null,[n("p",null,'\u6570\u636E\u5E93\u6587\u4EF6\u7684\u589E\u957F "\u7A7A\u95F4(geometry)" \u5DE5\u4F5C\u6B63\u5E38\u3002\u8FD9\u4E00\u70B9\u5F88\u91CD\u8981\uFF0C\u5C24\u5176\u662F\u5728 Windows \u4E0A\u3002\u5728 LMDB \u4E2D\uFF0C\u4EBA\u4EEC\u5FC5\u987B\u4E8B\u5148\u6307\u5B9A\u4E00\u6B21\u5185\u5B58\u6620\u5C04\u5927\u5C0F\uFF08\u76EE\u524D\u6211\u4EEC\u9ED8\u8BA4\u4F7F\u7528 2Tb\uFF09\uFF0C\u5982\u679C\u6570\u636E\u5E93\u6587\u4EF6\u7684\u589E\u957F\u8D85\u8FC7\u8FD9\u4E2A\u9650\u5236\uFF0C\u5C31\u5FC5\u987B\u91CD\u65B0\u542F\u52A8\u8FD9\u4E2A\u8FC7\u7A0B\u3002\u5728 Windows \u4E0A\uFF0C\u5C06\u5185\u5B58\u6620\u5C04\u5927\u5C0F\u8BBE\u7F6E\u4E3A 2Tb \u4F1A\u4F7F\u6570\u636E\u5E93\u6587\u4EF6\u4E00\u5F00\u59CB\u5C31\u6709 2Tb \u5927\uFF0C\u8FD9\u4E0D\u662F\u5F88\u65B9\u4FBF\u3002\u5728 MDBX \u4E2D\uFF0C\u5185\u5B58\u6620\u5C04\u5927\u5C0F\u662F\u4EE5 2Gb \u4E3A\u5355\u4F4D\u9012\u589E\u7684\u3002\u8FD9\u610F\u5473\u7740\u5076\u5C14\u7684\u91CD\u65B0\u6620\u5C04\uFF0C\u4F46\u4F1A\u5E26\u6765\u66F4\u597D\u7684\u7528\u6237\u4F53\u9A8C\u3002')],-1),Up=n("li",null,[n("p",null,[s("MDBX \u5BF9\u4E8B\u52A1\u5904\u7406\u7684\u5E76\u53D1\u4F7F\u7528\u6709\u66F4\u4E25\u683C\u7684\u68C0\u67E5\uFF0C\u4EE5\u53CA\u5728\u540C\u4E00\u6267\u884C\u7EBF\u7A0B\u4E2D\u7684\u91CD\u53E0\u8BFB\u5199\u4E8B\u52A1\u3002\u8FD9\u4F7F\u6211\u4EEC\u80FD\u591F\u53D1\u73B0\u4E00\u4E9B\u975E\u660E\u663E\u7684\u9519\u8BEF\uFF0C\u5E76\u4F7F\u884C\u4E3A\u66F4\u53EF\u9884\u6D4B\u3002"),n("br"),s(" \u5728\u8D85\u8FC7 5 \u5E74\u7684\u65F6\u95F4\u91CC\uFF08\u81EA\u4ECE\u5B83\u4ECE LMDB \u4E2D\u5206\u79BB\u51FA\u6765\uFF09\uFF0CMDBX \u79EF\u7D2F\u4E86\u5927\u91CF\u7684\u5B89\u5168\u4FEE\u590D\u548C heisenbug \u4FEE\u590D\uFF0C\u636E\u6211\u4EEC\u6240\u77E5\uFF0C\u8FD9\u4E9B\u4FEE\u590D\u4ECD\u7136\u5B58\u5728\u4E8E LMDB \u4E2D\u3002\u5176\u4E2D\u4E00\u4E9B\u662F\u6211\u4EEC\u5728\u6D4B\u8BD5\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u7684\uFF0C\u800C MDBX \u7684\u7EF4\u62A4\u8005\u4E5F\u8BA4\u771F\u5BF9\u5F85\uFF0C\u5E76\u53CA\u65F6\u8FDB\u884C\u4E86\u4FEE\u590D\u3002")])],-1),Ip=s('\u5F53\u6D89\u53CA\u5230\u4E0D\u65AD\u4FEE\u6539\u6570\u636E\u7684\u6570\u636E\u5E93\u65F6\uFF0C\u5B83\u4EEC\u4F1A\u4EA7\u751F\u76F8\u5F53\u591A\u7684\u53EF\u56DE\u6536\u7A7A\u95F4\uFF08\u5728 LMDB \u672F\u8BED\u4E2D\u4E5F\u88AB\u79F0\u4E3A "freelist"\uFF09\u3002\u6211\u4EEC\u4E0D\u5F97\u4E0D\u7ED9 LMDB \u6253\u4E0A\u8865\u4E01\uFF0C\u4EE5\u4FEE\u590D\u5728\u5904\u7406\u53EF\u56DE\u6536\u7A7A\u95F4\u65F6\u6700\u4E25\u91CD\u7684\u7F3A\u70B9 '),Lp={href:"https://github.com/ledgerwatch/erigon/wiki/LMDB-freelist-illustrated-guide",target:"_blank",rel:"noopener noreferrer"},Fp=s("\uFF08\u5206\u6790\uFF09"),zp=s(" \u3002"),Vp={href:"https://github.com/ledgerwatch/erigon/wiki/LMDB-freelist-illustrated-guide%EF%BC%89%E3%80%82MDBX%E5%AF%B9%E5%8F%AF%E5%9B%9E%E6%94%B6%E7%A9%BA%E9%97%B4%E7%9A%84%E6%9C%89%E6%95%88%E5%A4%84%E7%90%86%E8%BF%9B%E8%A1%8C%E4%BA%86%E7%89%B9%E5%88%AB%E7%9A%84%E5%85%B3%E6%B3%A8%EF%BC%8C%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E8%BF%98%E4%B8%8D%E9%9C%80%E8%A6%81%E6%89%93%E8%A1%A5%E4%B8%81%E3%80%82",target:"_blank",rel:"noopener noreferrer"},Yp=s("MDBX \u5BF9\u53EF\u56DE\u6536\u7A7A\u95F4\u7684\u6709\u6548\u5904\u7406\u8FDB\u884C\u4E86\u7279\u522B\u7684\u5173\u6CE8\uFF0C\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u8FD8\u4E0D\u9700\u8981\u6253\u8865\u4E01\u3002"),$p=n("li",null,[n("p",null,"\u6839\u636E\u6211\u4EEC\u7684\u6D4B\u8BD5\uFF0CMDBX \u5728\u6211\u4EEC\u7684\u5DE5\u4F5C\u8D1F\u8F7D\u4E0A\u8868\u73B0\u5F97\u7A0D\u5FAE\u597D\u4E00\u4E9B\u3002")],-1),Gp=n("li",null,[n("p",null,'MDBX \u66B4\u9732\u4E86\u66F4\u591A\u7684\u5185\u90E8\u9065\u6D4B\u6570\u636E \u2014 \u66F4\u591A\u5173\u4E8E\u6570\u636E\u5E93\u5185\u90E8\u53D1\u751F\u7684\u6307\u6807\u3002\u800C\u6211\u4EEC\u5728 Grafana \u4E2D\u62E5\u6709\u8FD9\u4E9B\u6570\u636E \u2014 \u4EE5\u4FBF\u5728\u5E94\u7528\u8BBE\u8BA1\u4E0A\u505A\u51FA\u66F4\u597D\u7684\u51B3\u5B9A\u3002\u4F8B\u5982\uFF0C\u5728\u5B8C\u5168\u8FC7\u6E21\u5230 MDBX \u4E4B\u540E\uFF08\u79FB\u9664\u5BF9 LMDB \u7684\u652F\u6301\uFF09\uFF0C\u6211\u4EEC\u5C06\u5B9E\u65BD "\u63D0\u4EA4\u534A\u6EE1\u4E8B\u52A1 " \u7B56\u7565\uFF0C\u4EE5\u907F\u514D\u6EA2\u51FA/\u672A\u6EA2\u51FA\u7684\u78C1\u76D8\u63A5\u89E6\u3002\u8FD9\u5C06\u8FDB\u4E00\u6B65\u7B80\u5316\u6211\u4EEC\u7684\u4EE3\u7801\uFF0C\u800C\u4E0D\u5F71\u54CD\u6027\u80FD\u3002')],-1),Kp=n("li",null,[n("p",null,'MDBX \u652F\u6301 "Exclusive open " \u6A21\u5F0F--\u6211\u4EEC\u5C06\u5176\u7528\u4E8E\u6570\u636E\u5E93\u8FC1\u79FB\uFF0C\u4EE5\u9632\u6B62\u4EFB\u4F55\u5176\u4ED6\u8BFB\u8005\u5728\u6570\u636E\u5E93\u8FC1\u79FB\u8FC7\u7A0B\u4E2D\u8BBF\u95EE\u6570\u636E\u5E93\u3002')],-1),Wp=n("hr",{class:"footnotes-sep"},null,-1),jp={class:"footnotes"},Hp={class:"footnotes-list"},Jp={id:"fn1",class:"footnote-item"},Qp={href:"https://github.com/ledgerwatch/erigon/wiki/Criteria-for-transitioning-from-Alpha-to-Beta#switch-from-lmdb-to-mdbx",target:"_blank",rel:"noopener noreferrer"},Zp=s("Erigon\uFF08\u4E0B\u4E00\u4EE3\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF\uFF09\u6700\u8FD1\u4ECE LMDB \u5207\u6362\u5230\u4E86 MDBX\u3002"),no=s(),so=n("a",{href:"#fnref1",class:"footnote-backref"},"\u21A9\uFE0E",-1);function ao(to,po){const t=c("ExternalLinkIcon"),p=c("RouterLink");return u(),i(k,null,[d,n("p",null,[n("a",_,[h,a(t)]),m,b,g]),f,y,n("nav",x,[n("ul",null,[n("li",null,[a(p,{to:"#\u5F15\u5B50"},{default:o(()=>[w]),_:1})]),n("li",null,[a(p,{to:"#libmdbx-\u662F\u4EC0\u4E48"},{default:o(()=>[v]),_:1})]),n("li",null,[a(p,{to:"#\u4F7F\u7528\u6559\u7A0B"},{default:o(()=>[E]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u5982\u4F55\u8FD0\u884C\u793A\u4F8B"},{default:o(()=>[B]),_:1})]),n("li",null,[a(p,{to:"#\u793A\u4F8B-1-\u5199-set-key-val-\u548C-\u8BFB-get-key"},{default:o(()=>[D]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u4EE3\u7801"},{default:o(()=>[q]),_:1})]),n("li",null,[a(p,{to:"#\u8FD0\u884C\u8F93\u51FA"},{default:o(()=>[T]),_:1})]),n("li",null,[a(p,{to:"#\u4EE3\u7801\u8BF4\u660E"},{default:o(()=>[M]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#env-rw-\u5B9A\u4E49\u6570\u636E\u5E93"},{default:o(()=>[R]),_:1})]),n("li",null,[a(p,{to:"#\u5B8F\u5C55\u5F00"},{default:o(()=>[S]),_:1})]),n("li",null,[a(p,{to:"#anyhow-\u548C-lazy-static"},{default:o(()=>[X]),_:1})]),n("li",null,[a(p,{to:"#\u5B8F-mdbx"},{default:o(()=>[C]),_:1})]),n("li",null,[a(p,{to:"#\u7EBF\u7A0B\u4E0E\u4E8B\u52A1"},{default:o(()=>[A]),_:1})]),n("li",null,[a(p,{to:"#\u8BFB\u5199\u4E8C\u8FDB\u5236\u6570\u636E"},{default:o(()=>[N]),_:1})])])])])]),n("li",null,[a(p,{to:"#\u793A\u4F8B-2-\u6570\u636E\u7C7B\u578B\u3001\u6570\u636E\u5E93\u6807\u5FD7-\u3001\u5220\u9664\u3001\u904D\u5386"},{default:o(()=>[P]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u4EE3\u7801-1"},{default:o(()=>[O]),_:1})]),n("li",null,[a(p,{to:"#\u8FD0\u884C\u8F93\u51FA-1"},{default:o(()=>[U]),_:1})]),n("li",null,[a(p,{to:"#\u5FEB\u6377\u8BFB\u5199"},{default:o(()=>[I]),_:1})]),n("li",null,[a(p,{to:"#\u6570\u636E\u7C7B\u578B"},{default:o(()=>[L]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u9884\u7F6E\u6570\u636E\u7C7B\u578B"},{default:o(()=>[F]),_:1})])])]),n("li",null,[a(p,{to:"#\u6570\u636E\u5E93\u6807\u5FD7"},{default:o(()=>[z]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#dupsort-\u4E00\u4E2A\u952E\u5BF9\u5E94\u591A\u4E2A\u503C"},{default:o(()=>[V]),_:1})]),n("li",null,[a(p,{to:"#dup-key-\u8FD4\u56DE\u67D0\u952E\u6240\u6709\u5BF9\u5E94\u7684\u503C\u7684\u8FED\u4EE3\u5668"},{default:o(()=>[Y]),_:1})]),n("li",null,[a(p,{to:"#\u9ED8\u8BA4\u81EA\u52A8\u8FFD\u52A0\u7684\u6570\u636E\u5E93\u6807\u5FD7"},{default:o(()=>[$]),_:1})])])]),n("li",null,[a(p,{to:"#\u5220\u9664\u6570\u636E"},{default:o(()=>[G]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#del-key-\u5220\u9664\u952E"},{default:o(()=>[K]),_:1})]),n("li",null,[a(p,{to:"#del-val-key-val-\u7CBE\u786E\u5339\u914D\u7684\u5220\u9664"},{default:o(()=>[W]),_:1})])])]),n("li",null,[a(p,{to:"#\u904D\u5386"},{default:o(()=>[j]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u987A\u5E8F\u904D\u5386"},{default:o(()=>[H]),_:1})]),n("li",null,[a(p,{to:"#rev-\u5012\u5E8F\u904D\u5386"},{default:o(()=>[J]),_:1})]),n("li",null,[a(p,{to:"#\u6392\u5E8F\u65B9\u5F0F"},{default:o(()=>[Q]),_:1})])])])])]),n("li",null,[a(p,{to:"#\u533A\u95F4\u8FED\u4EE3\u5668"},{default:o(()=>[Z]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u8FD0\u884C\u8F93\u51FA-2"},{default:o(()=>[nn]),_:1})]),n("li",null,[a(p,{to:"#range-begin-end-\u533A\u95F4\u8FED\u4EE3"},{default:o(()=>[sn]),_:1})]),n("li",null,[a(p,{to:"#rev-range-\u5012\u5E8F\u533A\u95F4"},{default:o(()=>[an]),_:1})])])]),n("li",null,[a(p,{to:"#\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B"},{default:o(()=>[tn]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u7528\u5C5E\u6027\u5F0F\u5B8F\u7B80\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B"},{default:o(()=>[pn]),_:1})])])])])]),n("li",null,[a(p,{to:"#\u4F7F\u7528\u6CE8\u610F"},{default:o(()=>[on]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u952E\u7684\u957F\u5EA6"},{default:o(()=>[en]),_:1})])])]),n("li",null,[a(p,{to:"#\u811A\u6CE8"},{default:o(()=>[cn]),_:1})])])]),ln,un,n("p",null,[kn,n("a",rn,[dn,a(t)]),_n]),hn,n("p",null,[mn,n("a",bn,[gn,a(t)]),fn]),yn,xn,n("p",null,[wn,vn,En,Bn,Dn,n("a",qn,[Tn,a(t)]),Mn]),Rn,n("p",null,[n("a",Sn,[Xn,a(t)]),Cn,n("a",An,[Nn,a(t)]),Pn]),n("p",null,[n("a",On,[Un,a(t)]),In]),n("p",null,[Ln,n("a",Fn,[zn,a(t)]),Vn]),n("p",null,[n("a",Yn,[$n,a(t)]),Gn]),n("p",null,[n("a",Kn,[Wn,a(t)]),jn]),Hn,n("p",null,[Jn,n("a",Qn,[Zn,a(t)]),ns,ss,as]),ts,n("p",null,[ps,n("a",os,[es,a(t)])]),cs,n("ol",null,[ls,n("li",null,[n("p",null,[us,n("a",is,[ks,a(t)]),rs]),ds,n("p",null,[_s,hs,n("a",ms,[bs,a(t)]),gs]),n("p",null,[fs,n("a",ys,[xs,a(t)]),ws])]),vs,Es]),Bs,n("p",null,[n("a",Ds,[qs,a(t)]),Ts]),n("p",null,[n("a",Ms,[Rs,a(t)]),Ss]),Xs,Cs,n("p",null,[n("a",As,[Ns,a(t)]),Ps,n("a",Os,[Us,a(t)]),Is]),Ls,n("p",null,[Fs,zs,Vs,Ys,n("a",$s,[Gs,a(t)]),Ks]),Ws,js,n("p",null,[Hs,n("a",Js,[Qs,a(t)]),Zs]),na,n("p",null,[sa,n("a",aa,[ta,a(t)]),pa]),oa,n("p",null,[ea,n("a",ca,[la,a(t)]),ua]),ia,n("p",null,[ka,n("a",ra,[da,a(t)]),_a,ha,ma]),n("p",null,[ba,ga,fa,n("a",ya,[xa,a(t)]),wa]),n("p",null,[va,Ea,Ba,n("a",Da,[qa,a(t)]),Ta,Ma,Ra]),n("p",null,[Sa,Xa,Ca,n("a",Aa,[Na,a(t)]),Pa,Oa,Ua]),Ia,n("p",null,[La,Fa,za,Va,Ya,n("a",$a,[Ga,a(t)]),Ka]),Wa,n("p",null,[ja,n("a",Ha,[Ja,a(t)]),Qa,Za,nt,st]),n("p",null,[at,n("a",tt,[pt,a(t)]),ot]),et,n("p",null,[ct,lt,ut,it,kt,rt,dt,n("a",_t,[ht,a(t)]),mt]),n("p",null,[bt,n("a",gt,[ft,a(t)]),yt]),xt,n("p",null,[wt,n("a",vt,[Et,a(t)]),Bt]),Dt,qt,Tt,Mt,n("p",null,[Rt,n("a",St,[Xt,a(t)]),Ct]),At,n("p",null,[Nt,n("a",Pt,[Ot,a(t)]),Ut,It,Lt,Ft,zt]),Vt,n("p",null,[Yt,n("a",$t,[Gt,a(t)])]),Kt,n("p",null,[Wt,n("a",jt,[Ht,a(t)]),Jt,n("a",Qt,[Zt,np,a(t)]),sp]),n("p",null,[ap,n("a",tp,[pp,a(t)]),op,n("a",ep,[cp,a(t)]),lp,up,ip]),n("p",null,[kp,n("a",rp,[dp,a(t)]),_p]),hp,n("p",null,[mp,n("a",bp,[gp,a(t)]),fp]),yp,n("p",null,[xp,wp,vp,n("a",Ep,[Bp,a(t)]),Dp]),qp,n("p",null,[Tp,Mp,Rp,n("a",Sp,[Xp,a(t)]),Cp]),Ap,n("blockquote",null,[Np,Pp,n("ol",null,[Op,Up,n("li",null,[n("p",null,[Ip,n("a",Lp,[Fp,a(t)]),zp,n("a",Vp,[Yp,a(t)])])]),$p,Gp,Kp])]),Wp,n("section",jp,[n("ol",Hp,[n("li",Jp,[n("p",null,[n("a",Qp,[Zp,a(t)]),no,so])])])])],64)}var eo=l(r,[["render",ao],["__file","2021-12-21-mdbx.html.vue"]]);export{eo as default};
